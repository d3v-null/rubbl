<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="ArrayOpsDiffShapes_8h" kind="file" language="C++">
    <compoundname>ArrayOpsDiffShapes.h</compoundname>
    <includes refid="ArrayMath_8h" local="yes">ArrayMath.h</includes>
    <includes refid="ArrayLogical_8h" local="yes">ArrayLogical.h</includes>
    <includes refid="IPosition_8h" local="yes">IPosition.h</includes>
    <includes refid="ArrayOpsDiffShapes_8tcc" local="yes">ArrayOpsDiffShapes.tcc</includes>
    <includedby refid="ArrayOpsDiffShapes_8cc" local="yes">casa/Arrays/ArrayOpsDiffShapes.cc</includedby>
    <incdepgraph>
      <node id="30">
        <label>ArrayMath.tcc</label>
        <link refid="ArrayMath_8tcc"/>
      </node>
      <node id="28">
        <label>functional</label>
      </node>
      <node id="19">
        <label>iterator</label>
      </node>
      <node id="24">
        <label>ArrayStr.tcc</label>
        <link refid="ArrayStr_8tcc"/>
      </node>
      <node id="3">
        <label>Array.h</label>
        <link refid="Array_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>cassert</label>
      </node>
      <node id="13">
        <label>stdexcept</label>
      </node>
      <node id="29">
        <label>numeric</label>
      </node>
      <node id="14">
        <label>string</label>
      </node>
      <node id="21">
        <label>ArrayStr.h</label>
        <link refid="ArrayStr_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>ArrayLogical.h</label>
        <link refid="ArrayLogical_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>ArrayError.h</label>
        <link refid="ArrayError_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>ostream</label>
      </node>
      <node id="33">
        <label>ArrayLogical.tcc</label>
        <link refid="ArrayLogical_8tcc"/>
      </node>
      <node id="2">
        <label>ArrayMath.h</label>
        <link refid="ArrayMath_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>sys/types.h</label>
      </node>
      <node id="16">
        <label>Storage.h</label>
        <link refid="Storage_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>IPosition.h</label>
        <link refid="IPosition_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>Array.tcc</label>
        <link refid="Array_8tcc"/>
      </node>
      <node id="8">
        <label>vector</label>
      </node>
      <node id="34">
        <label>ArrayOpsDiffShapes.tcc</label>
        <link refid="ArrayOpsDiffShapes_8tcc"/>
      </node>
      <node id="32">
        <label>ArrayMathBase.h</label>
        <link refid="ArrayMathBase_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>casa/Arrays/ArrayOpsDiffShapes.h</label>
        <link refid="ArrayOpsDiffShapes_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>cstddef</label>
      </node>
      <node id="20">
        <label>type_traits</label>
      </node>
      <node id="18">
        <label>complex</label>
      </node>
      <node id="26">
        <label>algorithm</label>
      </node>
      <node id="6">
        <label>ArrayFwd.h</label>
        <link refid="ArrayFwd_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>ArrayBase.h</label>
        <link refid="ArrayBase_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>cstring</label>
      </node>
      <node id="7">
        <label>memory</label>
      </node>
      <node id="22">
        <label>istream</label>
      </node>
      <node id="10">
        <label>initializer_list</label>
      </node>
      <node id="15">
        <label>MaskLogiArrFwd.h</label>
        <link refid="MaskLogiArrFwd_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>casa/Arrays/ArrayOpsDiffShapes.cc</label>
        <link refid="ArrayOpsDiffShapes_8cc"/>
      </node>
      <node id="1">
        <label>casa/Arrays/ArrayOpsDiffShapes.h</label>
        <link refid="ArrayOpsDiffShapes_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespacecasacore">casacore</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//#<sp/>ArrayOpsDiffShapes.h:<sp/>Operations<sp/>for<sp/>2<sp/>Arrays<sp/>with<sp/>possibly<sp/>different<sp/>shapes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>Copyright<sp/>(C)<sp/>2009</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>Associated<sp/>Universities,<sp/>Inc.<sp/>Washington<sp/>DC,<sp/>USA.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>This<sp/>program<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>2<sp/>of<sp/>the<sp/>License,<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//#<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>along<sp/>with<sp/>this<sp/>program;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>Foundation,<sp/>Inc.,<sp/>675<sp/>Mass<sp/>Ave,<sp/>Cambridge,<sp/>MA<sp/>02139,<sp/>USA.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>Correspondence<sp/>concerning<sp/>AIPS++<sp/>should<sp/>be<sp/>addressed<sp/>as<sp/>follows:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Internet<sp/>email:<sp/>casa-feedback@nrao.edu.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Postal<sp/>address:<sp/>AIPS++<sp/>Project<sp/>Office</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>National<sp/>Radio<sp/>Astronomy<sp/>Observatory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>520<sp/>Edgemont<sp/>Road</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Charlottesville,<sp/>VA<sp/>22903-2475<sp/>USA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>CASA_ARRAYOPSDIFFSHAPES_2_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CASA_ARRAYOPSDIFFSHAPES_2_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ArrayMath_8h" kindref="compound">ArrayMath.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ArrayLogical_8h" kindref="compound">ArrayLogical.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="IPosition_8h" kindref="compound">IPosition.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>Don&apos;t<sp/>forget<sp/>a<sp/>.tcc<sp/>file<sp/>is<sp/>included<sp/>at<sp/>the<sp/>end!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacecasacore" kindref="compound">casacore</ref><sp/>{<sp/></highlight><highlight class="comment">//#<sp/>NAMESPACE<sp/>CASACORE<sp/>-<sp/>BEGIN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;summary&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>Operations<sp/>for<sp/>2<sp/>Arrays<sp/>with<sp/>possibly<sp/>different<sp/>shapes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;/summary&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;!--<sp/>&lt;reviewed<sp/>reviewer=&quot;UNKNOWN&quot;<sp/>date=&quot;&quot;<sp/>tests=&quot;&quot;&gt;<sp/>--&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;prerequisite&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>&lt;li&gt;<sp/>&lt;linkto<sp/>class=Array&gt;Array&lt;/linkto&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>&lt;li&gt;<sp/>&lt;linkto&gt;ArrayMath&lt;/linkto&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;/prerequisite&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;etymology&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>file<sp/>contains<sp/>global<sp/>functions<sp/>that<sp/>attempt<sp/>binary<sp/>operations<sp/>with</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">//<sp/>arrays<sp/>that<sp/>have<sp/>possibly<sp/>differing<sp/>shapes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;/etymology&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;synopsis&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">//<sp/>These<sp/>functions<sp/>perform<sp/>operations<sp/>on<sp/>two<sp/>arrays,<sp/>left<sp/>and<sp/>right,<sp/>which<sp/>go</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">//<sp/>chunk<sp/>by<sp/>chunk<sp/>in<sp/>left<sp/>and<sp/>element<sp/>by<sp/>element<sp/>in<sp/>right,<sp/>as<sp/>long<sp/>as<sp/>right</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">//<sp/>spans<sp/>a<sp/>subspace<sp/>of<sp/>left.<sp/><sp/>If<sp/>left&apos;s<sp/>shape<sp/>has<sp/>more<sp/>dimensions<sp/>than<sp/>right&apos;s,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">//<sp/>each<sp/>entry<sp/>in<sp/>right<sp/>will<sp/>effectively<sp/>be<sp/>replicated<sp/>as<sp/>necessary<sp/>to<sp/>act<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">//<sp/>each<sp/>entry<sp/>in<sp/>the<sp/>corresponding<sp/>chunk<sp/>of<sp/>left.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="comment">//<sp/>e.g.<sp/>if<sp/>left&apos;s<sp/>shape<sp/>is<sp/>(256,<sp/>256,<sp/>1,<sp/>4),<sp/>and<sp/>right&apos;s<sp/>is<sp/>(256,<sp/>256),<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">//<sp/>left(i,<sp/>j,<sp/>1,<sp/>l)<sp/>will<sp/>be<sp/>operated<sp/>on<sp/>with<sp/>right(i,<sp/>j)<sp/>for<sp/>i<sp/>&amp;<sp/>j<sp/>from<sp/>0<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="comment">//<sp/>255<sp/>and<sp/>l<sp/>from<sp/>0<sp/>to<sp/>3.<sp/><sp/>Note<sp/>that<sp/>right<sp/>must<sp/>be<sp/>either<sp/>reformable<sp/>to<sp/>left&apos;s</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="comment">//<sp/>shape<sp/>(same<sp/>#<sp/>of<sp/>elements)<sp/>or<sp/>its<sp/>shape<sp/>must<sp/>equal<sp/>left&apos;s<sp/>shape<sp/>&quot;as<sp/>far<sp/>as</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="comment">//<sp/>it<sp/>goes&quot;,<sp/>i.e.<sp/>where<sp/>right&apos;s<sp/>dimensions<sp/>are<sp/>defined.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;/synopsis&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;example&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;srcblock&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Array&lt;Complex&gt;<sp/>a(10,<sp/>6);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Vector&lt;int&gt;<sp/><sp/><sp/><sp/>b(10);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Array&lt;Complex&gt;<sp/>c(10,<sp/>6);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>c<sp/>=<sp/>binOpExpandR(a,<sp/>b,<sp/>std::plus&lt;Complex&gt;());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;/srcblock&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>example<sp/>sets<sp/>c(i,<sp/>j)<sp/>to<sp/>a(i,<sp/>j)<sp/>+<sp/>b(i).<sp/><sp/>It<sp/>checks<sp/>that<sp/>either<sp/>b&apos;s</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="comment">//<sp/>shape<sp/>can<sp/>be<sp/>reformed<sp/>to<sp/>a&apos;s<sp/>(same<sp/>#<sp/>of<sp/>elements)<sp/>or<sp/>that<sp/>a&apos;s<sp/>shape<sp/>is<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="comment">//<sp/>same<sp/>as<sp/>b&apos;s<sp/>where<sp/>b&apos;s<sp/>dimensions<sp/>are<sp/>defined.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>result<sp/>of<sp/>this<sp/>operation<sp/>is<sp/>an<sp/>Array.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;/example&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;group<sp/>name=OpsDiff_functions&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>a<sp/>LogicalArray<sp/>with<sp/>elements<sp/>(at<sp/>pos)<sp/>set<sp/>to<sp/>(data(pos)<sp/>==</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="comment">//<sp/>truthvalue).<sp/><sp/>data<sp/>is<sp/>effectively<sp/>collapsed<sp/>using<sp/>anyEQ<sp/>if<sp/>necessary<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="comment">//<sp/>fit<sp/>desiredform.<sp/><sp/>Throws<sp/>an<sp/>exception<sp/>if<sp/>that<sp/>does<sp/>not<sp/>work.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="85" refid="namespacecasacore_1a28c1af0c8b188c731b29b1b5577c18f0" refkind="member"><highlight class="normal"><ref refid="classcasacore_1_1Array" kindref="compound">LogicalArray</ref><sp/><ref refid="namespacecasacore_1a28c1af0c8b188c731b29b1b5577c18f0" kindref="member">reformedMask</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcasacore_1_1Array" kindref="compound">Array&lt;T&gt;</ref>&amp;<sp/>data,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>truthvalue,</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcasacore_1_1IPosition" kindref="compound">IPosition</ref>&amp;<sp/>desiredform);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Can<sp/>arrays<sp/>left<sp/>and<sp/>right<sp/>with<sp/>respective<sp/>shapes<sp/>leftShape<sp/>and<sp/>rightShape<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="comment">//<sp/>used<sp/>in<sp/>function(left,<sp/>right,<sp/>...)<sp/>for<sp/>the<sp/>other<sp/>functions<sp/>declared<sp/>here?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacecasacore_1a6bb4f13c11e4bdca246a4a059ad672ec" kindref="member">rightExpandableToLeft</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcasacore_1_1IPosition" kindref="compound">IPosition</ref>&amp;<sp/>leftShape,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcasacore_1_1IPosition" kindref="compound">IPosition</ref>&amp;<sp/>rightShape);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Apply<sp/>op<sp/>elementwise<sp/>to<sp/>left<sp/>and<sp/>right,<sp/>replicating<sp/>elements<sp/>of<sp/>right<sp/>as</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="comment">//<sp/>necessary<sp/>(see<sp/>example<sp/>above).<sp/><sp/>Throws<sp/>an<sp/>ArrayConformanceError<sp/>exception<sp/>if</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="comment">//<sp/>that<sp/>cannot<sp/>be<sp/>done.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Currently<sp/>assumes<sp/>that<sp/>it<sp/>is<sp/>the<sp/>trailing<sp/>axes<sp/>of<sp/>left<sp/>that<sp/>right<sp/>will<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="comment">//<sp/>replicated<sp/>along.<sp/><sp/>e.g.<sp/>if<sp/>left&apos;s<sp/>shape<sp/>is<sp/>(1,<sp/>2,<sp/>4)<sp/>and<sp/>right&apos;s<sp/>is<sp/>(1,<sp/>2),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>result<sp/>will<sp/>be<sp/>left(i,<sp/>j,<sp/>k)<sp/>op<sp/>right(i,<sp/>j)<sp/>for<sp/>all<sp/>(i,<sp/>j,<sp/>k).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>template&lt;typename<sp/>L,<sp/>typename<sp/>R,<sp/>typename<sp/>BinaryOperator,<sp/>typename<sp/>RES&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>Array&lt;RES&gt;<sp/>binOpExpandR(const<sp/>Array&lt;L&gt;&amp;<sp/>left,<sp/>const<sp/>Array&lt;R&gt;&amp;<sp/>right,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="comment">//#<sp/><sp/><sp/><sp/><sp/><sp/><sp/>BinaryOperator<sp/>op);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Like<sp/>binOpExpandR(left,<sp/>right,<sp/>res,<sp/>op),<sp/>but<sp/>work<sp/>on<sp/>left<sp/>in<sp/>place.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>L,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>BinaryOperator&gt;</highlight></codeline>
<codeline lineno="106" refid="namespacecasacore_1ab7d6b68f54a53029168c8673fb6591c6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacecasacore_1ab7d6b68f54a53029168c8673fb6591c6" kindref="member">binOpExpandInPlace</ref>(<ref refid="classcasacore_1_1Array" kindref="compound">Array&lt;L&gt;</ref>&amp;<sp/>left,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcasacore_1_1Array" kindref="compound">Array&lt;R&gt;</ref>&amp;<sp/>right,<sp/>BinaryOperator<sp/>op);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;/group&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal">}<sp/></highlight><highlight class="comment">//#End<sp/>casa<sp/>namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ArrayOpsDiffShapes_8tcc" kindref="compound">ArrayOpsDiffShapes.tcc</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="casa/Arrays/ArrayOpsDiffShapes.h"/>
  </compounddef>
</doxygen>
