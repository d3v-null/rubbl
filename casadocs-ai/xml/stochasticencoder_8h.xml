<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="stochasticencoder_8h" kind="file" language="C++">
    <compoundname>stochasticencoder.h</compoundname>
    <includes refid="uvector_8h" local="yes">uvector.h</includes>
    <includes local="no">algorithm</includes>
    <includes local="no">cmath</includes>
    <includes local="no">cstring</includes>
    <includedby refid="aftimeblockencoder_8h" local="yes">tables/Dysco/aftimeblockencoder.h</includedby>
    <includedby refid="dyscodatacolumn_8h" local="yes">tables/Dysco/dyscodatacolumn.h</includedby>
    <includedby refid="dyscoweightcolumn_8h" local="yes">tables/Dysco/dyscoweightcolumn.h</includedby>
    <includedby refid="rftimeblockencoder_8cc" local="yes">tables/Dysco/rftimeblockencoder.cc</includedby>
    <includedby refid="rftimeblockencoder_8h" local="yes">tables/Dysco/rftimeblockencoder.h</includedby>
    <includedby refid="rowtimeblockencoder_8cc" local="yes">tables/Dysco/rowtimeblockencoder.cc</includedby>
    <includedby refid="rowtimeblockencoder_8h" local="yes">tables/Dysco/rowtimeblockencoder.h</includedby>
    <includedby refid="stochasticencoder_8cc" local="yes">tables/Dysco/stochasticencoder.cc</includedby>
    <includedby refid="testtimeblockencoder_8cc" local="yes">tables/Dysco/tests/testtimeblockencoder.cc</includedby>
    <includedby refid="threadeddyscocolumn_8h" local="yes">tables/Dysco/threadeddyscocolumn.h</includedby>
    <includedby refid="timeblockencoder_8h" local="yes">tables/Dysco/timeblockencoder.h</includedby>
    <incdepgraph>
      <node id="5">
        <label>iterator</label>
      </node>
      <node id="9">
        <label>cmath</label>
      </node>
      <node id="2">
        <label>uvector.h</label>
        <link refid="uvector_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>stdexcept</label>
      </node>
      <node id="7">
        <label>utility</label>
      </node>
      <node id="1">
        <label>tables/Dysco/stochasticencoder.h</label>
        <link refid="stochasticencoder_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>algorithm</label>
      </node>
      <node id="4">
        <label>cstring</label>
      </node>
      <node id="6">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="7">
        <label>tables/Dysco/dyscostman.cc</label>
        <link refid="dyscostman_8cc"/>
      </node>
      <node id="6">
        <label>tables/Dysco/dyscodatacolumn.h</label>
        <link refid="dyscodatacolumn_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>tables/Dysco/threadeddyscocolumn.h</label>
        <link refid="threadeddyscocolumn_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>tables/Dysco/aftimeblockencoder.h</label>
        <link refid="aftimeblockencoder_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>tables/Dysco/rftimeblockencoder.h</label>
        <link refid="rftimeblockencoder_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>tables/Dysco/dyscodatacolumn.cc</label>
        <link refid="dyscodatacolumn_8cc"/>
      </node>
      <node id="9">
        <label>tables/Dysco/dyscoweightcolumn.cc</label>
        <link refid="dyscoweightcolumn_8cc"/>
      </node>
      <node id="16">
        <label>tables/Dysco/threadeddyscocolumn.cc</label>
        <link refid="threadeddyscocolumn_8cc"/>
      </node>
      <node id="3">
        <label>tables/Dysco/aftimeblockencoder.cc</label>
        <link refid="aftimeblockencoder_8cc"/>
      </node>
      <node id="17">
        <label>tables/Dysco/timeblockencoder.h</label>
        <link refid="timeblockencoder_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>tables/Dysco/dyscoweightcolumn.h</label>
        <link refid="dyscoweightcolumn_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>tables/Dysco/rowtimeblockencoder.h</label>
        <link refid="rowtimeblockencoder_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>tables/Dysco/rowtimeblockencoder.cc</label>
        <link refid="rowtimeblockencoder_8cc"/>
      </node>
      <node id="5">
        <label>tables/Dysco/tests/testtimeblockencoder.cc</label>
        <link refid="testtimeblockencoder_8cc"/>
      </node>
      <node id="14">
        <label>tables/Dysco/stochasticencoder.cc</label>
        <link refid="stochasticencoder_8cc"/>
      </node>
      <node id="1">
        <label>tables/Dysco/stochasticencoder.h</label>
        <link refid="stochasticencoder_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>tables/Dysco/rftimeblockencoder.cc</label>
        <link refid="rftimeblockencoder_8cc"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classdyscostman_1_1StochasticEncoder" prot="public">dyscostman::StochasticEncoder</innerclass>
    <innerclass refid="classdyscostman_1_1StochasticEncoder_1_1Dictionary" prot="private">dyscostman::StochasticEncoder::Dictionary</innerclass>
    <innernamespace refid="namespacedyscostman">dyscostman</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>DYSCO_STOCHASTIC_ENCODER_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DYSCO_STOCHASTIC_ENCODER_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="uvector_8h" kindref="compound">uvector.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstring&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacedyscostman" kindref="compound">dyscostman</ref><sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ValueType<sp/>=<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="32" refid="classdyscostman_1_1StochasticEncoder" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classdyscostman_1_1StochasticEncoder" kindref="compound">StochasticEncoder</ref><sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><ref refid="classdyscostman_1_1StochasticEncoder_1a8e17dc6291bafe59c35b394c039fc8e2" kindref="member">StochasticEncoder</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>quantCount,<sp/>ValueType<sp/><ref refid="namespacecasacore_1abad84c655c6d6ed132da25c735092bd4" kindref="member">stddev</ref>,</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>gaussianMapping<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="classdyscostman_1_1StochasticEncoder_1a96d4df7fa041788cb20b1744fd5e6db4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classdyscostman_1_1StochasticEncoder" kindref="compound">StochasticEncoder</ref><sp/><ref refid="classdyscostman_1_1StochasticEncoder_1a96d4df7fa041788cb20b1744fd5e6db4" kindref="member">StudentTEncoder</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>quantCount,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>nu,</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacecasacore_1a8da3f53b6419752b499f98dc2a59f0d3" kindref="member">rms</ref>)<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdyscostman_1_1StochasticEncoder" kindref="compound">StochasticEncoder&lt;ValueType&gt;</ref><sp/>encoder(quantCount);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>encoder.initializeStudentT(nu,<sp/><ref refid="namespacecasacore_1a8da3f53b6419752b499f98dc2a59f0d3" kindref="member">rms</ref>);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>encoder;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="classdyscostman_1_1StochasticEncoder_1afc30fd104da7a6de3dfd92dfe5686a9a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classdyscostman_1_1StochasticEncoder" kindref="compound">StochasticEncoder</ref><sp/><ref refid="classdyscostman_1_1StochasticEncoder_1afc30fd104da7a6de3dfd92dfe5686a9a" kindref="member">TruncatedGausEncoder</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>quantCount,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>trunc,</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacecasacore_1a8da3f53b6419752b499f98dc2a59f0d3" kindref="member">rms</ref>)<sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdyscostman_1_1StochasticEncoder" kindref="compound">StochasticEncoder&lt;ValueType&gt;</ref><sp/>encoder(quantCount);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>encoder.initializeTruncatedGaussian(trunc,<sp/><ref refid="namespacecasacore_1a8da3f53b6419752b499f98dc2a59f0d3" kindref="member">rms</ref>);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>encoder;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="classdyscostman_1_1StochasticEncoder_1acba65b23c38d1650fcdb6953d843eaba" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="classdyscostman_1_1StochasticEncoder_1acba65b23c38d1650fcdb6953d843eaba" kindref="member">symbol_t</ref>;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="classdyscostman_1_1StochasticEncoder_1ac9f64635f91f6a6b2cf4a8cebf5db2c5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>ValueType<sp/><ref refid="classdyscostman_1_1StochasticEncoder_1ac9f64635f91f6a6b2cf4a8cebf5db2c5" kindref="member">value_t</ref>;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="classdyscostman_1_1StochasticEncoder_1a626e354453b71ef62e2adbe9f9d87cf3" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classdyscostman_1_1StochasticEncoder_1acba65b23c38d1650fcdb6953d843eaba" kindref="member">symbol_t</ref><sp/><ref refid="classdyscostman_1_1StochasticEncoder_1a626e354453b71ef62e2adbe9f9d87cf3" kindref="member">Encode</ref>(ValueType<sp/>value)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespacecasacore_1_1arrays__internal_1a3cf71da9c9565e64651036e50ee046fd" kindref="member">std::isfinite</ref>(value))</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_encDictionary.symbol(_encDictionary.lower_bound(value));</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classdyscostman_1_1StochasticEncoder_1a678b5f2482869a604b14e47e63e9f654" kindref="member">QuantizationCount</ref>()<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="classdyscostman_1_1StochasticEncoder_1a526b6a60b845ee128878cf7b8f7e3fe7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::uniform_int_distribution&lt;unsigned&gt;<sp/><ref refid="classdyscostman_1_1StochasticEncoder_1a526b6a60b845ee128878cf7b8f7e3fe7" kindref="member">GetDitherDistribution</ref>()<sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::uniform_int_distribution&lt;unsigned&gt;(0,<sp/>((1u<sp/>&lt;&lt;<sp/>31)<sp/>-<sp/>1));</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="103" refid="classdyscostman_1_1StochasticEncoder_1ac0bb79f9d0c710f2e83459872215b77c" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classdyscostman_1_1StochasticEncoder_1acba65b23c38d1650fcdb6953d843eaba" kindref="member">symbol_t</ref><sp/><ref refid="classdyscostman_1_1StochasticEncoder_1ac0bb79f9d0c710f2e83459872215b77c" kindref="member">EncodeWithDithering</ref>(ValueType<sp/>value,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>ditherValue)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespacecasacore_1_1arrays__internal_1a3cf71da9c9565e64651036e50ee046fd" kindref="member">std::isfinite</ref>(value))<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Dictionary::const_iterator<sp/>lowerBound<sp/>=</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_decDictionary.lower_bound(value);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lowerBound<sp/>==<sp/>_decDictionary.begin())</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_decDictionary.symbol(lowerBound);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lowerBound<sp/>==<sp/>_decDictionary.end())</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_decDictionary.symbol(lowerBound<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ValueType<sp/>rightValue<sp/>=<sp/>_decDictionary.value(lowerBound);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ValueType<sp/>leftValue<sp/>=<sp/>_decDictionary.value(lowerBound<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ValueType<sp/>ditherMark<sp/>=</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ValueType(1u<sp/>&lt;&lt;<sp/>31)<sp/>*<sp/>(value<sp/>-<sp/>leftValue)<sp/>/<sp/>(rightValue<sp/>-<sp/>leftValue);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ditherMark<sp/>&gt;<sp/>ditherValue)</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_decDictionary.symbol(lowerBound);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_decDictionary.symbol(lowerBound<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_encDictionary.size();</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="131" refid="classdyscostman_1_1StochasticEncoder_1a16f43c68d21cf532ed405b26b04a6f19" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classdyscostman_1_1StochasticEncoder_1ac9f64635f91f6a6b2cf4a8cebf5db2c5" kindref="member">value_t</ref><sp/><ref refid="classdyscostman_1_1StochasticEncoder_1a16f43c68d21cf532ed405b26b04a6f19" kindref="member">RightBoundary</ref>(<ref refid="classdyscostman_1_1StochasticEncoder_1acba65b23c38d1650fcdb6953d843eaba" kindref="member">symbol_t</ref><sp/>symbol)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(symbol<sp/>!=<sp/>_encDictionary.size())</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_encDictionary.value(symbol);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.0;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="143" refid="classdyscostman_1_1StochasticEncoder_1ae8ef6e1adbf23d8db19ff8fd6383de01" refkind="member"><highlight class="normal"><sp/><sp/>ValueType<sp/><ref refid="classdyscostman_1_1StochasticEncoder_1ae8ef6e1adbf23d8db19ff8fd6383de01" kindref="member">Decode</ref>(<ref refid="classdyscostman_1_1StochasticEncoder_1acba65b23c38d1650fcdb6953d843eaba" kindref="member">symbol_t</ref><sp/>symbol)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_decDictionary.value(symbol);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147" refid="classdyscostman_1_1StochasticEncoder_1a678b5f2482869a604b14e47e63e9f654" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classdyscostman_1_1StochasticEncoder_1a678b5f2482869a604b14e47e63e9f654" kindref="member">QuantizationCount</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_decDictionary.size()<sp/>+<sp/>1;<sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149" refid="classdyscostman_1_1StochasticEncoder_1a43fe5825d91654232952af5c85621461" refkind="member"><highlight class="normal"><sp/><sp/>ValueType<sp/><ref refid="classdyscostman_1_1StochasticEncoder_1a43fe5825d91654232952af5c85621461" kindref="member">MaxQuantity</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_decDictionary.largest_value();<sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151" refid="classdyscostman_1_1StochasticEncoder_1a93628b84f6f7062a7383c66c0cfeac62" refkind="member"><highlight class="normal"><sp/><sp/>ValueType<sp/><ref refid="classdyscostman_1_1StochasticEncoder_1a93628b84f6f7062a7383c66c0cfeac62" kindref="member">MinQuantity</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_decDictionary.smallest_value();<sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classdyscostman_1_1StochasticEncoder_1a8e17dc6291bafe59c35b394c039fc8e2" kindref="member">StochasticEncoder</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>quantCount)</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>_encDictionary(quantCount<sp/>-<sp/>1),<sp/>_decDictionary(quantCount<sp/>-<sp/>1)<sp/>{}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>initializeStudentT(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>nu,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacecasacore_1a8da3f53b6419752b499f98dc2a59f0d3" kindref="member">rms</ref>);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>initializeTruncatedGaussian(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>truncationValue,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacecasacore_1a8da3f53b6419752b499f98dc2a59f0d3" kindref="member">rms</ref>);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Dictionary<sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classdyscostman_1_1StochasticEncoder_1ac9f64635f91f6a6b2cf4a8cebf5db2c5" kindref="member">value_t</ref><sp/>*iterator;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdyscostman_1_1StochasticEncoder_1ac9f64635f91f6a6b2cf4a8cebf5db2c5" kindref="member">value_t</ref><sp/>*const_iterator;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>Dictionary()<sp/>:<sp/>_values()<sp/>{}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/>Dictionary(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size)<sp/>:<sp/>_values(size)<sp/>{}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>reserve(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size)<sp/>{<sp/>_values.reserve(size);<sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>resize(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size)<sp/>{<sp/>_values.resize(size);<sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>const_iterator<sp/>lower_bound(<ref refid="classdyscostman_1_1StochasticEncoder_1ac9f64635f91f6a6b2cf4a8cebf5db2c5" kindref="member">value_t</ref><sp/>val)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>p<sp/>=<sp/>0,<sp/>q<sp/>=<sp/>_values.size();</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>m<sp/>=<sp/>(p<sp/>+<sp/>q)<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_values[m]<sp/>&lt;=<sp/>val)</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/>m;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q<sp/>=<sp/>m;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(p<sp/>+<sp/>1<sp/>!=<sp/>q)<sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>m<sp/>=<sp/>(p<sp/>+<sp/>q)<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_values[m]<sp/>&lt;=<sp/>val)</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/>m;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q<sp/>=<sp/>m;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(_values[p]<sp/>&lt;<sp/>val)<sp/>?<sp/>(&amp;_values[q])<sp/>:<sp/>(&amp;_values[p]);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>const_iterator<sp/>lower_bound_fast(<ref refid="classdyscostman_1_1StochasticEncoder_1ac9f64635f91f6a6b2cf4a8cebf5db2c5" kindref="member">value_t</ref><sp/>val)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>p<sp/>=<sp/>0,<sp/>q<sp/>=<sp/>_values.size();</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(p<sp/>+<sp/>1<sp/>!=<sp/>q)<sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>m<sp/>=<sp/>(p<sp/>+<sp/>q)<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_values[m]<sp/>&lt;=<sp/>val)</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/>m;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q<sp/>=<sp/>m;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(_values[p]<sp/>&lt;<sp/>val)<sp/>?<sp/>(&amp;_values[q])<sp/>:<sp/>(&amp;_values[p]);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>const_iterator<sp/>lower_bound_slow(<ref refid="classdyscostman_1_1StochasticEncoder_1ac9f64635f91f6a6b2cf4a8cebf5db2c5" kindref="member">value_t</ref><sp/>val)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdyscostman_1_1StochasticEncoder_1ac9f64635f91f6a6b2cf4a8cebf5db2c5" kindref="member">value_t</ref><sp/>*p<sp/>=<sp/>&amp;*_values.begin(),<sp/>*q<sp/>=<sp/>p<sp/>+<sp/>_values.size();</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(p<sp/>+<sp/>1<sp/>!=<sp/>q)<sp/>{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>a<sp/>bit<sp/>inefficient,<sp/>but<sp/>(p<sp/>+<sp/>q)/2<sp/>was<sp/>not<sp/>allowed,<sp/>because</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>operator+(ptr,ptr)<sp/>is<sp/>not<sp/>allowed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdyscostman_1_1StochasticEncoder_1ac9f64635f91f6a6b2cf4a8cebf5db2c5" kindref="member">value_t</ref><sp/>*m<sp/>=<sp/>p<sp/>+<sp/>(q<sp/>-<sp/>p)<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*m<sp/>&lt;=<sp/>val)</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/>m;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q<sp/>=<sp/>m;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>iterator<sp/>begin()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;*_values.begin();<sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>const_iterator<sp/>begin()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;*_values.begin();<sp/>}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>const_iterator<sp/>end()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;*_values.end();<sp/>}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdyscostman_1_1StochasticEncoder_1acba65b23c38d1650fcdb6953d843eaba" kindref="member">symbol_t</ref><sp/>symbol(const_iterator<sp/>iter)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(iter<sp/>-<sp/>begin());<sp/>}</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdyscostman_1_1StochasticEncoder_1acba65b23c38d1650fcdb6953d843eaba" kindref="member">symbol_t</ref><sp/>largest_symbol()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_values.size()<sp/>-<sp/>1;<sp/>}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdyscostman_1_1StochasticEncoder_1ac9f64635f91f6a6b2cf4a8cebf5db2c5" kindref="member">value_t</ref><sp/>value(const_iterator<sp/>iter)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*iter;<sp/>}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdyscostman_1_1StochasticEncoder_1ac9f64635f91f6a6b2cf4a8cebf5db2c5" kindref="member">value_t</ref><sp/>value(<ref refid="classdyscostman_1_1StochasticEncoder_1acba65b23c38d1650fcdb6953d843eaba" kindref="member">symbol_t</ref><sp/>sym)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_values[sym];<sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdyscostman_1_1StochasticEncoder_1ac9f64635f91f6a6b2cf4a8cebf5db2c5" kindref="member">value_t</ref><sp/>largest_value()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_values.back();<sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classdyscostman_1_1StochasticEncoder_1ac9f64635f91f6a6b2cf4a8cebf5db2c5" kindref="member">value_t</ref><sp/>smallest_value()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_values.front();<sp/>}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_values.size();<sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>capacity(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_values.capacity();<sp/>}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classao_1_1uvector" kindref="compound">ao::uvector&lt;value_t&gt;</ref><sp/>_values;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>num_t;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>num_t<sp/>cumulative(num_t<sp/>x);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>num_t<sp/>invCumulative(num_t<sp/><ref refid="namespacecasacore_1_1C_1a2aff9552bacab8d7213d5c70f7f23dc9" kindref="member">c</ref>,<sp/>num_t<sp/>err<sp/>=<sp/>num_t(1<ref refid="namespacecasacore_1_1C_1affe3d5b244c2ac147c007388050bae03" kindref="member">e</ref>-13));</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/>Dictionary<sp/>_encDictionary;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/>Dictionary<sp/>_decDictionary;</highlight></codeline>
<codeline lineno="264"><highlight class="normal">};</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>dyscostman</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="tables/Dysco/stochasticencoder.h"/>
  </compounddef>
</doxygen>
