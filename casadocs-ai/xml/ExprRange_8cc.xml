<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="ExprRange_8cc" kind="file" language="C++">
    <compoundname>ExprRange.cc</compoundname>
    <includes refid="ExprRange_8h" local="no">casacore/tables/TaQL/ExprRange.h</includes>
    <includes refid="TableColumn_8h" local="no">casacore/tables/Tables/TableColumn.h</includes>
    <includes refid="Slice_8h" local="no">casacore/casa/Arrays/Slice.h</includes>
    <includes refid="Math_8h" local="no">casacore/casa/BasicMath/Math.h</includes>
    <includes refid="Error_8h" local="no">casacore/casa/Exceptions/Error.h</includes>
    <incdepgraph>
      <node id="80">
        <label>casacore/casa/BasicMath/Math.h</label>
        <link refid="Math_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>casacore/casa/aipsenv.h</label>
        <link refid="aipsenv_8h"/>
      </node>
      <node id="75">
        <label>casacore/tables/Tables/StorageOption.h</label>
        <link refid="StorageOption_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="68">
        <label>casacore/casa/config.h</label>
      </node>
      <node id="55">
        <label>casacore/tables/Tables/TableInfo.h</label>
        <link refid="TableInfo_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>casacore/casa/BasicSL/Complex.h</label>
        <link refid="Complex_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>casacore/casa/Containers/Block.h</label>
        <link refid="Block_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>casacore/casa/Utilities/Compare.tcc</label>
        <link refid="Compare_8tcc"/>
      </node>
      <node id="56">
        <label>casacore/tables/Tables/TableDesc.h</label>
        <link refid="TableDesc_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
      </node>
      <node id="60">
        <label>casacore/casa/Exceptions/Error.h</label>
        <link refid="Error_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>iterator</label>
      </node>
      <node id="30">
        <label>ArrayStr.tcc</label>
        <link refid="ArrayStr_8tcc"/>
      </node>
      <node id="36">
        <label>casacore/tables/Tables/ColumnDesc.h</label>
        <link refid="ColumnDesc_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>casacore/tables/Tables/ColDescSet.h</label>
        <link refid="ColDescSet_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>casacore/casa/iostream.h</label>
        <link refid="iostream_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>casacore/tables/Tables/TableColumn.h</label>
        <link refid="TableColumn_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="83">
        <label>casacore/casa/stdlib.h</label>
        <link refid="stdlib_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>Array.h</label>
        <link refid="Array_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="77">
        <label>casacore/casa/Arrays/Slice.h</label>
        <link refid="Slice_8h"/>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>casacore/casa/iosfwd.h</label>
        <link refid="iosfwd_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
      <node id="82">
        <label>cmath</label>
      </node>
      <node id="78">
        <label>cassert</label>
      </node>
      <node id="52">
        <label>casacore/casa/Utilities/Compare.h</label>
        <link refid="Compare_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>stdexcept</label>
      </node>
      <node id="5">
        <label>casacore/casa/aipstype.h</label>
        <link refid="aipstype_8h"/>
      </node>
      <node id="43">
        <label>casacore/casa/iosstrfwd.h</label>
        <link refid="iosstrfwd_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="81">
        <label>casacore/casa/math.h</label>
        <link refid="math_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
      </node>
      <node id="67">
        <label>casacore/casa/Containers/Allocator.h</label>
        <link refid="Allocator_8h"/>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>string</label>
      </node>
      <node id="37">
        <label>casacore/tables/Tables/BaseColDesc.h</label>
        <link refid="BaseColDesc_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>map</label>
      </node>
      <node id="27">
        <label>ArrayStr.h</label>
        <link refid="ArrayStr_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="73">
        <label>casacore/casa/IO/ByteIO.h</label>
        <link refid="ByteIO_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>ArrayError.h</label>
        <link refid="ArrayError_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>casacore/casa/complex.h</label>
        <link refid="complex_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>casacore/casa/aips.h</label>
        <link refid="aips_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>casacore/casa/Arrays/Vector.h</label>
        <link refid="Vector_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>exception</label>
      </node>
      <node id="76">
        <label>casacore/casa/IO/FileLocker.h</label>
        <link refid="FileLocker_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>tables/TaQL/ExprRange.cc</label>
        <link refid="ExprRange_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>casacore/tables/Tables/BaseColumn.h</label>
        <link refid="BaseColumn_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>ostream</label>
      </node>
      <node id="64">
        <label>casacore/casa/Utilities/Copy.h</label>
        <link refid="Copy_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
      </node>
      <node id="74">
        <label>casacore/casa/vector.h</label>
        <link refid="vector_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>casacore/casa/BasicSL/Complexfwd.h</label>
        <link refid="Complexfwd_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>casacore/tables/TaQL/ExprRange.h</label>
        <link refid="ExprRange_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>Vector2.tcc</label>
        <link refid="Vector2_8tcc"/>
      </node>
      <node id="17">
        <label>sys/types.h</label>
      </node>
      <node id="71">
        <label>typeinfo</label>
      </node>
      <node id="22">
        <label>Storage.h</label>
        <link refid="Storage_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>IPosition.h</label>
        <link refid="IPosition_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>Array.tcc</label>
        <link refid="Array_8tcc"/>
      </node>
      <node id="79">
        <label>unistd.h</label>
      </node>
      <node id="14">
        <label>vector</label>
      </node>
      <node id="70">
        <label>new</label>
      </node>
      <node id="63">
        <label>casacore/casa/Utilities/Assert.tcc</label>
        <link refid="Assert_8tcc"/>
      </node>
      <node id="49">
        <label>sstream</label>
      </node>
      <node id="38">
        <label>casacore/casa/Utilities/DataType.h</label>
        <link refid="DataType_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>iosfwd</label>
      </node>
      <node id="69">
        <label>cstdlib</label>
      </node>
      <node id="54">
        <label>casacore/tables/Tables/BaseTable.h</label>
        <link refid="BaseTable_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>iostream</label>
      </node>
      <node id="7">
        <label>casacore/casa/aipsdef.h</label>
        <link refid="aipsdef_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>cstddef</label>
      </node>
      <node id="66">
        <label>casacore/casa/Utilities/Copy.tcc</label>
        <link refid="Copy_8tcc"/>
      </node>
      <node id="32">
        <label>Vector.tcc</label>
        <link refid="Vector_8tcc"/>
      </node>
      <node id="51">
        <label>mutex</label>
      </node>
      <node id="72">
        <label>casacore/casa/IO/AipsIO.h</label>
        <link refid="AipsIO_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>casacore/casa/sstream.h</label>
        <link refid="sstream_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>type_traits</label>
      </node>
      <node id="62">
        <label>casacore/casa/Exceptions/Error.tcc</label>
        <link refid="Error_8tcc"/>
      </node>
      <node id="24">
        <label>complex</label>
      </node>
      <node id="65">
        <label>algorithm</label>
      </node>
      <node id="12">
        <label>ArrayFwd.h</label>
        <link refid="ArrayFwd_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>ArrayBase.h</label>
        <link refid="ArrayBase_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>casacore/casa/aipsxtype.h</label>
        <link refid="aipsxtype_8h"/>
      </node>
      <node id="23">
        <label>cstring</label>
      </node>
      <node id="42">
        <label>casacore/casa/BasicSL/String.h</label>
        <link refid="String_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>memory</label>
      </node>
      <node id="28">
        <label>istream</label>
      </node>
      <node id="16">
        <label>initializer_list</label>
      </node>
      <node id="59">
        <label>casacore/casa/Utilities/Assert.h</label>
        <link refid="Assert_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>MaskLogiArrFwd.h</label>
        <link refid="MaskLogiArrFwd_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacecasacore">casacore</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//#<sp/>ExprRange.cc:<sp/>Select<sp/>range<sp/>of<sp/>a<sp/>column<sp/>in<sp/>an<sp/>select<sp/>expression</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>Copyright<sp/>(C)<sp/>1994,1995,1999,2000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>Associated<sp/>Universities,<sp/>Inc.<sp/>Washington<sp/>DC,<sp/>USA.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>This<sp/>library<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Library<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>2<sp/>of<sp/>the<sp/>License,<sp/>or<sp/>(at<sp/>your</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>This<sp/>library<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,<sp/>but<sp/>WITHOUT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of<sp/>MERCHANTABILITY<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the<sp/>GNU<sp/>Library<sp/>General<sp/>Public</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>License<sp/>for<sp/>more<sp/>details.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Library<sp/>General<sp/>Public<sp/>License</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>along<sp/>with<sp/>this<sp/>library;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software<sp/>Foundation,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>Inc.,<sp/>675<sp/>Massachusetts<sp/>Ave,<sp/>Cambridge,<sp/>MA<sp/>02139,<sp/>USA.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>Correspondence<sp/>concerning<sp/>AIPS++<sp/>should<sp/>be<sp/>addressed<sp/>as<sp/>follows:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Internet<sp/>email:<sp/>casa-feedback@nrao.edu.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Postal<sp/>address:<sp/>AIPS++<sp/>Project<sp/>Office</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>National<sp/>Radio<sp/>Astronomy<sp/>Observatory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>520<sp/>Edgemont<sp/>Road</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Charlottesville,<sp/>VA<sp/>22903-2475<sp/>USA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="ExprRange_8h" kindref="compound">casacore/tables/TaQL/ExprRange.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="TableColumn_8h" kindref="compound">casacore/tables/Tables/TableColumn.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="Slice_8h" kindref="compound">casacore/casa/Arrays/Slice.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="Math_8h" kindref="compound">casacore/casa/BasicMath/Math.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="Error_8h" kindref="compound">casacore/casa/Exceptions/Error.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacecasacore" kindref="compound">casacore</ref><sp/>{<sp/></highlight><highlight class="comment">//#<sp/>NAMESPACE<sp/>CASACORE<sp/>-<sp/>BEGIN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><ref refid="classcasacore_1_1TableExprRange_1a73ded57e4c697e5e142ef1874252e10a" kindref="member">TableExprRange::TableExprRange</ref>()</highlight></codeline>
<codeline lineno="35"><highlight class="normal">:<sp/>tabColPtr_p(0)</highlight></codeline>
<codeline lineno="36"><highlight class="normal">{}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal">TableExprRange::TableExprRange(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TableColumn&amp;<sp/>col,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>stval,</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>endval)</highlight></codeline>
<codeline lineno="40"><highlight class="normal">:<sp/>sval_p<sp/><sp/><sp/><sp/><sp/>(1),</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>eval_p<sp/><sp/><sp/><sp/><sp/>(1),</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>tabColPtr_p(0)</highlight></codeline>
<codeline lineno="43"><highlight class="normal">{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>tabColPtr_p<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TableColumn(col);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>sval_p(0)<sp/>=<sp/>stval;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>eval_p(0)<sp/>=<sp/>endval;</highlight></codeline>
<codeline lineno="47"><highlight class="normal">}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal">TableExprRange::TableExprRange<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TableExprRange&amp;<sp/>that)</highlight></codeline>
<codeline lineno="50"><highlight class="normal">:<sp/>sval_p<sp/><sp/><sp/><sp/><sp/>(that.sval_p),</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>eval_p<sp/><sp/><sp/><sp/><sp/>(that.eval_p),</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>tabColPtr_p(0)</highlight></codeline>
<codeline lineno="53"><highlight class="normal">{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(that.tabColPtr_p<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tabColPtr_p<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TableColumn<sp/>(*(that.tabColPtr_p));</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal">}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal">TableExprRange::~TableExprRange()</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>tabColPtr_p;<sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal">TableExprRange&amp;<sp/>TableExprRange::operator=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TableExprRange&amp;<sp/>that)</highlight></codeline>
<codeline lineno="63"><highlight class="normal">{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>!=<sp/>&amp;that)<sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sval_p<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>that.sval_p;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eval_p<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>that.eval_p;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>tabColPtr_p;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(that.tabColPtr_p<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tabColPtr_p<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TableColumn<sp/>(*(that.tabColPtr_p));</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="73"><highlight class="normal">}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TableColumn&amp;<sp/>TableExprRange::getColumn()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="76"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*tabColPtr_p;<sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>And<sp/>two<sp/>vectors<sp/>of<sp/>ranges.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>This<sp/>means<sp/>taking<sp/>the<sp/>intersection<sp/>of<sp/>all<sp/>ranges<sp/>in<sp/>both<sp/>vectors.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>Note<sp/>that<sp/>the<sp/>start<sp/>values<sp/>are<sp/>kept<sp/>in<sp/>ascending<sp/>order,<sp/>so<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>makes<sp/>searching<sp/>easier.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TableExprRange::mixAnd<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TableExprRange&amp;<sp/>that)</highlight></codeline>
<codeline lineno="84"><highlight class="normal">{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//#<sp/>Allocate<sp/>vectors<sp/>(long<sp/>enough)<sp/>to<sp/>hold<sp/>the<sp/>result.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nrres=0;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>Vector&lt;double&gt;<sp/>stres<sp/>(sval_p.nelements()<sp/>+<sp/>that.sval_p.nelements());</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>Vector&lt;double&gt;<sp/>endres(sval_p.nelements()<sp/>+<sp/>that.sval_p.nelements());</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//#<sp/>Loop<sp/>through<sp/>all<sp/>intervals<sp/>of<sp/>this.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;sval_p.nelements();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>j=0;<sp/>j&lt;that.sval_p.nelements();<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(that.sval_p(j)<sp/>&gt;<sp/>eval_p(i))<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>that<sp/>past<sp/>this;<sp/>next<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(that.eval_p(j)<sp/>&gt;=<sp/>sval_p(i))<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>overlap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stres(nrres)<sp/><sp/>=<sp/><ref refid="namespacecasacore_1a56d085b8518c627a9bf447eaa23588f0" kindref="member">max</ref><sp/>(sval_p(i),<sp/>that.sval_p(j));</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>endres(nrres)<sp/>=<sp/><ref refid="namespacecasacore_1a52c2516271638660cf3c313ddad928fe" kindref="member">min</ref><sp/>(eval_p(i),<sp/>that.eval_p(j));</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nrres++;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//#<sp/>Now<sp/>copy<sp/>the<sp/>result<sp/>(nrres<sp/>elements<sp/>of<sp/>course)<sp/>into<sp/>this.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>sval_p.resize(nrres);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>eval_p.resize(nrres);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nrres<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sval_p<sp/>=<sp/>stres<sp/>(Slice(0,nrres));</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eval_p<sp/>=<sp/>endres(Slice(0,nrres));</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal">}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TableExprRange::mixOr<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TableExprRange&amp;<sp/>that)</highlight></codeline>
<codeline lineno="113"><highlight class="normal">{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//#<sp/>Allocate<sp/>vectors<sp/>(long<sp/>enough)<sp/>to<sp/>hold<sp/>the<sp/>result.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nrres=0;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>Vector&lt;double&gt;<sp/>stres<sp/>(sval_p.nelements()<sp/>+<sp/>that.sval_p.nelements());</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>Vector&lt;double&gt;<sp/>endres(sval_p.nelements()<sp/>+<sp/>that.sval_p.nelements());</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>j=0;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//#<sp/>Loop<sp/>through<sp/>all<sp/>intervals<sp/>of<sp/>this.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//#<sp/>Store<sp/>in<sp/>the<sp/>result,<sp/>while<sp/>inserting<sp/>the<sp/>that<sp/>intervals,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//#<sp/>in<sp/>order<sp/>of<sp/>start-value.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;sval_p.nelements();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(j<sp/>&lt;<sp/>that.sval_p.nelements()<sp/><sp/>&amp;&amp;<sp/><sp/>that.sval_p(j)<sp/>&lt;<sp/>sval_p(i))<sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stres(nrres)<sp/><sp/>=<sp/>that.sval_p(j);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>endres(nrres)<sp/>=<sp/>that.eval_p(j);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nrres++;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j++;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stres(nrres)<sp/><sp/>=<sp/>sval_p(i);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>endres(nrres)<sp/>=<sp/>eval_p(i);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nrres++;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//#<sp/>Append<sp/>possible<sp/>remaining<sp/>that<sp/>intervals.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(j<sp/>&lt;<sp/>that.sval_p.nelements())<sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stres(nrres)<sp/><sp/>=<sp/>that.sval_p(j);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>endres(nrres)<sp/>=<sp/>that.eval_p(j);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nrres++;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j++;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//#<sp/>Now<sp/>combine<sp/>overlapping<sp/>intervals<sp/>and<sp/>store<sp/>result<sp/>in<sp/>temporary.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>Vector&lt;double&gt;<sp/>stmp(nrres);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>Vector&lt;double&gt;<sp/>etmp(nrres);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>j<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>stmp(0)<sp/>=<sp/>stres(0);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>interval</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>etmp(0)<sp/>=<sp/>endres(0);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i=1;<sp/>i&lt;nrres;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stres(i)<sp/>&lt;=<sp/>etmp(j))<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>overlap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(endres(i)<sp/>&gt;<sp/>etmp(j))<sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>etmp(j)<sp/>=<sp/>endres(i);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>higher<sp/>end-value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j++;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>overlap,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stmp(j)<sp/>=<sp/>stres(i);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>so<sp/>insert<sp/>interval</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>etmp(j)<sp/>=<sp/>endres(i);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>nrres<sp/>=<sp/>j+1;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//#<sp/>Now<sp/>set<sp/>vectors<sp/>to<sp/>their<sp/>final<sp/>length<sp/>and<sp/>store<sp/>values<sp/>in<sp/>them.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//#<sp/>Note<sp/>that<sp/>(opposite<sp/>to<sp/>Block)<sp/>the<sp/>Vector<sp/>resize<sp/>function<sp/>does<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//#<sp/>preserve<sp/>the<sp/>values<sp/>in<sp/>the<sp/>vector,<sp/>so<sp/>therefore<sp/>we<sp/>could<sp/>not<sp/>use</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//#<sp/>sval_p/eval_p,<sp/>but<sp/>had<sp/>to<sp/>use<sp/>temporaries.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>sval_p.resize(nrres);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>eval_p.resize(nrres);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nrres<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sval_p<sp/>=<sp/>stmp(Slice(0,nrres));</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eval_p<sp/>=<sp/>etmp(Slice(0,nrres));</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal">}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal">}<sp/></highlight><highlight class="comment">//#<sp/>NAMESPACE<sp/>CASACORE<sp/>-<sp/>END</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="tables/TaQL/ExprRange.cc"/>
  </compounddef>
</doxygen>
