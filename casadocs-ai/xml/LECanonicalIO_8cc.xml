<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="LECanonicalIO_8cc" kind="file" language="C++">
    <compoundname>LECanonicalIO.cc</compoundname>
    <includes refid="LECanonicalIO_8h" local="no">casacore/casa/IO/LECanonicalIO.h</includes>
    <includes refid="LECanonicalConversion_8h" local="no">casacore/casa/OS/LECanonicalConversion.h</includes>
    <includes refid="ByteIO_8h" local="no">casacore/casa/IO/ByteIO.h</includes>
    <incdepgraph>
      <node id="4">
        <label>casacore/casa/aipsenv.h</label>
        <link refid="aipsenv_8h"/>
      </node>
      <node id="20">
        <label>casacore/casa/BasicSL/Complex.h</label>
        <link refid="Complex_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>casacore/casa/OS/LECanonicalConversion.h</label>
        <link refid="LECanonicalConversion_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>casacore/casa/iostream.h</label>
        <link refid="iostream_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>casacore/casa/iosfwd.h</label>
        <link refid="iosfwd_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>casacore/casa/aipstype.h</label>
        <link refid="aipstype_8h"/>
      </node>
      <node id="12">
        <label>casacore/casa/iosstrfwd.h</label>
        <link refid="iosstrfwd_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>string</label>
      </node>
      <node id="8">
        <label>casacore/casa/IO/TypeIO.h</label>
        <link refid="TypeIO_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>casacore/casa/IO/ByteIO.h</label>
        <link refid="ByteIO_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>casacore/casa/complex.h</label>
        <link refid="complex_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>casacore/casa/aips.h</label>
        <link refid="aips_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>casacore/casa/BasicSL/Complexfwd.h</label>
        <link refid="Complexfwd_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>casacore/casa/string.h</label>
        <link refid="string_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>casa/IO/LECanonicalIO.cc</label>
        <link refid="LECanonicalIO_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>casacore/casa/IO/LECanonicalIO.h</label>
        <link refid="LECanonicalIO_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>sstream</label>
      </node>
      <node id="14">
        <label>iosfwd</label>
      </node>
      <node id="17">
        <label>iostream</label>
      </node>
      <node id="7">
        <label>casacore/casa/aipsdef.h</label>
        <link refid="aipsdef_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>casacore/casa/OS/Conversion.h</label>
        <link refid="Conversion_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>casacore/casa/sstream.h</label>
        <link refid="sstream_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>complex</label>
      </node>
      <node id="6">
        <label>casacore/casa/aipsxtype.h</label>
        <link refid="aipsxtype_8h"/>
      </node>
      <node id="27">
        <label>cstring</label>
      </node>
      <node id="10">
        <label>casacore/casa/BasicSL/String.h</label>
        <link refid="String_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>memory</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacecasacore">casacore</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//#<sp/>LECanonicalIO.cc:<sp/>Class<sp/>for<sp/>IO<sp/>in<sp/>little<sp/>endian<sp/>canonical<sp/>format</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>Copyright<sp/>(C)<sp/>2002</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>Associated<sp/>Universities,<sp/>Inc.<sp/>Washington<sp/>DC,<sp/>USA.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//#<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>This<sp/>library<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Library<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>2<sp/>of<sp/>the<sp/>License,<sp/>or<sp/>(at<sp/>your</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//#<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>This<sp/>library<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,<sp/>but<sp/>WITHOUT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of<sp/>MERCHANTABILITY<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the<sp/>GNU<sp/>Library<sp/>General<sp/>Public</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>License<sp/>for<sp/>more<sp/>details.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Library<sp/>General<sp/>Public<sp/>License</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>along<sp/>with<sp/>this<sp/>library;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software<sp/>Foundation,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>Inc.,<sp/>675<sp/>Massachusetts<sp/>Ave,<sp/>Cambridge,<sp/>MA<sp/>02139,<sp/>USA.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//#<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>Correspondence<sp/>concerning<sp/>AIPS++<sp/>should<sp/>be<sp/>addressed<sp/>as<sp/>follows:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Internet<sp/>email:<sp/>casa-feedback@nrao.edu.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Postal<sp/>address:<sp/>AIPS++<sp/>Project<sp/>Office</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>National<sp/>Radio<sp/>Astronomy<sp/>Observatory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>520<sp/>Edgemont<sp/>Road</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Charlottesville,<sp/>VA<sp/>22903-2475<sp/>USA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="LECanonicalIO_8h" kindref="compound">casacore/casa/IO/LECanonicalIO.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="LECanonicalConversion_8h" kindref="compound">casacore/casa/OS/LECanonicalConversion.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="ByteIO_8h" kindref="compound">casacore/casa/IO/ByteIO.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacecasacore" kindref="compound">casacore</ref><sp/>{<sp/></highlight><highlight class="comment">//#<sp/>NAMESPACE<sp/>CASACORE<sp/>-<sp/>BEGIN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><ref refid="classcasacore_1_1LECanonicalIO_1a1d4864eaea97edd7004963b43e01146f" kindref="member">LECanonicalIO::LECanonicalIO</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;ByteIO&gt;&amp;<sp/>byteIO,</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacecasacore_1a5c559d8d8bf2ae7f67b439955d6be88a" kindref="member">uInt</ref><sp/>bufferLength)</highlight></codeline>
<codeline lineno="34"><highlight class="normal">:<sp/>TypeIO<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(byteIO),</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>itsBuffer<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(new<sp/>char[bufferLength]),</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>itsBufferLength<sp/>(bufferLength)</highlight></codeline>
<codeline lineno="37"><highlight class="normal">{}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal">LECanonicalIO::LECanonicalIO<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>LECanonicalIO&amp;<sp/>that)</highlight></codeline>
<codeline lineno="40"><highlight class="normal">:<sp/>TypeIO<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(that),<sp/></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>itsBuffer<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(new<sp/>char[that.itsBufferLength]),</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>itsBufferLength<sp/>(that.itsBufferLength)</highlight></codeline>
<codeline lineno="43"><highlight class="normal">{}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal">LECanonicalIO&amp;<sp/>LECanonicalIO::operator=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>LECanonicalIO&amp;<sp/>that)</highlight></codeline>
<codeline lineno="46"><highlight class="normal">{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>!=<sp/>&amp;that)<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TypeIO::operator=<sp/>(that);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(itsBufferLength<sp/>!=<sp/>that.itsBufferLength)<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>itsBuffer;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>itsBufferLength<sp/>=<sp/>that.itsBufferLength;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>itsBuffer<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">[itsBufferLength];</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="56"><highlight class="normal">}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal">LECanonicalIO::~LECanonicalIO()</highlight></codeline>
<codeline lineno="59"><highlight class="normal">{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>itsBuffer;</highlight></codeline>
<codeline lineno="61"><highlight class="normal">}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>LECanonicalIO::write<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nvalues,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacecasacore_1abd5691f9e13acc90d901e4007740ff98" kindref="member">Bool</ref>*<sp/>value)</highlight></codeline>
<codeline lineno="65"><highlight class="normal">{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TypeIO::write<sp/>(nvalues,<sp/>value);</highlight></codeline>
<codeline lineno="67"><highlight class="normal">}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>LECanonicalIO::write<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nvalues,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacecasacore_1aee8247dad3ca180405bdb6835513a5ad" kindref="member">Char</ref>*<sp/>value)</highlight></codeline>
<codeline lineno="70"><highlight class="normal">{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="LECanonicalConversion_8h_1a17a51f4843831769987b9f5d2bf2cf41" kindref="member">CONVERT_LECAN_CHAR</ref>)<sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nvalues<sp/>*<sp/><ref refid="LECanonicalConversion_8h_1a222f59c508dd635831c550ed915a9e53" kindref="member">SIZE_LECAN_CHAR</ref><sp/>&lt;=<sp/>itsBufferLength)<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LECanonicalConversion::fromLocal<sp/>(itsBuffer,<sp/>value,<sp/>nvalues);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>itsByteIO-&gt;write<sp/>(nvalues<sp/>*<sp/><ref refid="LECanonicalConversion_8h_1a222f59c508dd635831c550ed915a9e53" kindref="member">SIZE_LECAN_CHAR</ref>,<sp/>itsBuffer);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>tempBuffer<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>[nvalues<sp/>*<sp/><ref refid="LECanonicalConversion_8h_1a222f59c508dd635831c550ed915a9e53" kindref="member">SIZE_LECAN_CHAR</ref>];</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LECanonicalConversion::fromLocal<sp/>(tempBuffer,<sp/>value,<sp/>nvalues);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>itsByteIO-&gt;write<sp/>(nvalues<sp/>*<sp/><ref refid="LECanonicalConversion_8h_1a222f59c508dd635831c550ed915a9e53" kindref="member">SIZE_LECAN_CHAR</ref>,<sp/>tempBuffer);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>tempBuffer;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>itsByteIO-&gt;write<sp/>(nvalues<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="namespacecasacore_1aee8247dad3ca180405bdb6835513a5ad" kindref="member">Char</ref>),<sp/>value);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nvalues<sp/>*<sp/><ref refid="LECanonicalConversion_8h_1a222f59c508dd635831c550ed915a9e53" kindref="member">SIZE_LECAN_CHAR</ref>;</highlight></codeline>
<codeline lineno="85"><highlight class="normal">}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>LECanonicalIO::write<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nvalues,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacecasacore_1a016442aacbe9faceef443b62ab555eb9" kindref="member">uChar</ref>*<sp/>value)</highlight></codeline>
<codeline lineno="88"><highlight class="normal">{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="LECanonicalConversion_8h_1a7d5c62590abf4f3800b7a51323f39f66" kindref="member">CONVERT_LECAN_UCHAR</ref>)<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nvalues<sp/>*<sp/><ref refid="LECanonicalConversion_8h_1a5314c410c32f48254174b55e0e9435e0" kindref="member">SIZE_LECAN_UCHAR</ref><sp/>&lt;=<sp/>itsBufferLength)<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LECanonicalConversion::fromLocal<sp/>(itsBuffer,<sp/>value,<sp/>nvalues);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>itsByteIO-&gt;write<sp/>(nvalues<sp/>*<sp/><ref refid="LECanonicalConversion_8h_1a5314c410c32f48254174b55e0e9435e0" kindref="member">SIZE_LECAN_UCHAR</ref>,<sp/>itsBuffer);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>tempBuffer<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>[nvalues<sp/>*<sp/><ref refid="LECanonicalConversion_8h_1a5314c410c32f48254174b55e0e9435e0" kindref="member">SIZE_LECAN_UCHAR</ref>];</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LECanonicalConversion::fromLocal<sp/>(tempBuffer,<sp/>value,<sp/>nvalues);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>itsByteIO-&gt;write<sp/>(nvalues<sp/>*<sp/><ref refid="LECanonicalConversion_8h_1a5314c410c32f48254174b55e0e9435e0" kindref="member">SIZE_LECAN_UCHAR</ref>,<sp/>tempBuffer);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>tempBuffer;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>itsByteIO-&gt;write<sp/>(nvalues<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="namespacecasacore_1a016442aacbe9faceef443b62ab555eb9" kindref="member">uChar</ref>),<sp/>value);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nvalues<sp/>*<sp/><ref refid="LECanonicalConversion_8h_1a5314c410c32f48254174b55e0e9435e0" kindref="member">SIZE_LECAN_UCHAR</ref>;</highlight></codeline>
<codeline lineno="103"><highlight class="normal">}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>LECanonicalIO::write<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nvalues,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacecasacore_1a53f2a3afd42e85d94a0a009052a442a6" kindref="member">Short</ref>*<sp/>value)</highlight></codeline>
<codeline lineno="106"><highlight class="normal">{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="LECanonicalConversion_8h_1afdd4ae2045ae824977434199f17d1bba" kindref="member">CONVERT_LECAN_SHORT</ref>)<sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nvalues<sp/>*<sp/><ref refid="LECanonicalConversion_8h_1ab91244eb05c5276bbdca5b167d566d76" kindref="member">SIZE_LECAN_SHORT</ref><sp/>&lt;=<sp/>itsBufferLength)<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LECanonicalConversion::fromLocal<sp/>(itsBuffer,<sp/>value,<sp/>nvalues);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>itsByteIO-&gt;write<sp/>(nvalues<sp/>*<sp/><ref refid="LECanonicalConversion_8h_1ab91244eb05c5276bbdca5b167d566d76" kindref="member">SIZE_LECAN_SHORT</ref>,<sp/>itsBuffer);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>tempBuffer<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>[nvalues<sp/>*<sp/><ref refid="LECanonicalConversion_8h_1ab91244eb05c5276bbdca5b167d566d76" kindref="member">SIZE_LECAN_SHORT</ref>];</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LECanonicalConversion::fromLocal<sp/>(tempBuffer,<sp/>value,<sp/>nvalues);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>itsByteIO-&gt;write<sp/>(nvalues<sp/>*<sp/><ref refid="LECanonicalConversion_8h_1ab91244eb05c5276bbdca5b167d566d76" kindref="member">SIZE_LECAN_SHORT</ref>,<sp/>tempBuffer);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>tempBuffer;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/>itsByteIO-&gt;write<sp/>(nvalues<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="namespacecasacore_1a53f2a3afd42e85d94a0a009052a442a6" kindref="member">Short</ref>),<sp/>value);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nvalues<sp/>*<sp/><ref refid="LECanonicalConversion_8h_1ab91244eb05c5276bbdca5b167d566d76" kindref="member">SIZE_LECAN_SHORT</ref>;</highlight></codeline>
<codeline lineno="121"><highlight class="normal">}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>LECanonicalIO::write<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nvalues,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacecasacore_1a659a7f6002b9b5c7984b02aef64b77ad" kindref="member">uShort</ref>*<sp/>value)</highlight></codeline>
<codeline lineno="124"><highlight class="normal">{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="LECanonicalConversion_8h_1a0d7a5400fa102495f31dc26a8bb09bbf" kindref="member">CONVERT_LECAN_USHORT</ref>)<sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nvalues<sp/>*<sp/><ref refid="LECanonicalConversion_8h_1ad13a775d22cc0dcaf6d853b25b0093ef" kindref="member">SIZE_LECAN_USHORT</ref><sp/>&lt;=<sp/>itsBufferLength)<sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LECanonicalConversion::fromLocal<sp/>(itsBuffer,<sp/>value,<sp/>nvalues);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>itsByteIO-&gt;write<sp/>(nvalues<sp/>*<sp/><ref refid="LECanonicalConversion_8h_1ad13a775d22cc0dcaf6d853b25b0093ef" kindref="member">SIZE_LECAN_USHORT</ref>,<sp/>itsBuffer);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>tempBuffer<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>[nvalues<sp/>*<sp/><ref refid="LECanonicalConversion_8h_1ad13a775d22cc0dcaf6d853b25b0093ef" kindref="member">SIZE_LECAN_USHORT</ref>];</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LECanonicalConversion::fromLocal<sp/>(tempBuffer,<sp/>value,<sp/>nvalues);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>itsByteIO-&gt;write<sp/>(nvalues<sp/>*<sp/><ref refid="LECanonicalConversion_8h_1ad13a775d22cc0dcaf6d853b25b0093ef" kindref="member">SIZE_LECAN_USHORT</ref>,<sp/>tempBuffer);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>tempBuffer;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/>itsByteIO-&gt;write<sp/>(nvalues<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="namespacecasacore_1a659a7f6002b9b5c7984b02aef64b77ad" kindref="member">uShort</ref>),<sp/>value);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nvalues<sp/>*<sp/><ref refid="LECanonicalConversion_8h_1ad13a775d22cc0dcaf6d853b25b0093ef" kindref="member">SIZE_LECAN_USHORT</ref>;</highlight></codeline>
<codeline lineno="139"><highlight class="normal">}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>LECanonicalIO::write(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nvalues,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacecasacore_1abb6e2c1bac472ca1ebadadf96cc8426f" kindref="member">Int</ref>*<sp/>value)</highlight></codeline>
<codeline lineno="142"><highlight class="normal">{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="LECanonicalConversion_8h_1a34c10551f824a823890b326b95a79d93" kindref="member">CONVERT_LECAN_INT</ref>)<sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nvalues<sp/>*<sp/><ref refid="LECanonicalConversion_8h_1aef832dbb0887d705702ede057125b327" kindref="member">SIZE_LECAN_INT</ref><sp/>&lt;=<sp/>itsBufferLength)<sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LECanonicalConversion::fromLocal<sp/>(itsBuffer,<sp/>value,<sp/>nvalues);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>itsByteIO-&gt;write<sp/>(nvalues<sp/>*<sp/><ref refid="LECanonicalConversion_8h_1aef832dbb0887d705702ede057125b327" kindref="member">SIZE_LECAN_INT</ref>,<sp/>itsBuffer);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>tempBuffer<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>[nvalues<sp/>*<sp/><ref refid="LECanonicalConversion_8h_1aef832dbb0887d705702ede057125b327" kindref="member">SIZE_LECAN_INT</ref>];</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LECanonicalConversion::fromLocal<sp/>(tempBuffer,<sp/>value,<sp/>nvalues);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>itsByteIO-&gt;write<sp/>(nvalues<sp/>*<sp/><ref refid="LECanonicalConversion_8h_1aef832dbb0887d705702ede057125b327" kindref="member">SIZE_LECAN_INT</ref>,<sp/>tempBuffer);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>tempBuffer;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/>itsByteIO-&gt;write<sp/>(nvalues<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="namespacecasacore_1abb6e2c1bac472ca1ebadadf96cc8426f" kindref="member">Int</ref>),<sp/>value);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nvalues<sp/>*<sp/><ref refid="LECanonicalConversion_8h_1aef832dbb0887d705702ede057125b327" kindref="member">SIZE_LECAN_INT</ref>;</highlight></codeline>
<codeline lineno="157"><highlight class="normal">}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>LECanonicalIO::write(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nvalues,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacecasacore_1a5c559d8d8bf2ae7f67b439955d6be88a" kindref="member">uInt</ref>*<sp/>value)</highlight></codeline>
<codeline lineno="160"><highlight class="normal">{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="LECanonicalConversion_8h_1ad334b20d4cdf3d07c2734efaa9a8df2a" kindref="member">CONVERT_LECAN_UINT</ref>)<sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nvalues<sp/>*<sp/><ref refid="LECanonicalConversion_8h_1a13292b5bbf9432b5c6413ce67b1c0843" kindref="member">SIZE_LECAN_UINT</ref><sp/>&lt;=<sp/>itsBufferLength)<sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LECanonicalConversion::fromLocal<sp/>(itsBuffer,<sp/>value,<sp/>nvalues);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>itsByteIO-&gt;write<sp/>(nvalues<sp/>*<sp/><ref refid="LECanonicalConversion_8h_1a13292b5bbf9432b5c6413ce67b1c0843" kindref="member">SIZE_LECAN_UINT</ref>,<sp/>itsBuffer);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>tempBuffer<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>[nvalues<sp/>*<sp/><ref refid="LECanonicalConversion_8h_1a13292b5bbf9432b5c6413ce67b1c0843" kindref="member">SIZE_LECAN_UINT</ref>];</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LECanonicalConversion::fromLocal<sp/>(tempBuffer,<sp/>value,<sp/>nvalues);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>itsByteIO-&gt;write<sp/>(nvalues<sp/>*<sp/><ref refid="LECanonicalConversion_8h_1a13292b5bbf9432b5c6413ce67b1c0843" kindref="member">SIZE_LECAN_UINT</ref>,<sp/>tempBuffer);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>tempBuffer;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/>itsByteIO-&gt;write<sp/>(nvalues<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="namespacecasacore_1a5c559d8d8bf2ae7f67b439955d6be88a" kindref="member">uInt</ref>),<sp/>value);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nvalues<sp/>*<sp/><ref refid="LECanonicalConversion_8h_1a13292b5bbf9432b5c6413ce67b1c0843" kindref="member">SIZE_LECAN_UINT</ref>;</highlight></codeline>
<codeline lineno="175"><highlight class="normal">}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>LECanonicalIO::write(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nvalues,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacecasacore_1a79c2dfec4363785472512dbf384675a1" kindref="member">Int64</ref>*<sp/>value)</highlight></codeline>
<codeline lineno="178"><highlight class="normal">{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="LECanonicalConversion_8h_1a18e6691056afa359aef0ecedb52fde65" kindref="member">CONVERT_LECAN_INT64</ref>)<sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nvalues<sp/>*<sp/><ref refid="LECanonicalConversion_8h_1a0f94ee2c91bc4b55a67afb4abed7bcf2" kindref="member">SIZE_LECAN_INT64</ref><sp/>&lt;=<sp/>itsBufferLength)<sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LECanonicalConversion::fromLocal<sp/>(itsBuffer,<sp/>value,<sp/>nvalues);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>itsByteIO-&gt;write<sp/>(nvalues<sp/>*<sp/><ref refid="LECanonicalConversion_8h_1a0f94ee2c91bc4b55a67afb4abed7bcf2" kindref="member">SIZE_LECAN_INT64</ref>,<sp/>itsBuffer);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>tempBuffer<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>[nvalues<sp/>*<sp/><ref refid="LECanonicalConversion_8h_1a0f94ee2c91bc4b55a67afb4abed7bcf2" kindref="member">SIZE_LECAN_INT64</ref>];</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LECanonicalConversion::fromLocal<sp/>(tempBuffer,<sp/>value,<sp/>nvalues);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>itsByteIO-&gt;write<sp/>(nvalues<sp/>*<sp/><ref refid="LECanonicalConversion_8h_1a0f94ee2c91bc4b55a67afb4abed7bcf2" kindref="member">SIZE_LECAN_INT64</ref>,<sp/>tempBuffer);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>tempBuffer;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/>itsByteIO-&gt;write<sp/>(nvalues<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="namespacecasacore_1a79c2dfec4363785472512dbf384675a1" kindref="member">Int64</ref>),<sp/>value);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nvalues<sp/>*<sp/><ref refid="LECanonicalConversion_8h_1a0f94ee2c91bc4b55a67afb4abed7bcf2" kindref="member">SIZE_LECAN_INT64</ref>;</highlight></codeline>
<codeline lineno="193"><highlight class="normal">}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>LECanonicalIO::write(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nvalues,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacecasacore_1afbaa0f0eab7b3a56a4c320715f577d4f" kindref="member">uInt64</ref>*<sp/>value)</highlight></codeline>
<codeline lineno="196"><highlight class="normal">{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="LECanonicalConversion_8h_1a554458bcf6aeb1a4e4118d1a9847e2f3" kindref="member">CONVERT_LECAN_UINT64</ref>)<sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nvalues<sp/>*<sp/><ref refid="LECanonicalConversion_8h_1a0187e0c6783d4ce55a1325b06b847e3b" kindref="member">SIZE_LECAN_UINT64</ref><sp/>&lt;=<sp/>itsBufferLength)<sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LECanonicalConversion::fromLocal<sp/>(itsBuffer,<sp/>value,<sp/>nvalues);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>itsByteIO-&gt;write<sp/>(nvalues<sp/>*<sp/><ref refid="LECanonicalConversion_8h_1a0187e0c6783d4ce55a1325b06b847e3b" kindref="member">SIZE_LECAN_UINT64</ref>,<sp/>itsBuffer);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>tempBuffer<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>[nvalues<sp/>*<sp/><ref refid="LECanonicalConversion_8h_1a0187e0c6783d4ce55a1325b06b847e3b" kindref="member">SIZE_LECAN_UINT64</ref>];</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LECanonicalConversion::fromLocal<sp/>(tempBuffer,<sp/>value,<sp/>nvalues);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>itsByteIO-&gt;write<sp/>(nvalues<sp/>*<sp/><ref refid="LECanonicalConversion_8h_1a0187e0c6783d4ce55a1325b06b847e3b" kindref="member">SIZE_LECAN_UINT64</ref>,<sp/>tempBuffer);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>tempBuffer;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/>itsByteIO-&gt;write<sp/>(nvalues<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="namespacecasacore_1afbaa0f0eab7b3a56a4c320715f577d4f" kindref="member">uInt64</ref>),<sp/>value);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nvalues<sp/>*<sp/><ref refid="LECanonicalConversion_8h_1a0187e0c6783d4ce55a1325b06b847e3b" kindref="member">SIZE_LECAN_UINT64</ref>;</highlight></codeline>
<codeline lineno="211"><highlight class="normal">}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>LECanonicalIO::write(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nvalues,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>value)</highlight></codeline>
<codeline lineno="214"><highlight class="normal">{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="LECanonicalConversion_8h_1a6e78d9f55db4298d9bcb85e7602509ef" kindref="member">CONVERT_LECAN_FLOAT</ref>)<sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nvalues<sp/>*<sp/><ref refid="LECanonicalConversion_8h_1a0dd9dba6eb7dfcbda1d251169d9b323c" kindref="member">SIZE_LECAN_FLOAT</ref><sp/>&lt;=<sp/>itsBufferLength)<sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LECanonicalConversion::fromLocal<sp/>(itsBuffer,<sp/>value,<sp/>nvalues);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>itsByteIO-&gt;write<sp/>(nvalues<sp/>*<sp/><ref refid="LECanonicalConversion_8h_1a0dd9dba6eb7dfcbda1d251169d9b323c" kindref="member">SIZE_LECAN_FLOAT</ref>,<sp/>itsBuffer);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>tempBuffer<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>[nvalues<sp/>*<sp/><ref refid="LECanonicalConversion_8h_1a0dd9dba6eb7dfcbda1d251169d9b323c" kindref="member">SIZE_LECAN_FLOAT</ref>];</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LECanonicalConversion::fromLocal<sp/>(tempBuffer,<sp/>value,<sp/>nvalues);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>itsByteIO-&gt;write<sp/>(nvalues<sp/>*<sp/><ref refid="LECanonicalConversion_8h_1a0dd9dba6eb7dfcbda1d251169d9b323c" kindref="member">SIZE_LECAN_FLOAT</ref>,<sp/>tempBuffer);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>tempBuffer;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/>itsByteIO-&gt;write<sp/>(nvalues<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">),<sp/>value);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nvalues<sp/>*<sp/><ref refid="LECanonicalConversion_8h_1a0dd9dba6eb7dfcbda1d251169d9b323c" kindref="member">SIZE_LECAN_FLOAT</ref>;</highlight></codeline>
<codeline lineno="229"><highlight class="normal">}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>LECanonicalIO::write(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nvalues,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>value)</highlight></codeline>
<codeline lineno="232"><highlight class="normal">{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="LECanonicalConversion_8h_1a5b5db7a274c129b486eb8e91fa11bd34" kindref="member">CONVERT_LECAN_DOUBLE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nvalues<sp/>*<sp/><ref refid="LECanonicalConversion_8h_1a03f8a766fa100737280cf1feb50cb968" kindref="member">SIZE_LECAN_DOUBLE</ref><sp/>&lt;=<sp/>itsBufferLength)<sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LECanonicalConversion::fromLocal<sp/>(itsBuffer,<sp/>value,<sp/>nvalues);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>itsByteIO-&gt;write<sp/>(nvalues<sp/>*<sp/><ref refid="LECanonicalConversion_8h_1a03f8a766fa100737280cf1feb50cb968" kindref="member">SIZE_LECAN_DOUBLE</ref>,<sp/>itsBuffer);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>tempBuffer<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>[nvalues<sp/>*<sp/><ref refid="LECanonicalConversion_8h_1a03f8a766fa100737280cf1feb50cb968" kindref="member">SIZE_LECAN_DOUBLE</ref>];</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LECanonicalConversion::fromLocal<sp/>(tempBuffer,<sp/>value,<sp/>nvalues);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>itsByteIO-&gt;write<sp/>(nvalues<sp/>*<sp/><ref refid="LECanonicalConversion_8h_1a03f8a766fa100737280cf1feb50cb968" kindref="member">SIZE_LECAN_DOUBLE</ref>,<sp/>tempBuffer);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>tempBuffer;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/>itsByteIO-&gt;write<sp/>(nvalues<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">),<sp/>value);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nvalues<sp/>*<sp/><ref refid="LECanonicalConversion_8h_1a03f8a766fa100737280cf1feb50cb968" kindref="member">SIZE_LECAN_DOUBLE</ref>;</highlight></codeline>
<codeline lineno="247"><highlight class="normal">}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>LECanonicalIO::write<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nvalues,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacecasacore_1ab81d263ab360e9922913a80bae6d7695" kindref="member">Complex</ref>*<sp/>value)</highlight></codeline>
<codeline lineno="250"><highlight class="normal">{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TypeIO::write<sp/>(nvalues,<sp/>value);</highlight></codeline>
<codeline lineno="252"><highlight class="normal">}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>LECanonicalIO::write<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nvalues,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacecasacore_1a2a9616f801f0f94ac5c480453377e268" kindref="member">DComplex</ref>*<sp/>value)</highlight></codeline>
<codeline lineno="255"><highlight class="normal">{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TypeIO::write<sp/>(nvalues,<sp/>value);</highlight></codeline>
<codeline lineno="257"><highlight class="normal">}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>LECanonicalIO::write<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nvalues,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>String*<sp/>value)</highlight></codeline>
<codeline lineno="260"><highlight class="normal">{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>TypeIO::write<sp/>(nvalues,<sp/>value);</highlight></codeline>
<codeline lineno="262"><highlight class="normal">}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="namespacecasacore_1ab4b0b9db3c436e10b1c133dd70d8c4fa" kindref="member">LECanonicalIO::read</ref><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nvalues,<sp/><ref refid="namespacecasacore_1abd5691f9e13acc90d901e4007740ff98" kindref="member">Bool</ref>*<sp/>value)</highlight></codeline>
<codeline lineno="266"><highlight class="normal">{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacecasacore_1ab4b0b9db3c436e10b1c133dd70d8c4fa" kindref="member">TypeIO::read</ref><sp/>(nvalues,<sp/>value);</highlight></codeline>
<codeline lineno="268"><highlight class="normal">}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="namespacecasacore_1ab4b0b9db3c436e10b1c133dd70d8c4fa" kindref="member">LECanonicalIO::read</ref><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nvalues,<sp/><ref refid="namespacecasacore_1aee8247dad3ca180405bdb6835513a5ad" kindref="member">Char</ref>*<sp/>value)</highlight></codeline>
<codeline lineno="271"><highlight class="normal">{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="LECanonicalConversion_8h_1a17a51f4843831769987b9f5d2bf2cf41" kindref="member">CONVERT_LECAN_CHAR</ref>)<sp/>{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nvalues<sp/>*<sp/><ref refid="LECanonicalConversion_8h_1a222f59c508dd635831c550ed915a9e53" kindref="member">SIZE_LECAN_CHAR</ref><sp/>&lt;=<sp/>itsBufferLength)<sp/>{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>itsByteIO-&gt;read<sp/>(nvalues<sp/>*<sp/><ref refid="LECanonicalConversion_8h_1a222f59c508dd635831c550ed915a9e53" kindref="member">SIZE_LECAN_CHAR</ref>,<sp/>itsBuffer);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LECanonicalConversion::toLocal<sp/>(value,<sp/>itsBuffer,<sp/>nvalues);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>tempBuffer<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">[nvalues<sp/>*<sp/><ref refid="LECanonicalConversion_8h_1a222f59c508dd635831c550ed915a9e53" kindref="member">SIZE_LECAN_CHAR</ref>];</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>itsByteIO-&gt;read<sp/>(nvalues<sp/>*<sp/><ref refid="LECanonicalConversion_8h_1a222f59c508dd635831c550ed915a9e53" kindref="member">SIZE_LECAN_CHAR</ref>,<sp/>tempBuffer);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LECanonicalConversion::toLocal<sp/>(value,<sp/>tempBuffer,<sp/>nvalues);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>tempBuffer;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/>itsByteIO-&gt;read<sp/>(nvalues<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="namespacecasacore_1aee8247dad3ca180405bdb6835513a5ad" kindref="member">Char</ref>),<sp/>value);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nvalues<sp/>*<sp/><ref refid="LECanonicalConversion_8h_1a222f59c508dd635831c550ed915a9e53" kindref="member">SIZE_LECAN_CHAR</ref>;</highlight></codeline>
<codeline lineno="286"><highlight class="normal">}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="namespacecasacore_1ab4b0b9db3c436e10b1c133dd70d8c4fa" kindref="member">LECanonicalIO::read</ref><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nvalues,<sp/><ref refid="namespacecasacore_1a016442aacbe9faceef443b62ab555eb9" kindref="member">uChar</ref>*<sp/>value)</highlight></codeline>
<codeline lineno="289"><highlight class="normal">{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="LECanonicalConversion_8h_1a7d5c62590abf4f3800b7a51323f39f66" kindref="member">CONVERT_LECAN_UCHAR</ref>)<sp/>{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nvalues<sp/>*<sp/><ref refid="LECanonicalConversion_8h_1a5314c410c32f48254174b55e0e9435e0" kindref="member">SIZE_LECAN_UCHAR</ref><sp/>&lt;=<sp/>itsBufferLength)<sp/>{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>itsByteIO-&gt;read<sp/>(nvalues<sp/>*<sp/><ref refid="LECanonicalConversion_8h_1a5314c410c32f48254174b55e0e9435e0" kindref="member">SIZE_LECAN_UCHAR</ref>,<sp/>itsBuffer);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LECanonicalConversion::toLocal<sp/>(value,<sp/>itsBuffer,<sp/>nvalues);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>tempBuffer<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">[nvalues<sp/>*<sp/><ref refid="LECanonicalConversion_8h_1a5314c410c32f48254174b55e0e9435e0" kindref="member">SIZE_LECAN_UCHAR</ref>];</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>itsByteIO-&gt;read<sp/>(nvalues<sp/>*<sp/><ref refid="LECanonicalConversion_8h_1a5314c410c32f48254174b55e0e9435e0" kindref="member">SIZE_LECAN_UCHAR</ref>,<sp/>tempBuffer);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LECanonicalConversion::toLocal<sp/>(value,<sp/>tempBuffer,<sp/>nvalues);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>tempBuffer;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/>itsByteIO-&gt;read<sp/>(nvalues<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="namespacecasacore_1a016442aacbe9faceef443b62ab555eb9" kindref="member">uChar</ref>),<sp/>value);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nvalues<sp/>*<sp/><ref refid="LECanonicalConversion_8h_1a5314c410c32f48254174b55e0e9435e0" kindref="member">SIZE_LECAN_UCHAR</ref>;</highlight></codeline>
<codeline lineno="304"><highlight class="normal">}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="namespacecasacore_1ab4b0b9db3c436e10b1c133dd70d8c4fa" kindref="member">LECanonicalIO::read</ref><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nvalues,<sp/><ref refid="namespacecasacore_1a53f2a3afd42e85d94a0a009052a442a6" kindref="member">Short</ref>*<sp/>value)</highlight></codeline>
<codeline lineno="307"><highlight class="normal">{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="LECanonicalConversion_8h_1afdd4ae2045ae824977434199f17d1bba" kindref="member">CONVERT_LECAN_SHORT</ref>)<sp/>{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nvalues<sp/>*<sp/><ref refid="LECanonicalConversion_8h_1ab91244eb05c5276bbdca5b167d566d76" kindref="member">SIZE_LECAN_SHORT</ref><sp/>&lt;=<sp/>itsBufferLength)<sp/>{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>itsByteIO-&gt;read<sp/>(nvalues<sp/>*<sp/><ref refid="LECanonicalConversion_8h_1ab91244eb05c5276bbdca5b167d566d76" kindref="member">SIZE_LECAN_SHORT</ref>,<sp/>itsBuffer);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LECanonicalConversion::toLocal<sp/>(value,<sp/>itsBuffer,<sp/>nvalues);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>tempBuffer<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">[nvalues<sp/>*<sp/><ref refid="LECanonicalConversion_8h_1ab91244eb05c5276bbdca5b167d566d76" kindref="member">SIZE_LECAN_SHORT</ref>];</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>itsByteIO-&gt;read<sp/>(nvalues<sp/>*<sp/><ref refid="LECanonicalConversion_8h_1ab91244eb05c5276bbdca5b167d566d76" kindref="member">SIZE_LECAN_SHORT</ref>,<sp/>tempBuffer);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LECanonicalConversion::toLocal<sp/>(value,<sp/>tempBuffer,<sp/>nvalues);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>tempBuffer;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/>itsByteIO-&gt;read<sp/>(nvalues<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="namespacecasacore_1a53f2a3afd42e85d94a0a009052a442a6" kindref="member">Short</ref>),<sp/>value);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nvalues<sp/>*<sp/><ref refid="LECanonicalConversion_8h_1ab91244eb05c5276bbdca5b167d566d76" kindref="member">SIZE_LECAN_SHORT</ref>;</highlight></codeline>
<codeline lineno="322"><highlight class="normal">}</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="namespacecasacore_1ab4b0b9db3c436e10b1c133dd70d8c4fa" kindref="member">LECanonicalIO::read</ref><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nvalues,<sp/><ref refid="namespacecasacore_1a659a7f6002b9b5c7984b02aef64b77ad" kindref="member">uShort</ref>*<sp/>value)</highlight></codeline>
<codeline lineno="325"><highlight class="normal">{</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="LECanonicalConversion_8h_1a0d7a5400fa102495f31dc26a8bb09bbf" kindref="member">CONVERT_LECAN_USHORT</ref>)<sp/>{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nvalues<sp/>*<sp/><ref refid="LECanonicalConversion_8h_1ad13a775d22cc0dcaf6d853b25b0093ef" kindref="member">SIZE_LECAN_USHORT</ref><sp/>&lt;=<sp/>itsBufferLength)<sp/>{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>itsByteIO-&gt;read<sp/>(nvalues<sp/>*<sp/><ref refid="LECanonicalConversion_8h_1ad13a775d22cc0dcaf6d853b25b0093ef" kindref="member">SIZE_LECAN_USHORT</ref>,<sp/>itsBuffer);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LECanonicalConversion::toLocal<sp/>(value,<sp/>itsBuffer,<sp/>nvalues);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>tempBuffer<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">[nvalues<sp/>*<sp/><ref refid="LECanonicalConversion_8h_1ad13a775d22cc0dcaf6d853b25b0093ef" kindref="member">SIZE_LECAN_USHORT</ref>];</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>itsByteIO-&gt;read<sp/>(nvalues<sp/>*<sp/><ref refid="LECanonicalConversion_8h_1ad13a775d22cc0dcaf6d853b25b0093ef" kindref="member">SIZE_LECAN_USHORT</ref>,<sp/>tempBuffer);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LECanonicalConversion::toLocal<sp/>(value,<sp/>tempBuffer,<sp/>nvalues);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>tempBuffer;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/>itsByteIO-&gt;read<sp/>(nvalues<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="namespacecasacore_1a659a7f6002b9b5c7984b02aef64b77ad" kindref="member">uShort</ref>),<sp/>value);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nvalues<sp/>*<sp/><ref refid="LECanonicalConversion_8h_1ad13a775d22cc0dcaf6d853b25b0093ef" kindref="member">SIZE_LECAN_USHORT</ref>;</highlight></codeline>
<codeline lineno="340"><highlight class="normal">}</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="namespacecasacore_1ab4b0b9db3c436e10b1c133dd70d8c4fa" kindref="member">LECanonicalIO::read</ref><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nvalues,<sp/><ref refid="namespacecasacore_1abb6e2c1bac472ca1ebadadf96cc8426f" kindref="member">Int</ref>*<sp/>value)</highlight></codeline>
<codeline lineno="343"><highlight class="normal">{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="LECanonicalConversion_8h_1a34c10551f824a823890b326b95a79d93" kindref="member">CONVERT_LECAN_INT</ref>)<sp/>{</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nvalues<sp/>*<sp/><ref refid="LECanonicalConversion_8h_1aef832dbb0887d705702ede057125b327" kindref="member">SIZE_LECAN_INT</ref><sp/>&lt;=<sp/>itsBufferLength)<sp/>{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>itsByteIO-&gt;read<sp/>(nvalues<sp/>*<sp/><ref refid="LECanonicalConversion_8h_1aef832dbb0887d705702ede057125b327" kindref="member">SIZE_LECAN_INT</ref>,<sp/>itsBuffer);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LECanonicalConversion::toLocal<sp/>(value,<sp/>itsBuffer,<sp/>nvalues);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>tempBuffer<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">[nvalues<sp/>*<sp/><ref refid="LECanonicalConversion_8h_1aef832dbb0887d705702ede057125b327" kindref="member">SIZE_LECAN_INT</ref>];</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>itsByteIO-&gt;read<sp/>(nvalues<sp/>*<sp/><ref refid="LECanonicalConversion_8h_1aef832dbb0887d705702ede057125b327" kindref="member">SIZE_LECAN_INT</ref>,<sp/>tempBuffer);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LECanonicalConversion::toLocal<sp/>(value,<sp/>tempBuffer,<sp/>nvalues);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>tempBuffer;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/>itsByteIO-&gt;read<sp/>(nvalues<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="namespacecasacore_1abb6e2c1bac472ca1ebadadf96cc8426f" kindref="member">Int</ref>),<sp/>value);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nvalues<sp/>*<sp/><ref refid="LECanonicalConversion_8h_1aef832dbb0887d705702ede057125b327" kindref="member">SIZE_LECAN_INT</ref>;</highlight></codeline>
<codeline lineno="358"><highlight class="normal">}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="namespacecasacore_1ab4b0b9db3c436e10b1c133dd70d8c4fa" kindref="member">LECanonicalIO::read</ref><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nvalues,<sp/><ref refid="namespacecasacore_1a5c559d8d8bf2ae7f67b439955d6be88a" kindref="member">uInt</ref>*<sp/>value)</highlight></codeline>
<codeline lineno="361"><highlight class="normal">{</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="LECanonicalConversion_8h_1ad334b20d4cdf3d07c2734efaa9a8df2a" kindref="member">CONVERT_LECAN_UINT</ref>)<sp/>{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nvalues<sp/>*<sp/><ref refid="LECanonicalConversion_8h_1a13292b5bbf9432b5c6413ce67b1c0843" kindref="member">SIZE_LECAN_UINT</ref><sp/>&lt;=<sp/>itsBufferLength)<sp/>{</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>itsByteIO-&gt;read<sp/>(nvalues<sp/>*<sp/><ref refid="LECanonicalConversion_8h_1a13292b5bbf9432b5c6413ce67b1c0843" kindref="member">SIZE_LECAN_UINT</ref>,<sp/>itsBuffer);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LECanonicalConversion::toLocal<sp/>(value,<sp/>itsBuffer,<sp/>nvalues);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>tempBuffer<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">[nvalues<sp/>*<sp/><ref refid="LECanonicalConversion_8h_1a13292b5bbf9432b5c6413ce67b1c0843" kindref="member">SIZE_LECAN_UINT</ref>];</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>itsByteIO-&gt;read<sp/>(nvalues<sp/>*<sp/><ref refid="LECanonicalConversion_8h_1a13292b5bbf9432b5c6413ce67b1c0843" kindref="member">SIZE_LECAN_UINT</ref>,<sp/>tempBuffer);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LECanonicalConversion::toLocal<sp/>(value,<sp/>tempBuffer,<sp/>nvalues);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>tempBuffer;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/>itsByteIO-&gt;read<sp/>(nvalues<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="namespacecasacore_1a5c559d8d8bf2ae7f67b439955d6be88a" kindref="member">uInt</ref>),<sp/>value);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nvalues<sp/>*<sp/><ref refid="LECanonicalConversion_8h_1a13292b5bbf9432b5c6413ce67b1c0843" kindref="member">SIZE_LECAN_UINT</ref>;</highlight></codeline>
<codeline lineno="376"><highlight class="normal">}</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="namespacecasacore_1ab4b0b9db3c436e10b1c133dd70d8c4fa" kindref="member">LECanonicalIO::read</ref><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nvalues,<sp/><ref refid="namespacecasacore_1a79c2dfec4363785472512dbf384675a1" kindref="member">Int64</ref>*<sp/>value)</highlight></codeline>
<codeline lineno="379"><highlight class="normal">{</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="LECanonicalConversion_8h_1a18e6691056afa359aef0ecedb52fde65" kindref="member">CONVERT_LECAN_INT64</ref>)<sp/>{</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nvalues<sp/>*<sp/><ref refid="LECanonicalConversion_8h_1a0f94ee2c91bc4b55a67afb4abed7bcf2" kindref="member">SIZE_LECAN_INT64</ref><sp/>&lt;=<sp/>itsBufferLength)<sp/>{</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>itsByteIO-&gt;read<sp/>(nvalues<sp/>*<sp/><ref refid="LECanonicalConversion_8h_1a0f94ee2c91bc4b55a67afb4abed7bcf2" kindref="member">SIZE_LECAN_INT64</ref>,<sp/>itsBuffer);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LECanonicalConversion::toLocal<sp/>(value,<sp/>itsBuffer,<sp/>nvalues);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>tempBuffer<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">[nvalues<sp/>*<sp/><ref refid="LECanonicalConversion_8h_1a0f94ee2c91bc4b55a67afb4abed7bcf2" kindref="member">SIZE_LECAN_INT64</ref>];</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>itsByteIO-&gt;read<sp/>(nvalues<sp/>*<sp/><ref refid="LECanonicalConversion_8h_1a0f94ee2c91bc4b55a67afb4abed7bcf2" kindref="member">SIZE_LECAN_INT64</ref>,<sp/>tempBuffer);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LECanonicalConversion::toLocal<sp/>(value,<sp/>tempBuffer,<sp/>nvalues);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>tempBuffer;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/>itsByteIO-&gt;read<sp/>(nvalues<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="namespacecasacore_1a79c2dfec4363785472512dbf384675a1" kindref="member">Int64</ref>),<sp/>value);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nvalues<sp/>*<sp/><ref refid="LECanonicalConversion_8h_1a0f94ee2c91bc4b55a67afb4abed7bcf2" kindref="member">SIZE_LECAN_INT64</ref>;</highlight></codeline>
<codeline lineno="394"><highlight class="normal">}</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="namespacecasacore_1ab4b0b9db3c436e10b1c133dd70d8c4fa" kindref="member">LECanonicalIO::read</ref><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nvalues,<sp/><ref refid="namespacecasacore_1afbaa0f0eab7b3a56a4c320715f577d4f" kindref="member">uInt64</ref>*<sp/>value)</highlight></codeline>
<codeline lineno="397"><highlight class="normal">{</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="LECanonicalConversion_8h_1a554458bcf6aeb1a4e4118d1a9847e2f3" kindref="member">CONVERT_LECAN_UINT64</ref>)<sp/>{</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nvalues<sp/>*<sp/><ref refid="LECanonicalConversion_8h_1a0187e0c6783d4ce55a1325b06b847e3b" kindref="member">SIZE_LECAN_UINT64</ref><sp/>&lt;=<sp/>itsBufferLength)<sp/>{</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>itsByteIO-&gt;read<sp/>(nvalues<sp/>*<sp/><ref refid="LECanonicalConversion_8h_1a0187e0c6783d4ce55a1325b06b847e3b" kindref="member">SIZE_LECAN_UINT64</ref>,<sp/>itsBuffer);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LECanonicalConversion::toLocal(value,<sp/>itsBuffer,<sp/>nvalues);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>tempBuffer<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">[nvalues<sp/>*<sp/><ref refid="LECanonicalConversion_8h_1a0187e0c6783d4ce55a1325b06b847e3b" kindref="member">SIZE_LECAN_UINT64</ref>];</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>itsByteIO-&gt;read<sp/>(nvalues<sp/>*<sp/><ref refid="LECanonicalConversion_8h_1a0187e0c6783d4ce55a1325b06b847e3b" kindref="member">SIZE_LECAN_UINT64</ref>,<sp/>tempBuffer);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LECanonicalConversion::toLocal<sp/>(value,<sp/>tempBuffer,<sp/>nvalues);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>tempBuffer;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/>itsByteIO-&gt;read<sp/>(nvalues<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="namespacecasacore_1afbaa0f0eab7b3a56a4c320715f577d4f" kindref="member">uInt64</ref>),<sp/>value);</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nvalues<sp/>*<sp/><ref refid="LECanonicalConversion_8h_1a0187e0c6783d4ce55a1325b06b847e3b" kindref="member">SIZE_LECAN_UINT64</ref>;</highlight></codeline>
<codeline lineno="412"><highlight class="normal">}</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="namespacecasacore_1ab4b0b9db3c436e10b1c133dd70d8c4fa" kindref="member">LECanonicalIO::read</ref><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nvalues,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>value)</highlight></codeline>
<codeline lineno="415"><highlight class="normal">{</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="LECanonicalConversion_8h_1a6e78d9f55db4298d9bcb85e7602509ef" kindref="member">CONVERT_LECAN_FLOAT</ref>)<sp/>{</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nvalues<sp/>*<sp/><ref refid="LECanonicalConversion_8h_1a0dd9dba6eb7dfcbda1d251169d9b323c" kindref="member">SIZE_LECAN_FLOAT</ref><sp/>&lt;=<sp/>itsBufferLength)<sp/>{</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>itsByteIO-&gt;read<sp/>(nvalues<sp/>*<sp/><ref refid="LECanonicalConversion_8h_1a0dd9dba6eb7dfcbda1d251169d9b323c" kindref="member">SIZE_LECAN_FLOAT</ref>,<sp/>itsBuffer);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LECanonicalConversion::toLocal<sp/>(value,<sp/>itsBuffer,<sp/>nvalues);</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>tempBuffer<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">[nvalues<sp/>*<sp/><ref refid="LECanonicalConversion_8h_1a0dd9dba6eb7dfcbda1d251169d9b323c" kindref="member">SIZE_LECAN_FLOAT</ref>];</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>itsByteIO-&gt;read<sp/>(nvalues<sp/>*<sp/><ref refid="LECanonicalConversion_8h_1a0dd9dba6eb7dfcbda1d251169d9b323c" kindref="member">SIZE_LECAN_FLOAT</ref>,<sp/>tempBuffer);</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LECanonicalConversion::toLocal<sp/>(value,<sp/>tempBuffer,<sp/>nvalues);</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>tempBuffer;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/>itsByteIO-&gt;read<sp/>(nvalues<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">),<sp/>value);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nvalues<sp/>*<sp/><ref refid="LECanonicalConversion_8h_1a0dd9dba6eb7dfcbda1d251169d9b323c" kindref="member">SIZE_LECAN_FLOAT</ref>;</highlight></codeline>
<codeline lineno="430"><highlight class="normal">}</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="namespacecasacore_1ab4b0b9db3c436e10b1c133dd70d8c4fa" kindref="member">LECanonicalIO::read</ref><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nvalues,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>value)</highlight></codeline>
<codeline lineno="433"><highlight class="normal">{</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="LECanonicalConversion_8h_1a5b5db7a274c129b486eb8e91fa11bd34" kindref="member">CONVERT_LECAN_DOUBLE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nvalues<sp/>*<sp/><ref refid="LECanonicalConversion_8h_1a03f8a766fa100737280cf1feb50cb968" kindref="member">SIZE_LECAN_DOUBLE</ref><sp/>&lt;=<sp/>itsBufferLength)<sp/>{</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>itsByteIO-&gt;read<sp/>(nvalues<sp/>*<sp/><ref refid="LECanonicalConversion_8h_1a03f8a766fa100737280cf1feb50cb968" kindref="member">SIZE_LECAN_DOUBLE</ref>,<sp/>itsBuffer);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LECanonicalConversion::toLocal<sp/>(value,<sp/>itsBuffer,<sp/>nvalues);</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>tempBuffer<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">[nvalues<sp/>*<sp/><ref refid="LECanonicalConversion_8h_1a03f8a766fa100737280cf1feb50cb968" kindref="member">SIZE_LECAN_DOUBLE</ref>];</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>itsByteIO-&gt;read<sp/>(nvalues<sp/>*<sp/><ref refid="LECanonicalConversion_8h_1a03f8a766fa100737280cf1feb50cb968" kindref="member">SIZE_LECAN_DOUBLE</ref>,<sp/>tempBuffer);</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LECanonicalConversion::toLocal<sp/>(value,<sp/>tempBuffer,<sp/>nvalues);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>tempBuffer;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/>itsByteIO-&gt;read<sp/>(nvalues<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">),<sp/>value);</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nvalues<sp/>*<sp/><ref refid="LECanonicalConversion_8h_1a03f8a766fa100737280cf1feb50cb968" kindref="member">SIZE_LECAN_DOUBLE</ref>;</highlight></codeline>
<codeline lineno="448"><highlight class="normal">}</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="namespacecasacore_1ab4b0b9db3c436e10b1c133dd70d8c4fa" kindref="member">LECanonicalIO::read</ref><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nvalues,<sp/><ref refid="namespacecasacore_1ab81d263ab360e9922913a80bae6d7695" kindref="member">Complex</ref>*<sp/>value)</highlight></codeline>
<codeline lineno="451"><highlight class="normal">{</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacecasacore_1ab4b0b9db3c436e10b1c133dd70d8c4fa" kindref="member">TypeIO::read</ref><sp/>(nvalues,<sp/>value);</highlight></codeline>
<codeline lineno="453"><highlight class="normal">}</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="namespacecasacore_1ab4b0b9db3c436e10b1c133dd70d8c4fa" kindref="member">LECanonicalIO::read</ref><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nvalues,<sp/><ref refid="namespacecasacore_1a2a9616f801f0f94ac5c480453377e268" kindref="member">DComplex</ref>*<sp/>value)</highlight></codeline>
<codeline lineno="456"><highlight class="normal">{</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacecasacore_1ab4b0b9db3c436e10b1c133dd70d8c4fa" kindref="member">TypeIO::read</ref><sp/>(nvalues,<sp/>value);</highlight></codeline>
<codeline lineno="458"><highlight class="normal">}</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="namespacecasacore_1ab4b0b9db3c436e10b1c133dd70d8c4fa" kindref="member">LECanonicalIO::read</ref><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nvalues,<sp/>String*<sp/>value)</highlight></codeline>
<codeline lineno="461"><highlight class="normal">{</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacecasacore_1ab4b0b9db3c436e10b1c133dd70d8c4fa" kindref="member">TypeIO::read</ref><sp/>(nvalues,<sp/>value);</highlight></codeline>
<codeline lineno="463"><highlight class="normal">}</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal">}<sp/></highlight><highlight class="comment">//#<sp/>NAMESPACE<sp/>CASACORE<sp/>-<sp/>END</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="casa/IO/LECanonicalIO.cc"/>
  </compounddef>
</doxygen>
