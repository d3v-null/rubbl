<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="RetypedArraySetGet_8tcc" kind="file" language="C++">
    <compoundname>RetypedArraySetGet.tcc</compoundname>
    <includedby refid="RetypedArraySetGet_8h" local="no">tables/DataMan/RetypedArraySetGet.h</includedby>
    <invincdepgraph>
      <node id="2">
        <label>tables/DataMan/RetypedArraySetGet.h</label>
        <link refid="RetypedArraySetGet_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>tables/Tables.h</label>
        <link refid="Tables_8h"/>
      </node>
      <node id="1">
        <label>tables/DataMan/RetypedArraySetGet.tcc</label>
        <link refid="RetypedArraySetGet_8tcc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>tables/DataMan.h</label>
        <link refid="DataMan_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline><highlight class="normal">//#<sp/>RetypedArraySetGet.cc:<sp/>Helper<sp/>functions<sp/>for<sp/>users<sp/>of<sp/>RetypedArrayEngine</highlight></codeline>
<codeline><highlight class="normal">//#<sp/>Copyright<sp/>(C)<sp/>1994,1995,1996</highlight></codeline>
<codeline><highlight class="normal">//#<sp/>Associated<sp/>Universities,<sp/>Inc.<sp/>Washington<sp/>DC,<sp/>USA.</highlight></codeline>
<codeline><highlight class="normal">//#</highlight></codeline>
<codeline><highlight class="normal">//#<sp/>This<sp/>library<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify<sp/>it</highlight></codeline>
<codeline><highlight class="normal">//#<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Library<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline><highlight class="normal">//#<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>2<sp/>of<sp/>the<sp/>License,<sp/>or<sp/>(at<sp/>your</highlight></codeline>
<codeline><highlight class="normal">//#<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline><highlight class="normal">//#</highlight></codeline>
<codeline><highlight class="normal">//#<sp/>This<sp/>library<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,<sp/>but<sp/>WITHOUT</highlight></codeline>
<codeline><highlight class="normal">//#<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of<sp/>MERCHANTABILITY<sp/>or</highlight></codeline>
<codeline><highlight class="normal">//#<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the<sp/>GNU<sp/>Library<sp/>General<sp/>Public</highlight></codeline>
<codeline><highlight class="normal">//#<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline><highlight class="normal">//#</highlight></codeline>
<codeline><highlight class="normal">//#<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Library<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline><highlight class="normal">//#<sp/>along<sp/>with<sp/>this<sp/>library;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software<sp/>Foundation,</highlight></codeline>
<codeline><highlight class="normal">//#<sp/>Inc.,<sp/>675<sp/>Massachusetts<sp/>Ave,<sp/>Cambridge,<sp/>MA<sp/>02139,<sp/>USA.</highlight></codeline>
<codeline><highlight class="normal">//#</highlight></codeline>
<codeline><highlight class="normal">//#<sp/>Correspondence<sp/>concerning<sp/>AIPS++<sp/>should<sp/>be<sp/>addressed<sp/>as<sp/>follows:</highlight></codeline>
<codeline><highlight class="normal">//#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Internet<sp/>email:<sp/>casa-feedback@nrao.edu.</highlight></codeline>
<codeline><highlight class="normal">//#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Postal<sp/>address:<sp/>AIPS++<sp/>Project<sp/>Office</highlight></codeline>
<codeline><highlight class="normal">//#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>National<sp/>Radio<sp/>Astronomy<sp/>Observatory</highlight></codeline>
<codeline><highlight class="normal">//#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>520<sp/>Edgemont<sp/>Road</highlight></codeline>
<codeline><highlight class="normal">//#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Charlottesville,<sp/>VA<sp/>22903-2475<sp/>USA</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#ifndef<sp/>TABLES_RETYPEDARRAYSETGET_TCC</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>TABLES_RETYPEDARRAYSETGET_TCC</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//#<sp/>Includes</highlight></codeline>
<codeline><highlight class="normal">#include<sp/>&lt;casacore/tables/DataMan/RetypedArraySetGet.h&gt;</highlight></codeline>
<codeline><highlight class="normal">#include<sp/>&lt;casacore/casa/Arrays/Array.h&gt;</highlight></codeline>
<codeline><highlight class="normal">#include<sp/>&lt;casacore/casa/Utilities/Copy.h&gt;</highlight></codeline>
<codeline></codeline>
<codeline></codeline>
<codeline><highlight class="normal">namespace<sp/>casacore<sp/>{<sp/>//#<sp/>NAMESPACE<sp/>CASACORE<sp/>-<sp/>BEGIN</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>Copy<sp/>the<sp/>entire<sp/>target<sp/>array<sp/>to<sp/>the<sp/>source<sp/>array.</highlight></codeline>
<codeline><highlight class="normal">//<sp/>It<sp/>will<sp/>check<sp/>if<sp/>the<sp/>shapes<sp/>and<sp/>sizes<sp/>match.</highlight></codeline>
<codeline><highlight class="normal">template&lt;class<sp/>SourceType,<sp/>class<sp/>TargetType&gt;</highlight></codeline>
<codeline><highlight class="normal">void<sp/>retypedArrayEngineSet<sp/>(Array&lt;SourceType&gt;&amp;<sp/>out,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>Array&lt;TargetType&gt;&amp;<sp/>in)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>Bool<sp/>deleteIn,<sp/>deleteOut;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SourceType*<sp/>dataOut<sp/>=<sp/>out.getStorage<sp/>(deleteOut);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>const<sp/>TargetType*<sp/>dataIn<sp/>=<sp/>in.getStorage<sp/>(deleteIn);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>objcopy<sp/>((TargetType*)dataOut,<sp/>dataIn,<sp/>in.nelements());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>in.freeStorage<sp/>(dataIn,<sp/>deleteIn);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>out.putStorage<sp/>(dataOut,<sp/>deleteOut);</highlight></codeline>
<codeline><highlight class="normal">}<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>Copy<sp/>the<sp/>entire<sp/>source<sp/>array<sp/>to<sp/>the<sp/>target<sp/>array.</highlight></codeline>
<codeline><highlight class="normal">//<sp/>It<sp/>will<sp/>check<sp/>if<sp/>the<sp/>shapes<sp/>and<sp/>sizes<sp/>match.</highlight></codeline>
<codeline><highlight class="normal">template&lt;class<sp/>SourceType,<sp/>class<sp/>TargetType&gt;</highlight></codeline>
<codeline><highlight class="normal">void<sp/>retypedArrayEngineGet<sp/>(Array&lt;TargetType&gt;&amp;<sp/>out,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>Array&lt;SourceType&gt;&amp;<sp/>in)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>Bool<sp/>deleteIn,<sp/>deleteOut;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>TargetType*<sp/>dataOut<sp/>=<sp/>out.getStorage<sp/>(deleteOut);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>const<sp/>SourceType*<sp/>dataIn<sp/>=<sp/>in.getStorage<sp/>(deleteIn);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>objcopy<sp/>(dataOut,<sp/>(const<sp/>TargetType*)dataIn,<sp/>out.nelements());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>in.freeStorage<sp/>(dataIn,<sp/>deleteIn);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>out.putStorage<sp/>(dataOut,<sp/>deleteOut);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>Fill<sp/>an<sp/>array<sp/>with<sp/>SourceType<sp/>objects<sp/>from<sp/>the<sp/>target<sp/>array.</highlight></codeline>
<codeline><highlight class="normal">//<sp/>This<sp/>is<sp/>called<sp/>when<sp/>the<sp/>target<sp/>is<sp/>incomplete.</highlight></codeline>
<codeline><highlight class="normal">//<sp/>The<sp/>shape<sp/>and<sp/>extra<sp/>argument<sp/>can<sp/>help<sp/>to<sp/>fill<sp/>the<sp/>source.</highlight></codeline>
<codeline><highlight class="normal">template&lt;class<sp/>SourceType,<sp/>class<sp/>TargetType&gt;</highlight></codeline>
<codeline><highlight class="normal">void<sp/>retypedArrayEngineSet<sp/>(Array&lt;SourceType&gt;&amp;<sp/>out,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>Array&lt;TargetType&gt;&amp;<sp/>in,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>IPosition&amp;<sp/>shape,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>void*<sp/>extraArgument)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>Bool<sp/>deleteIn,<sp/>deleteOut;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SourceType*<sp/>dataOut<sp/>=<sp/>out.getStorage<sp/>(deleteOut);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>const<sp/>TargetType*<sp/>dataIn<sp/>=<sp/>in.getStorage<sp/>(deleteIn);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>Set<sp/>element<sp/>by<sp/>element.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>Int64<sp/>n<sp/>=<sp/>shape.product();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>SourceType*<sp/>op<sp/><sp/>=<sp/>dataOut;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>const<sp/>TargetType*<sp/>ip<sp/>=<sp/>dataIn;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>const<sp/>TargetType*<sp/>last<sp/>=<sp/>ip<sp/>+<sp/>in.nelements();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>while<sp/>(ip<sp/>&lt;<sp/>last)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>op++-&gt;setElem<sp/>(ip,<sp/>shape,<sp/>extraArgument);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>ip<sp/>+=<sp/>n;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>in.freeStorage<sp/>(dataIn,<sp/>deleteIn);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>out.putStorage<sp/>(dataOut,<sp/>deleteOut);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>Fill<sp/>an<sp/>array<sp/>with<sp/>TargetType<sp/>objects<sp/>from<sp/>the<sp/>source<sp/>array.</highlight></codeline>
<codeline><highlight class="normal">//<sp/>This<sp/>is<sp/>called<sp/>when<sp/>the<sp/>target<sp/>is<sp/>incomplete.</highlight></codeline>
<codeline><highlight class="normal">//<sp/>The<sp/>shape<sp/>and<sp/>extra<sp/>argument<sp/>can<sp/>help<sp/>to<sp/>extract<sp/>the<sp/>correct</highlight></codeline>
<codeline><highlight class="normal">//<sp/>elements<sp/>from<sp/>the<sp/>source.</highlight></codeline>
<codeline><highlight class="normal">template&lt;class<sp/>SourceType,<sp/>class<sp/>TargetType&gt;</highlight></codeline>
<codeline><highlight class="normal">void<sp/>retypedArrayEngineGet<sp/>(Array&lt;TargetType&gt;&amp;<sp/>out,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>Array&lt;SourceType&gt;&amp;<sp/>in,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>IPosition&amp;<sp/>shape,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>void*<sp/>extraArgument)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>Bool<sp/>deleteIn,<sp/>deleteOut;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>TargetType*<sp/>dataOut<sp/>=<sp/>out.getStorage<sp/>(deleteOut);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>const<sp/>SourceType*<sp/>dataIn<sp/>=<sp/>in.getStorage<sp/>(deleteIn);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>Set<sp/>element<sp/>by<sp/>element.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>Int64<sp/>n<sp/>=<sp/>shape.product();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>TargetType*<sp/>op<sp/><sp/>=<sp/>dataOut;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>const<sp/>SourceType*<sp/>ip<sp/>=<sp/>dataIn;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>const<sp/>SourceType*<sp/>last<sp/>=<sp/>ip<sp/>+<sp/>in.nelements();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>while<sp/>(ip<sp/>&lt;<sp/>last)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>ip++-&gt;getElem<sp/>(op,<sp/>shape,<sp/>extraArgument);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>op<sp/>+=<sp/>n;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>in.freeStorage<sp/>(dataIn,<sp/>deleteIn);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>out.putStorage<sp/>(dataOut,<sp/>deleteOut);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">}<sp/>//#<sp/>NAMESPACE<sp/>CASACORE<sp/>-<sp/>END</highlight></codeline>
<codeline></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#endif</highlight></codeline>
    </programlisting>
    <location file="tables/DataMan/RetypedArraySetGet.tcc"/>
  </compounddef>
</doxygen>
