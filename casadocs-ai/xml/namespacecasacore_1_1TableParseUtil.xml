<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="namespacecasacore_1_1TableParseUtil" kind="namespace" language="C++">
    <compoundname>casacore::TableParseUtil</compoundname>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacecasacore_1_1TableParseUtil_1ad6041aa07bcc9ac1300208c82978fee6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classcasacore_1_1Table" kindref="compound">Table</ref></type>
        <definition>Table casacore::TableParseUtil::getTable</definition>
        <argsstring>(Int tabnr, const String &amp;name, const Table &amp;ftab, const std::vector&lt; const Table * &gt; &amp;tempTables, const std::vector&lt; TableParseQuery * &gt; &amp;stack, Bool alwaysOpen)</argsstring>
        <name>getTable</name>
        <param>
          <type><ref refid="namespacecasacore_1abb6e2c1bac472ca1ebadadf96cc8426f" kindref="member">Int</ref></type>
          <declname>tabnr</declname>
        </param>
        <param>
          <type>const <ref refid="classcasacore_1_1String" kindref="compound">String</ref> &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const <ref refid="classcasacore_1_1Table" kindref="compound">Table</ref> &amp;</type>
          <declname>ftab</declname>
        </param>
        <param>
          <type>const std::vector&lt; const <ref refid="classcasacore_1_1Table" kindref="compound">Table</ref> * &gt; &amp;</type>
          <declname>tempTables</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="classcasacore_1_1TableParseQuery" kindref="compound">TableParseQuery</ref> * &gt; &amp;</type>
          <declname>stack</declname>
        </param>
        <param>
          <type><ref refid="namespacecasacore_1abd5691f9e13acc90d901e4007740ff98" kindref="member">Bool</ref></type>
          <declname>alwaysOpen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tables/TaQL/TableParseUtil.cc" line="67" column="11" bodyfile="tables/TaQL/TableParseUtil.cc" bodystart="67" bodyend="180" declfile="tables/TaQL/TableParseUtil.h" declline="63" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="namespacecasacore_1_1TableParseUtil_1a44eeb869787c2485113f0bcdcbd7e369" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacecasacore_1abd5691f9e13acc90d901e4007740ff98" kindref="member">Bool</ref></type>
        <definition>Bool casacore::TableParseUtil::splitName</definition>
        <argsstring>(String &amp;shorthand, String &amp;columnName, Vector&lt; String &gt; &amp;fieldNames, const String &amp;name, Bool checkError, Bool isKeyword, Bool allowNoKey)</argsstring>
        <name>splitName</name>
        <param>
          <type><ref refid="classcasacore_1_1String" kindref="compound">String</ref> &amp;</type>
          <declname>shorthand</declname>
        </param>
        <param>
          <type><ref refid="classcasacore_1_1String" kindref="compound">String</ref> &amp;</type>
          <declname>columnName</declname>
        </param>
        <param>
          <type><ref refid="classcasacore_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classcasacore_1_1String" kindref="compound">String</ref> &gt; &amp;</type>
          <declname>fieldNames</declname>
        </param>
        <param>
          <type>const <ref refid="classcasacore_1_1String" kindref="compound">String</ref> &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="namespacecasacore_1abd5691f9e13acc90d901e4007740ff98" kindref="member">Bool</ref></type>
          <declname>checkError</declname>
        </param>
        <param>
          <type><ref refid="namespacecasacore_1abd5691f9e13acc90d901e4007740ff98" kindref="member">Bool</ref></type>
          <declname>isKeyword</declname>
        </param>
        <param>
          <type><ref refid="namespacecasacore_1abd5691f9e13acc90d901e4007740ff98" kindref="member">Bool</ref></type>
          <declname>allowNoKey</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tables/TaQL/TableParseUtil.cc" line="194" column="10" bodyfile="tables/TaQL/TableParseUtil.cc" bodystart="194" bodyend="292" declfile="tables/TaQL/TableParseUtil.h" declline="91" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespacecasacore_1_1TableParseUtil_1a5bb5e0440ef1d10130a59c1c786dc6d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classcasacore_1_1Table" kindref="compound">Table</ref></type>
        <definition>Table casacore::TableParseUtil::openParentTable</definition>
        <argsstring>(const String &amp;fullName, const String &amp;subTableName, const std::vector&lt; const Table * &gt; &amp;tempTables, const std::vector&lt; TableParseQuery * &gt; &amp;stack)</argsstring>
        <name>openParentTable</name>
        <param>
          <type>const <ref refid="classcasacore_1_1String" kindref="compound">String</ref> &amp;</type>
          <declname>fullName</declname>
        </param>
        <param>
          <type>const <ref refid="classcasacore_1_1String" kindref="compound">String</ref> &amp;</type>
          <declname>subTableName</declname>
        </param>
        <param>
          <type>const std::vector&lt; const <ref refid="classcasacore_1_1Table" kindref="compound">Table</ref> * &gt; &amp;</type>
          <declname>tempTables</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="classcasacore_1_1TableParseQuery" kindref="compound">TableParseQuery</ref> * &gt; &amp;</type>
          <declname>stack</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tables/TaQL/TableParseUtil.cc" line="294" column="11" bodyfile="tables/TaQL/TableParseUtil.cc" bodystart="294" bodyend="310" declfile="tables/TaQL/TableParseUtil.h" declline="70" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="namespacecasacore_1_1TableParseUtil_1a935f4b086dd83d92203b48405c1bd671" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void casacore::TableParseUtil::setRecFld</definition>
        <argsstring>(RecordInterface &amp;rec, const String &amp;name, const String &amp;dtype, const ValueHolder &amp;vh)</argsstring>
        <name>setRecFld</name>
        <param>
          <type><ref refid="classcasacore_1_1RecordInterface" kindref="compound">RecordInterface</ref> &amp;</type>
          <declname>rec</declname>
        </param>
        <param>
          <type>const <ref refid="classcasacore_1_1String" kindref="compound">String</ref> &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const <ref refid="classcasacore_1_1String" kindref="compound">String</ref> &amp;</type>
          <declname>dtype</declname>
        </param>
        <param>
          <type>const <ref refid="classcasacore_1_1ValueHolder" kindref="compound">ValueHolder</ref> &amp;</type>
          <declname>vh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tables/TaQL/TableParseUtil.cc" line="312" column="10" bodyfile="tables/TaQL/TableParseUtil.cc" bodystart="312" bodyend="373" declfile="tables/TaQL/TableParseUtil.h" declline="96" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespacecasacore_1_1TableParseUtil_1a1ba5ba4649faafaf776110fde69e33c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classcasacore_1_1String" kindref="compound">String</ref></type>
        <definition>String casacore::TableParseUtil::getTypeString</definition>
        <argsstring>(const String &amp;typeStr, DataType type)</argsstring>
        <name>getTypeString</name>
        <param>
          <type>const <ref refid="classcasacore_1_1String" kindref="compound">String</ref> &amp;</type>
          <declname>typeStr</declname>
        </param>
        <param>
          <type><ref refid="namespacecasacore_1a81df62ade83d72ba450271cdc021220e" kindref="member">DataType</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tables/TaQL/TableParseUtil.cc" line="375" column="12" bodyfile="tables/TaQL/TableParseUtil.cc" bodystart="375" bodyend="435" declfile="tables/TaQL/TableParseUtil.h" declline="101" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="namespacecasacore_1_1TableParseUtil_1a8362f7b8a3c93c94885db45d2c8d7f83" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classcasacore_1_1Block" kindref="compound">Block</ref>&lt; <ref refid="classcasacore_1_1String" kindref="compound">String</ref> &gt;</type>
        <definition>Block&lt; String &gt; casacore::TableParseUtil::getStoredColumns</definition>
        <argsstring>(const Table &amp;tab)</argsstring>
        <name>getStoredColumns</name>
        <param>
          <type>const <ref refid="classcasacore_1_1Table" kindref="compound">Table</ref> &amp;</type>
          <declname>tab</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tables/TaQL/TableParseUtil.cc" line="437" column="11" bodyfile="tables/TaQL/TableParseUtil.cc" bodystart="437" bodyend="450" declfile="tables/TaQL/TableParseUtil.h" declline="104" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="namespacecasacore_1_1TableParseUtil_1a75b53c802ec1d6fe71ce051721c4351f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classcasacore_1_1TableExprNode" kindref="compound">TableExprNode</ref></type>
        <definition>TableExprNode casacore::TableParseUtil::getColSet</definition>
        <argsstring>(const Table &amp;table)</argsstring>
        <name>getColSet</name>
        <param>
          <type>const <ref refid="classcasacore_1_1Table" kindref="compound">Table</ref> &amp;</type>
          <declname>table</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tables/TaQL/TableParseUtil.cc" line="452" column="19" bodyfile="tables/TaQL/TableParseUtil.cc" bodystart="452" bodyend="574" declfile="tables/TaQL/TableParseUtil.h" declline="107" declcolumn="19"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="tables/TaQL/TableParseUtil.cc" line="41" column="3"/>
  </compounddef>
</doxygen>
