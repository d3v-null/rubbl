<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="ArrayIO_8tcc" kind="file" language="C++">
    <compoundname>ArrayIO.tcc</compoundname>
    <includedby refid="ArrayIO_8h" local="no">casa/IO/ArrayIO.h</includedby>
    <invincdepgraph>
      <node id="21">
        <label>tables/DataMan/TiledCellStMan.cc</label>
        <link refid="TiledCellStMan_8cc"/>
      </node>
      <node id="10">
        <label>casa/Quanta/MVBaseline.cc</label>
        <link refid="MVBaseline_8cc"/>
      </node>
      <node id="27">
        <label>tables/Tables/BaseTabIter.cc</label>
        <link refid="BaseTabIter_8cc"/>
      </node>
      <node id="3">
        <label>casa/Arrays.h</label>
        <link refid="Arrays_8h"/>
      </node>
      <node id="14">
        <label>casa/Quanta/MVRadialVelocity.cc</label>
        <link refid="MVRadialVelocity_8cc"/>
      </node>
      <node id="26">
        <label>tables/Tables/BaseColDesc.cc</label>
        <link refid="BaseColDesc_8cc"/>
      </node>
      <node id="12">
        <label>casa/Quanta/MVEarthMagnetic.cc</label>
        <link refid="MVEarthMagnetic_8cc"/>
      </node>
      <node id="23">
        <label>tables/DataMan/TiledShapeStMan.cc</label>
        <link refid="TiledShapeStMan_8cc"/>
      </node>
      <node id="11">
        <label>casa/Quanta/MVDouble.cc</label>
        <link refid="MVDouble_8cc"/>
      </node>
      <node id="24">
        <label>tables/DataMan/TSMCube.cc</label>
        <link refid="TSMCube_8cc"/>
      </node>
      <node id="5">
        <label>casa/Containers/RecordRep.cc</label>
        <link refid="RecordRep_8cc"/>
      </node>
      <node id="31">
        <label>tables/Tables/TableProxy.cc</label>
        <link refid="TableProxy_8cc"/>
      </node>
      <node id="15">
        <label>casa/Quanta/MVuvw.cc</label>
        <link refid="MVuvw_8cc"/>
      </node>
      <node id="8">
        <label>casa/OS/Path.cc</label>
        <link refid="Path_8cc"/>
      </node>
      <node id="17">
        <label>casa/Quanta/RotMatrix.cc</label>
        <link refid="RotMatrix_8cc"/>
      </node>
      <node id="19">
        <label>tables/apps/taql.cc</label>
        <link refid="taql_8cc"/>
      </node>
      <node id="34">
        <label>tables/TaQL/TableParseQuery.cc</label>
        <link refid="TableParseQuery_8cc"/>
      </node>
      <node id="1">
        <label>casa/IO/ArrayIO.tcc</label>
        <link refid="ArrayIO_8tcc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>casa/IO/ArrayIO.h</label>
        <link refid="ArrayIO_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>casa/OS/DynLib.cc</label>
        <link refid="DynLib_8cc"/>
      </node>
      <node id="20">
        <label>tables/DataMan/StArrAipsIO.cc</label>
        <link refid="StArrAipsIO_8cc"/>
      </node>
      <node id="33">
        <label>tables/TaQL/ExprNodeSetElem.cc</label>
        <link refid="ExprNodeSetElem_8cc"/>
      </node>
      <node id="32">
        <label>tables/Tables/TableUtil.cc</label>
        <link refid="TableUtil_8cc"/>
      </node>
      <node id="22">
        <label>tables/DataMan/TiledColumnStMan.cc</label>
        <link refid="TiledColumnStMan_8cc"/>
      </node>
      <node id="9">
        <label>casa/Quanta/Euler.cc</label>
        <link refid="Euler_8cc"/>
      </node>
      <node id="4">
        <label>casa/Containers/RecordDesc.cc</label>
        <link refid="RecordDesc_8cc"/>
      </node>
      <node id="6">
        <label>casa/Containers/ValueHolderRep.cc</label>
        <link refid="ValueHolderRep_8cc"/>
      </node>
      <node id="16">
        <label>casa/Quanta/QuantumHolder.cc</label>
        <link refid="QuantumHolder_8cc"/>
      </node>
      <node id="13">
        <label>casa/Quanta/MVPosition.cc</label>
        <link refid="MVPosition_8cc"/>
      </node>
      <node id="28">
        <label>tables/Tables/ConcatTable.cc</label>
        <link refid="ConcatTable_8cc"/>
      </node>
      <node id="18">
        <label>tables/apps/tablefromascii.cc</label>
        <link refid="tablefromascii_8cc"/>
      </node>
      <node id="30">
        <label>tables/Tables/Table.cc</label>
        <link refid="Table_8cc"/>
      </node>
      <node id="29">
        <label>tables/Tables/RefTable.cc</label>
        <link refid="RefTable_8cc"/>
      </node>
      <node id="25">
        <label>tables/Tables/ArrColData.cc</label>
        <link refid="ArrColData_8cc"/>
      </node>
    </invincdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline><highlight class="normal">//#<sp/>ArrayIO.cc:<sp/>text<sp/>output<sp/>and<sp/>binary<sp/>IO<sp/>for<sp/>an<sp/>array<sp/>of<sp/>any<sp/>dimensionality.</highlight></codeline>
<codeline><highlight class="normal">//#<sp/>Copyright<sp/>(C)<sp/>1993,1994,1995,1996,1997,1999,2000,2001,2002,2003</highlight></codeline>
<codeline><highlight class="normal">//#<sp/>Associated<sp/>Universities,<sp/>Inc.<sp/>Washington<sp/>DC,<sp/>USA.</highlight></codeline>
<codeline><highlight class="normal">//#<sp/></highlight></codeline>
<codeline><highlight class="normal">//#<sp/>This<sp/>library<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify<sp/>it</highlight></codeline>
<codeline><highlight class="normal">//#<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Library<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline><highlight class="normal">//#<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>2<sp/>of<sp/>the<sp/>License,<sp/>or<sp/>(at<sp/>your</highlight></codeline>
<codeline><highlight class="normal">//#<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline><highlight class="normal">//#<sp/></highlight></codeline>
<codeline><highlight class="normal">//#<sp/>This<sp/>library<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,<sp/>but<sp/>WITHOUT</highlight></codeline>
<codeline><highlight class="normal">//#<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of<sp/>MERCHANTABILITY<sp/>or</highlight></codeline>
<codeline><highlight class="normal">//#<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the<sp/>GNU<sp/>Library<sp/>General<sp/>Public</highlight></codeline>
<codeline><highlight class="normal">//#<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline><highlight class="normal">//#<sp/></highlight></codeline>
<codeline><highlight class="normal">//#<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Library<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline><highlight class="normal">//#<sp/>along<sp/>with<sp/>this<sp/>library;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software<sp/>Foundation,</highlight></codeline>
<codeline><highlight class="normal">//#<sp/>Inc.,<sp/>675<sp/>Massachusetts<sp/>Ave,<sp/>Cambridge,<sp/>MA<sp/>02139,<sp/>USA.</highlight></codeline>
<codeline><highlight class="normal">//#<sp/></highlight></codeline>
<codeline><highlight class="normal">//#<sp/>Correspondence<sp/>concerning<sp/>AIPS++<sp/>should<sp/>be<sp/>addressed<sp/>as<sp/>follows:</highlight></codeline>
<codeline><highlight class="normal">//#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Internet<sp/>email:<sp/>casa-feedback@nrao.edu.</highlight></codeline>
<codeline><highlight class="normal">//#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Postal<sp/>address:<sp/>AIPS++<sp/>Project<sp/>Office</highlight></codeline>
<codeline><highlight class="normal">//#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>National<sp/>Radio<sp/>Astronomy<sp/>Observatory</highlight></codeline>
<codeline><highlight class="normal">//#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>520<sp/>Edgemont<sp/>Road</highlight></codeline>
<codeline><highlight class="normal">//#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Charlottesville,<sp/>VA<sp/>22903-2475<sp/>USA</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#ifndef<sp/>CASA_ARRAYIO_2_TCC</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>CASA_ARRAYIO_2_TCC</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//#<sp/>Includes</highlight></codeline>
<codeline><highlight class="normal">#include<sp/>&lt;casacore/casa/Arrays/Array.h&gt;</highlight></codeline>
<codeline><highlight class="normal">#include<sp/>&lt;casacore/casa/Arrays/ArrayError.h&gt;</highlight></codeline>
<codeline><highlight class="normal">#include<sp/>&lt;casacore/casa/Arrays/Matrix.h&gt;</highlight></codeline>
<codeline><highlight class="normal">#include<sp/>&lt;casacore/casa/Arrays/Vector.h&gt;</highlight></codeline>
<codeline><highlight class="normal">#include<sp/>&lt;casacore/casa/Arrays/ArrayPosIter.h&gt;</highlight></codeline>
<codeline><highlight class="normal">#include<sp/>&lt;casacore/casa/Arrays/ArrayUtil.h&gt;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#include<sp/>&lt;casacore/casa/IO/AipsIO.h&gt;</highlight></codeline>
<codeline><highlight class="normal">#include<sp/>&lt;casacore/casa/IO/AipsIOCarray.h&gt;</highlight></codeline>
<codeline><highlight class="normal">#include<sp/>&lt;casacore/casa/IO/ArrayIO.h&gt;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#include<sp/>&lt;casacore/casa/Logging/LogIO.h&gt;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#include<sp/>&lt;istream&gt;</highlight></codeline>
<codeline><highlight class="normal">#include<sp/>&lt;fstream&gt;</highlight></codeline>
<codeline><highlight class="normal">#include<sp/>&lt;cassert&gt;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">namespace<sp/>casacore<sp/>{<sp/>//#<sp/>NAMESPACE<sp/>CASACORE<sp/>-<sp/>BEGIN</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">template&lt;class<sp/>T&gt;</highlight></codeline>
<codeline><highlight class="normal">LogIO<sp/>&amp;operator&lt;&lt;(LogIO<sp/>&amp;os,<sp/>const<sp/>Array&lt;T&gt;<sp/>&amp;a)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>os.output()<sp/>&lt;&lt;<sp/>a;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>os;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">template&lt;class<sp/>T&gt;</highlight></codeline>
<codeline><highlight class="normal">AipsIO<sp/>&amp;operator&lt;&lt;(AipsIO<sp/>&amp;ios,<sp/>const<sp/>Array&lt;T&gt;<sp/>&amp;a)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>putArray<sp/>(ios,<sp/>a,<sp/>&quot;Array&quot;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>ios;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">template&lt;class<sp/>T&gt;</highlight></codeline>
<codeline><highlight class="normal">void<sp/>putArray<sp/>(AipsIO<sp/>&amp;ios,<sp/>const<sp/>Array&lt;T&gt;<sp/>&amp;a,<sp/>const<sp/>Char*<sp/>name)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(a.size()<sp/>*<sp/>sizeof(T)<sp/>&gt;<sp/>2147483647)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>throw<sp/>AipsError(&quot;AipsIO<sp/>putArray<sp/>too<sp/>large<sp/>(exceeds<sp/>2**31<sp/>bytes)&quot;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ios.putstart(name,<sp/>Array&lt;T&gt;::arrayVersion());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>Write<sp/>out<sp/>dimensionality</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ios<sp/>&lt;&lt;<sp/>uInt(a.ndim());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>Write<sp/>out<sp/>length</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>for<sp/>(size_t<sp/>i=0;<sp/>i<sp/>&lt;<sp/>a.ndim();<sp/>i++)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ios<sp/>&lt;&lt;<sp/>uInt(a.shape()(i));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>Now<sp/>write<sp/>out<sp/>the<sp/>data</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>bool<sp/>deleteIt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>const<sp/>T<sp/>*storage<sp/>=<sp/><sp/>a.getStorage(deleteIt);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>putAipsIO<sp/>(ios,<sp/>a.nelements(),<sp/>storage);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>a.freeStorage(storage,<sp/>deleteIt);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ios.putend();</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>&lt;thrown&gt;</highlight></codeline>
<codeline><highlight class="normal">//<sp/><sp/><sp/><sp/><sp/>&lt;item&gt;<sp/>ArrayError</highlight></codeline>
<codeline><highlight class="normal">//<sp/>&lt;/thrown&gt;</highlight></codeline>
<codeline><highlight class="normal">template&lt;class<sp/>T&gt;</highlight></codeline>
<codeline><highlight class="normal">AipsIO<sp/>&amp;operator&gt;&gt;(AipsIO<sp/>&amp;ios,<sp/>Array&lt;T&gt;<sp/>&amp;a)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>Makes<sp/>the<sp/>argument<sp/>unique,<sp/>i.e.<sp/>existing<sp/>refs<sp/>will<sp/>be<sp/>lost.<sp/>At<sp/>the<sp/>moment</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>this<sp/>is<sp/>relatively<sp/>inefficient<sp/>as<sp/>it<sp/>makes<sp/>a<sp/>temporary<sp/>copy.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>a.unique();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>On<sp/>20-Nov-2000<sp/>use<sp/>of<sp/>the<sp/>home-brew<sp/>rtti<sp/>was<sp/>removed.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>It<sp/>meant<sp/>that<sp/>a<sp/>name<sp/>&apos;Array&lt;int&gt;&apos;<sp/>is<sp/>now<sp/>replaced<sp/>by<sp/>&apos;Array&apos;.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>In<sp/>order<sp/>to<sp/>recognize<sp/>those<sp/>old<sp/>names,<sp/>we<sp/>must<sp/>do<sp/>something<sp/>special.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>String<sp/>type<sp/>=<sp/>ios.getNextType();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>int<sp/>version;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(type.length()<sp/>&gt;<sp/>6<sp/><sp/>&amp;&amp;<sp/><sp/>type.index(&quot;Array&lt;&quot;)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>version<sp/>=<sp/>ios.getstart(type);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>version<sp/>=<sp/>ios.getstart(&quot;Array&quot;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>int<sp/>ndim;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ios<sp/>&gt;&gt;<sp/>ndim;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>IPosition<sp/>shape(ndim);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>Older<sp/>versions<sp/>contain<sp/>an<sp/>origin<sp/>(which<sp/>we<sp/>discard).</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(version<sp/>&lt;<sp/>3)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>int<sp/>orig;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>for<sp/>(int<sp/>i=0;<sp/>i<sp/>&lt;<sp/>ndim;<sp/>i++)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ios<sp/>&gt;&gt;<sp/>orig;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>uInt<sp/>v;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>i=0;<sp/>i<sp/>&lt;<sp/>ndim;<sp/>i++)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ios<sp/>&gt;&gt;<sp/>v;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>shape(i)<sp/>=<sp/>v;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>a.resize(shape);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>hopefully<sp/>a<sp/>no-op<sp/>if<sp/>unchanged</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>Now<sp/>read<sp/>in<sp/>the<sp/>data.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>bool<sp/>deleteIt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>*storage<sp/>=<sp/>a.getStorage(deleteIt);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>uInt<sp/>nwritten;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ios<sp/>&gt;&gt;<sp/>nwritten;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(nwritten<sp/>!=<sp/>a.nelements())</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>throw(ArrayError(&quot;AipsIO<sp/>&amp;operator&gt;&gt;(AipsIO,<sp/>Array&lt;T&gt;&quot;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;<sp/>-<sp/>nelements()<sp/>differs<sp/>from<sp/>number<sp/>in<sp/>file&quot;));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>getAipsIO<sp/>(ios,<sp/>nwritten,<sp/>storage);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>a.putStorage(storage,<sp/>deleteIt);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ios.getend();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>ios;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">inline<sp/>LogIO&amp;<sp/>operator&lt;&lt;<sp/>(LogIO&amp;<sp/>os,<sp/>const<sp/>IPosition&amp;<sp/>ip)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>os.output()<sp/>&lt;&lt;<sp/>ip;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>os;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">template&lt;typename<sp/>T&gt;</highlight></codeline>
<codeline><highlight class="normal">Block&lt;T&gt;<sp/>makeBlock(const<sp/>Array&lt;T&gt;&amp;<sp/>array)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Block&lt;T&gt;<sp/>block(array.nelements());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>if(array.contiguousStorage())</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>std::copy(array.cbegin(),<sp/>array.cend(),<sp/>block.storage());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>else</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>std::copy(array.begin(),<sp/>array.end(),<sp/>block.storage());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>return<sp/>block;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">template&lt;typename<sp/>T&gt;</highlight></codeline>
<codeline><highlight class="normal">Vector&lt;T&gt;<sp/>makeVector(const<sp/>Block&lt;T&gt;&amp;<sp/>block)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>return<sp/>Vector&lt;T&gt;(block.begin(),<sp/>block.end());</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">inline<sp/>Vector&lt;String&gt;<sp/>stringToVector<sp/>(const<sp/>String&amp;<sp/>string,<sp/>char<sp/>delim)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Vector&lt;std::string&gt;<sp/>vec<sp/>=<sp/>strToVector(string,<sp/>delim);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>return<sp/>Vector&lt;String&gt;(vec.begin(),<sp/>vec.end());</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">inline<sp/>Vector&lt;String&gt;<sp/>stringToVector<sp/>(const<sp/>String&amp;<sp/>string,<sp/>const<sp/>std::regex&amp;<sp/>delim)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Vector&lt;std::string&gt;<sp/>vec<sp/>=<sp/>strToVector(string,<sp/>delim);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>return<sp/>Vector&lt;String&gt;(vec.begin(),<sp/>vec.end());</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">}<sp/>//#<sp/>NAMESPACE<sp/>CASACORE<sp/>-<sp/>END</highlight></codeline>
<codeline></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#endif</highlight></codeline>
    </programlisting>
    <location file="casa/IO/ArrayIO.tcc"/>
  </compounddef>
</doxygen>
