<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="TaQLNodeDer_8cc" kind="file" language="C++">
    <compoundname>TaQLNodeDer.cc</compoundname>
    <includes refid="TaQLNodeDer_8h" local="no">casacore/tables/TaQL/TaQLNodeDer.h</includes>
    <includes refid="TaQLNodeVisitor_8h" local="no">casacore/tables/TaQL/TaQLNodeVisitor.h</includes>
    <includes refid="Assert_8h" local="no">casacore/casa/Utilities/Assert.h</includes>
    <includes refid="AipsIO_8h" local="no">casacore/casa/IO/AipsIO.h</includes>
    <includes refid="TableError_8h" local="no">casacore/tables/Tables/TableError.h</includes>
    <includes local="no">iomanip</includes>
    <includes local="no">sstream</includes>
    <incdepgraph>
      <node id="4">
        <label>casacore/casa/aipsenv.h</label>
        <link refid="aipsenv_8h"/>
      </node>
      <node id="52">
        <label>casacore/casa/config.h</label>
      </node>
      <node id="26">
        <label>casacore/casa/BasicSL/Complex.h</label>
        <link refid="Complex_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>casacore/casa/Containers/Block.h</label>
        <link refid="Block_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>iomanip</label>
      </node>
      <node id="22">
        <label>casacore/casa/stdmap.h</label>
        <link refid="stdmap_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>casacore/casa/Exceptions/Error.h</label>
        <link refid="Error_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>casacore/casa/iostream.h</label>
        <link refid="iostream_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>casacore/casa/iosfwd.h</label>
        <link refid="iosfwd_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>casacore/casa/aipstype.h</label>
        <link refid="aipstype_8h"/>
      </node>
      <node id="36">
        <label>casacore/casa/Quanta/UnitVal.h</label>
        <link refid="UnitVal_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>casacore/casa/iosstrfwd.h</label>
        <link refid="iosstrfwd_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>casacore/casa/Containers/Allocator.h</label>
        <link refid="Allocator_8h"/>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>string</label>
      </node>
      <node id="12">
        <label>casacore/tables/TaQL/TaQLStyle.h</label>
        <link refid="TaQLStyle_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>map</label>
      </node>
      <node id="31">
        <label>regex</label>
      </node>
      <node id="60">
        <label>casacore/casa/IO/ByteIO.h</label>
        <link refid="ByteIO_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>casacore/casa/complex.h</label>
        <link refid="complex_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>casacore/tables/TaQL/TaQLNode.h</label>
        <link refid="TaQLNode_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>casacore/casa/aips.h</label>
        <link refid="aips_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>exception</label>
      </node>
      <node id="30">
        <label>casacore/casa/Utilities/Regex.h</label>
        <link refid="Regex_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>casacore/tables/TaQL/TaQLNodeRep.h</label>
        <link refid="TaQLNodeRep_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>casacore/casa/Utilities/Copy.h</label>
        <link refid="Copy_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>casacore/casa/vector.h</label>
        <link refid="vector_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>casacore/casa/BasicSL/Complexfwd.h</label>
        <link refid="Complexfwd_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>tables/TaQL/TaQLNodeDer.cc</label>
        <link refid="TaQLNodeDer_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="62">
        <label>casacore/tables/Tables/TableError.h</label>
        <link refid="TableError_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>casacore/casa/Quanta/Unit.h</label>
        <link refid="Unit_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>sys/types.h</label>
      </node>
      <node id="55">
        <label>typeinfo</label>
      </node>
      <node id="34">
        <label>casacore/casa/Quanta/QBase.h</label>
        <link refid="QBase_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>vector</label>
      </node>
      <node id="38">
        <label>casacore/casa/Quanta/Quantum.tcc</label>
        <link refid="Quantum_8tcc"/>
      </node>
      <node id="33">
        <label>casacore/casa/Quanta/Quantum.h</label>
        <link refid="Quantum_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>new</label>
      </node>
      <node id="45">
        <label>casacore/casa/Utilities/Assert.tcc</label>
        <link refid="Assert_8tcc"/>
      </node>
      <node id="21">
        <label>sstream</label>
      </node>
      <node id="49">
        <label>casacore/casa/Utilities/DataType.h</label>
        <link refid="DataType_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>casacore/casa/Quanta/MVTime.h</label>
        <link refid="MVTime_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>iosfwd</label>
      </node>
      <node id="53">
        <label>cstdlib</label>
      </node>
      <node id="20">
        <label>iostream</label>
      </node>
      <node id="2">
        <label>casacore/tables/TaQL/TaQLNodeDer.h</label>
        <link refid="TaQLNodeDer_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>casacore/casa/aipsdef.h</label>
        <link refid="aipsdef_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>cstddef</label>
      </node>
      <node id="48">
        <label>casacore/casa/Utilities/Copy.tcc</label>
        <link refid="Copy_8tcc"/>
      </node>
      <node id="24">
        <label>mutex</label>
      </node>
      <node id="59">
        <label>casacore/casa/IO/AipsIO.h</label>
        <link refid="AipsIO_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>casacore/tables/TaQL/TaQLNodeVisitor.h</label>
        <link refid="TaQLNodeVisitor_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>casacore/casa/sstream.h</label>
        <link refid="sstream_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>type_traits</label>
      </node>
      <node id="44">
        <label>casacore/casa/Exceptions/Error.tcc</label>
        <link refid="Error_8tcc"/>
      </node>
      <node id="28">
        <label>complex</label>
      </node>
      <node id="47">
        <label>algorithm</label>
      </node>
      <node id="50">
        <label>casacore/casa/Arrays/ArrayFwd.h</label>
        <link refid="ArrayFwd_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>casacore/casa/aipsxtype.h</label>
        <link refid="aipsxtype_8h"/>
      </node>
      <node id="13">
        <label>casacore/casa/BasicSL/String.h</label>
        <link refid="String_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>casacore/tables/TaQL/TaQLNodeResult.h</label>
        <link refid="TaQLNodeResult_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>casacore/casa/Quanta/UnitDim.h</label>
        <link refid="UnitDim_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>memory</label>
      </node>
      <node id="40">
        <label>casacore/casa/Utilities/Assert.h</label>
        <link refid="Assert_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacecasacore">casacore</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//#<sp/>TaQLNodeDer.cc:<sp/>Representation<sp/>of<sp/>entities<sp/>in<sp/>the<sp/>TaQL<sp/>parse<sp/>tree</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>Copyright<sp/>(C)<sp/>2005</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>Associated<sp/>Universities,<sp/>Inc.<sp/>Washington<sp/>DC,<sp/>USA.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>This<sp/>library<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Library<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>the<sp/>Free<sp/>Software<sp/>Foundatcd<sp/>ion;<sp/>either<sp/>version<sp/>2<sp/>of<sp/>the<sp/>License,<sp/>or<sp/>(at<sp/>your</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>This<sp/>library<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,<sp/>but<sp/>WITHOUT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of<sp/>MERCHANTABILITY<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the<sp/>GNU<sp/>Library<sp/>General<sp/>Public</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>License<sp/>for<sp/>more<sp/>details.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Library<sp/>General<sp/>Public<sp/>License</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>along<sp/>with<sp/>this<sp/>library;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software<sp/>Foundation,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>Inc.,<sp/>675<sp/>Massachusetts<sp/>Ave,<sp/>Cambridge,<sp/>MA<sp/>02139,<sp/>USA.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>Correspondence<sp/>concerning<sp/>AIPS++<sp/>should<sp/>be<sp/>addressed<sp/>as<sp/>follows:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Internet<sp/>email:<sp/>casa-feedback@nrao.edu.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Postal<sp/>address:<sp/>AIPS++<sp/>Project<sp/>Office</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>National<sp/>Radio<sp/>Astronomy<sp/>Observatory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>520<sp/>Edgemont<sp/>Road</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Charlottesville,<sp/>VA<sp/>22903-2475<sp/>USA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>Includes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="TaQLNodeDer_8h" kindref="compound">casacore/tables/TaQL/TaQLNodeDer.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="TaQLNodeVisitor_8h" kindref="compound">casacore/tables/TaQL/TaQLNodeVisitor.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="Assert_8h" kindref="compound">casacore/casa/Utilities/Assert.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="AipsIO_8h" kindref="compound">casacore/casa/IO/AipsIO.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="TableError_8h" kindref="compound">casacore/tables/Tables/TableError.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iomanip&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacecasacore" kindref="compound">casacore</ref><sp/>{<sp/></highlight><highlight class="comment">//#<sp/>NAMESPACE<sp/>CASACORE<sp/>-<sp/>BEGIN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>global<sp/>function<sp/>to<sp/>show<sp/>the<sp/>tables<sp/>in<sp/>a<sp/>WITH<sp/>clause<sp/>(if<sp/>used).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacecasacore_1a4754bedc7c75935fbcfedbe774f5dcf8" kindref="member">showWithTables</ref><sp/>(ostream&amp;<sp/>os,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TaQLMultiNode&amp;<sp/>with)</highlight></codeline>
<codeline lineno="40"><highlight class="normal">{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(with.isValid())<sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;WITH<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>with.show<sp/>(os);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal">}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><ref refid="classcasacore_1_1TaQLConstNodeRep_1a0152e4cb599d807d0e2db4a86a67a105" kindref="member">TaQLConstNodeRep::TaQLConstNodeRep</ref><sp/>(<ref refid="namespacecasacore_1abd5691f9e13acc90d901e4007740ff98" kindref="member">Bool</ref><sp/>value)</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>:<sp/>TaQLNodeRep<sp/>(<ref refid="TaQLNodeRep_8h_1ab177d70ab3d43c2288ddd15317a626ef" kindref="member">TaQLNode_Const</ref>),</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>itsType<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(CTBool),</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>itsIsTableName<sp/>(<ref refid="namespacecasacore_1a11ef6530f2dc946f54d220fe416bfd41" kindref="member">False</ref>),</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>itsBValue<sp/><sp/><sp/><sp/><sp/><sp/>(value)</highlight></codeline>
<codeline lineno="54"><highlight class="normal">{}</highlight></codeline>
<codeline lineno="55"><highlight class="normal">TaQLConstNodeRep::TaQLConstNodeRep<sp/>(<ref refid="namespacecasacore_1a79c2dfec4363785472512dbf384675a1" kindref="member">Int64</ref><sp/>value)</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>:<sp/>TaQLNodeRep<sp/>(<ref refid="TaQLNodeRep_8h_1ab177d70ab3d43c2288ddd15317a626ef" kindref="member">TaQLNode_Const</ref>),</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>itsType<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(CTInt),</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>itsIsTableName<sp/>(<ref refid="namespacecasacore_1a11ef6530f2dc946f54d220fe416bfd41" kindref="member">False</ref>),</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>itsIValue<sp/><sp/><sp/><sp/><sp/><sp/>(value),</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>itsRValue<sp/><sp/><sp/><sp/><sp/><sp/>(value),</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>itsCValue<sp/><sp/><sp/><sp/><sp/><sp/>(value,<sp/>0.)</highlight></codeline>
<codeline lineno="62"><highlight class="normal">{}</highlight></codeline>
<codeline lineno="63"><highlight class="normal">TaQLConstNodeRep::TaQLConstNodeRep<sp/>(<ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref><sp/>value)</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>:<sp/>TaQLNodeRep<sp/>(<ref refid="TaQLNodeRep_8h_1ab177d70ab3d43c2288ddd15317a626ef" kindref="member">TaQLNode_Const</ref>),</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>itsType<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(CTReal),</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>itsIsTableName<sp/>(<ref refid="namespacecasacore_1a11ef6530f2dc946f54d220fe416bfd41" kindref="member">False</ref>),</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>itsRValue<sp/><sp/><sp/><sp/><sp/><sp/>(value),</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>itsCValue<sp/><sp/><sp/><sp/><sp/><sp/>(value,<sp/>0.)</highlight></codeline>
<codeline lineno="69"><highlight class="normal">{}</highlight></codeline>
<codeline lineno="70"><highlight class="normal">TaQLConstNodeRep::TaQLConstNodeRep<sp/>(<ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref><sp/>value,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>String&amp;<sp/>unit)</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>:<sp/>TaQLNodeRep<sp/>(<ref refid="TaQLNodeRep_8h_1ab177d70ab3d43c2288ddd15317a626ef" kindref="member">TaQLNode_Const</ref>),</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>itsType<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(CTReal),</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>itsIsTableName<sp/>(<ref refid="namespacecasacore_1a11ef6530f2dc946f54d220fe416bfd41" kindref="member">False</ref>),</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>itsRValue<sp/><sp/><sp/><sp/><sp/><sp/>(value),</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>itsCValue<sp/><sp/><sp/><sp/><sp/><sp/>(value,<sp/>0.),</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>itsUnit<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(unit)</highlight></codeline>
<codeline lineno="77"><highlight class="normal">{}</highlight></codeline>
<codeline lineno="78"><highlight class="normal">TaQLConstNodeRep::TaQLConstNodeRep<sp/>(<ref refid="namespacecasacore_1a2a9616f801f0f94ac5c480453377e268" kindref="member">DComplex</ref><sp/>value)</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>:<sp/>TaQLNodeRep<sp/>(<ref refid="TaQLNodeRep_8h_1ab177d70ab3d43c2288ddd15317a626ef" kindref="member">TaQLNode_Const</ref>),</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>itsType<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(CTComplex),</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>itsIsTableName<sp/>(<ref refid="namespacecasacore_1a11ef6530f2dc946f54d220fe416bfd41" kindref="member">False</ref>),</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>itsCValue<sp/><sp/><sp/><sp/><sp/><sp/>(value)</highlight></codeline>
<codeline lineno="83"><highlight class="normal">{}</highlight></codeline>
<codeline lineno="84"><highlight class="normal">TaQLConstNodeRep::TaQLConstNodeRep<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>String&amp;<sp/>value,</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacecasacore_1abd5691f9e13acc90d901e4007740ff98" kindref="member">Bool</ref><sp/>isTableName)</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>:<sp/>TaQLNodeRep<sp/>(<ref refid="TaQLNodeRep_8h_1ab177d70ab3d43c2288ddd15317a626ef" kindref="member">TaQLNode_Const</ref>),</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>itsType<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(CTString),</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>itsIsTableName<sp/>(isTableName),</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>itsSValue<sp/><sp/><sp/><sp/><sp/><sp/>(value)</highlight></codeline>
<codeline lineno="90"><highlight class="normal">{}</highlight></codeline>
<codeline lineno="91"><highlight class="normal">TaQLConstNodeRep::TaQLConstNodeRep<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MVTime&amp;<sp/>value)</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>:<sp/>TaQLNodeRep<sp/>(<ref refid="TaQLNodeRep_8h_1ab177d70ab3d43c2288ddd15317a626ef" kindref="member">TaQLNode_Const</ref>),</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>itsType<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(CTTime),</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>itsIsTableName<sp/>(<ref refid="namespacecasacore_1a11ef6530f2dc946f54d220fe416bfd41" kindref="member">False</ref>),</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>itsRValue<sp/><sp/><sp/><sp/><sp/><sp/>(value),</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>itsCValue<sp/><sp/><sp/><sp/><sp/><sp/>(value,<sp/>0.),</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>itsTValue<sp/><sp/><sp/><sp/><sp/><sp/>(value)</highlight></codeline>
<codeline lineno="98"><highlight class="normal">{}</highlight></codeline>
<codeline lineno="99"><highlight class="normal">TaQLConstNodeRep::TaQLConstNodeRep<sp/>(<ref refid="namespacecasacore_1a79c2dfec4363785472512dbf384675a1" kindref="member">Int64</ref><sp/>value,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>String&amp;<sp/>subTableName)</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>:<sp/>TaQLNodeRep<sp/>(<ref refid="TaQLNodeRep_8h_1ab177d70ab3d43c2288ddd15317a626ef" kindref="member">TaQLNode_Const</ref>),</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>itsType<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(CTInt),</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>itsIsTableName<sp/>(<ref refid="namespacecasacore_1ad5c850f9e177173e0f7d0ad57091501d" kindref="member">True</ref>),</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>itsIValue<sp/><sp/><sp/><sp/><sp/><sp/>(value),</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>itsRValue<sp/><sp/><sp/><sp/><sp/><sp/>(value),</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>itsCValue<sp/><sp/><sp/><sp/><sp/><sp/>(value,<sp/>0.),</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>itsSValue<sp/><sp/><sp/><sp/><sp/><sp/>(subTableName)</highlight></codeline>
<codeline lineno="107"><highlight class="normal">{}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>String&amp;<sp/>TaQLConstNodeRep::getString()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="109"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><ref refid="Assert_8h_1a3630afed5d5376567ad23703d3676be3" kindref="member">AlwaysAssert</ref><sp/>(itsType<sp/>==<sp/>CTString,<sp/>AipsError);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>itsSValue;</highlight></codeline>
<codeline lineno="112"><highlight class="normal">}</highlight></codeline>
<codeline lineno="113"><highlight class="normal">TaQLNodeResult<sp/>TaQLConstNodeRep::visit<sp/>(TaQLNodeVisitor&amp;<sp/>visitor)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="114"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>visitor.visitConstNode<sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="116"><highlight class="normal">}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lsmf_8cc_1a318b6b20037a5f5584e4b249f4af4fb6" kindref="member">TaQLConstNodeRep::show</ref><sp/>(std::ostream&amp;<sp/>os)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="118"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Output<sp/>the<sp/>possible<sp/>unit<sp/>in<sp/>the<sp/>same<sp/>way<sp/>as<sp/>TaQLUnitNodeRep<sp/>is<sp/>doing.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<sp/>itsUnit.empty())<sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;(&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(itsType)<sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CTBool:</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(itsBValue)<sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;T&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;F&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CTInt:</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(itsIsTableName)<sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>itsSValue;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>tablename<sp/>(including<sp/>$i)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>itsIValue;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CTReal:</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>std::setprecision(16)<sp/>&lt;&lt;<sp/>itsRValue;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CTComplex:</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(itsCValue.real()<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>std::setprecision(16)<sp/>&lt;&lt;<sp/>itsCValue.real()<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;+&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>std::setprecision(16)<sp/>&lt;&lt;<sp/>itsCValue.imag()<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;i&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CTString:</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(itsIsTableName)<sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>addEscape(itsSValue);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&apos;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>itsSValue<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&apos;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CTTime:</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>10<sp/>digits<sp/>precision<sp/>in<sp/>the<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>MVTime::Format(MVTime::YMD,<sp/>10)<sp/>&lt;&lt;<sp/>itsTValue;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<sp/>itsUnit.empty())<sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)&apos;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>itsUnit<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&apos;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal">}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TaQLConstNodeRep::save<sp/>(AipsIO&amp;<sp/>aio)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="166"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>aio<sp/>&lt;&lt;<sp/>char(itsType)<sp/>&lt;&lt;<sp/>itsIsTableName<sp/>&lt;&lt;<sp/>itsUnit;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(itsType)<sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CTBool:</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>aio<sp/>&lt;&lt;<sp/>itsBValue;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CTInt:</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>aio<sp/>&lt;&lt;<sp/>itsIValue;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(itsIsTableName)<sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>aio<sp/>&lt;&lt;<sp/>itsSValue;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CTReal:</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>aio<sp/>&lt;&lt;<sp/>itsRValue;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CTComplex:</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>aio<sp/>&lt;&lt;<sp/>itsCValue;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CTString:</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>aio<sp/>&lt;&lt;<sp/>itsSValue;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CTTime:</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>aio<sp/>&lt;&lt;<sp/>(double)itsTValue;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="191"><highlight class="normal">}</highlight></codeline>
<codeline lineno="192"><highlight class="normal">TaQLNode<sp/>TaQLConstNodeRep::restore<sp/>(AipsIO&amp;<sp/>aio)</highlight></codeline>
<codeline lineno="193"><highlight class="normal">{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>type;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><ref refid="namespacecasacore_1abd5691f9e13acc90d901e4007740ff98" kindref="member">Bool</ref><sp/>isTableName;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/>String<sp/>unit;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/>aio<sp/>&gt;&gt;<sp/>type<sp/>&gt;&gt;<sp/>isTableName<sp/>&gt;&gt;<sp/>unit;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(type)<sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CTBool:</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacecasacore_1abd5691f9e13acc90d901e4007740ff98" kindref="member">Bool</ref><sp/>value;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>aio<sp/>&gt;&gt;<sp/>value;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TaQLConstNodeRep<sp/>(value);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CTInt:</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacecasacore_1a79c2dfec4363785472512dbf384675a1" kindref="member">Int64</ref><sp/>value;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>aio<sp/>&gt;&gt;<sp/>value;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isTableName)<sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>String<sp/>name;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aio<sp/>&gt;&gt;<sp/>name;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TaQLConstNodeRep<sp/>(value,<sp/>name);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TaQLConstNodeRep<sp/>(value);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CTReal:</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref><sp/>value;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>aio<sp/>&gt;&gt;<sp/>value;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TaQLConstNodeRep<sp/>(value,<sp/>unit);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CTComplex:</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacecasacore_1a2a9616f801f0f94ac5c480453377e268" kindref="member">DComplex</ref><sp/>value;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>aio<sp/>&gt;&gt;<sp/>value;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TaQLConstNodeRep<sp/>(value);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CTString:</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>String<sp/>value;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>aio<sp/>&gt;&gt;<sp/>value;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TaQLConstNodeRep<sp/>(value,<sp/>isTableName);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CTTime:</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>v;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>aio<sp/>&gt;&gt;<sp/>v;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TaQLConstNodeRep<sp/>(MVTime(v));</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="243"><highlight class="normal">}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal">TaQLRegexNodeRep::TaQLRegexNodeRep<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>String&amp;<sp/><ref refid="namespacecasacore_1aba01d0ffd02a1540e17f26d8ae7e908b" kindref="member">regex</ref>)</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/>:<sp/>TaQLNodeRep<sp/>(<ref refid="TaQLNodeRep_8h_1a360725175b52b9165c5007d6778ac285" kindref="member">TaQLNode_Regex</ref>),</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>itsCaseInsensitive<sp/>(<ref refid="namespacecasacore_1a11ef6530f2dc946f54d220fe416bfd41" kindref="member">False</ref>),</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>itsNegate<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="namespacecasacore_1a11ef6530f2dc946f54d220fe416bfd41" kindref="member">False</ref>),</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>itsIgnoreBlanks<sp/><sp/><sp/><sp/>(<ref refid="namespacecasacore_1a11ef6530f2dc946f54d220fe416bfd41" kindref="member">False</ref>),</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>itsMaxDistance<sp/><sp/><sp/><sp/><sp/>(-1)</highlight></codeline>
<codeline lineno="251"><highlight class="normal">{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><ref refid="namespacecasacore_1abb6e2c1bac472ca1ebadadf96cc8426f" kindref="member">Int</ref><sp/>sz<sp/>=<sp/><ref refid="namespacecasacore_1aba01d0ffd02a1540e17f26d8ae7e908b" kindref="member">regex</ref>.size();</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><ref refid="Assert_8h_1a3630afed5d5376567ad23703d3676be3" kindref="member">AlwaysAssert</ref><sp/>(sz<sp/>&gt;=<sp/>4<sp/><sp/>&amp;&amp;<sp/><sp/><ref refid="namespacecasacore_1aba01d0ffd02a1540e17f26d8ae7e908b" kindref="member">regex</ref>[sz-1]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">,<sp/>AipsError);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><ref refid="namespacecasacore_1abb6e2c1bac472ca1ebadadf96cc8426f" kindref="member">Int</ref><sp/>inx<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespacecasacore_1aba01d0ffd02a1540e17f26d8ae7e908b" kindref="member">regex</ref>[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;!&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>itsNegate<sp/>=<sp/><ref refid="namespacecasacore_1ad5c850f9e177173e0f7d0ad57091501d" kindref="member">True</ref>;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>++inx;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><ref refid="Assert_8h_1a3630afed5d5376567ad23703d3676be3" kindref="member">AlwaysAssert</ref><sp/>(<ref refid="namespacecasacore_1aba01d0ffd02a1540e17f26d8ae7e908b" kindref="member">regex</ref>[inx]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;~&apos;</highlight><highlight class="normal">,<sp/>AipsError);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Skip<sp/>blanks.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="namespacecasacore_1aba01d0ffd02a1540e17f26d8ae7e908b" kindref="member">regex</ref>[++inx]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">)<sp/>{}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>regex<sp/>qualifiers.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(--sz<sp/>&gt;<sp/>inx)<sp/>{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespacecasacore_1aba01d0ffd02a1540e17f26d8ae7e908b" kindref="member">regex</ref>[sz]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;i&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>itsCaseInsensitive<sp/>=<sp/><ref refid="namespacecasacore_1ad5c850f9e177173e0f7d0ad57091501d" kindref="member">True</ref>;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespacecasacore_1aba01d0ffd02a1540e17f26d8ae7e908b" kindref="member">regex</ref>[sz]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;b&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>itsIgnoreBlanks<sp/>=<sp/><ref refid="namespacecasacore_1ad5c850f9e177173e0f7d0ad57091501d" kindref="member">True</ref>;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isdigit(<ref refid="namespacecasacore_1aba01d0ffd02a1540e17f26d8ae7e908b" kindref="member">regex</ref>[sz]))<sp/>{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numend<sp/>=<sp/>sz;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(isdigit(<ref refid="namespacecasacore_1aba01d0ffd02a1540e17f26d8ae7e908b" kindref="member">regex</ref>[--sz]))<sp/>{}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++sz;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>istringstream<sp/>istr(<ref refid="namespacecasacore_1aba01d0ffd02a1540e17f26d8ae7e908b" kindref="member">regex</ref>.substr(sz,<sp/>numend));</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>istr<sp/>&gt;&gt;<sp/>itsMaxDistance;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/>++sz;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><ref refid="Assert_8h_1a3630afed5d5376567ad23703d3676be3" kindref="member">AlwaysAssert</ref><sp/>(sz-inx<sp/>&gt;=<sp/>3,<sp/>AipsError);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/>itsValue<sp/>=<sp/><ref refid="namespacecasacore_1aba01d0ffd02a1540e17f26d8ae7e908b" kindref="member">regex</ref>.substr(inx,<sp/>sz-inx);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(itsCaseInsensitive)<sp/>{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>itsValue.downcase();</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="284"><highlight class="normal">}</highlight></codeline>
<codeline lineno="285"><highlight class="normal">TaQLRegexNodeRep::TaQLRegexNodeRep<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>String&amp;<sp/>value,</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacecasacore_1abd5691f9e13acc90d901e4007740ff98" kindref="member">Bool</ref><sp/>caseInsensitive,<sp/><ref refid="namespacecasacore_1abd5691f9e13acc90d901e4007740ff98" kindref="member">Bool</ref><sp/>negate,</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacecasacore_1abd5691f9e13acc90d901e4007740ff98" kindref="member">Bool</ref><sp/>ignoreBlanks,<sp/><ref refid="namespacecasacore_1abb6e2c1bac472ca1ebadadf96cc8426f" kindref="member">Int</ref><sp/>maxDistance)</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/>:<sp/>TaQLNodeRep<sp/>(<ref refid="TaQLNodeRep_8h_1a360725175b52b9165c5007d6778ac285" kindref="member">TaQLNode_Regex</ref>),</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>itsValue<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(value),</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>itsCaseInsensitive<sp/>(caseInsensitive),</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>itsNegate<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(negate),</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>itsIgnoreBlanks<sp/><sp/><sp/><sp/>(ignoreBlanks),</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>itsMaxDistance<sp/><sp/><sp/><sp/><sp/>(maxDistance)</highlight></codeline>
<codeline lineno="294"><highlight class="normal">{}</highlight></codeline>
<codeline lineno="295"><highlight class="normal">TaQLNodeResult<sp/>TaQLRegexNodeRep::visit<sp/>(TaQLNodeVisitor&amp;<sp/>visitor)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="296"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>visitor.visitRegexNode<sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="298"><highlight class="normal">}</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lsmf_8cc_1a318b6b20037a5f5584e4b249f4af4fb6" kindref="member">TaQLRegexNodeRep::show</ref><sp/>(std::ostream&amp;<sp/>os)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="300"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(itsNegate)<sp/>{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;!&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;~&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/>os<sp/>&lt;&lt;<sp/>itsValue;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(itsCaseInsensitive)<sp/>{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;i&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(itsIgnoreBlanks)<sp/>{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;b&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(itsMaxDistance<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>itsMaxDistance;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="315"><highlight class="normal">}</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TaQLRegexNodeRep::save<sp/>(AipsIO&amp;<sp/>aio)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="317"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/>aio<sp/>&lt;&lt;<sp/>itsValue<sp/>&lt;&lt;<sp/>itsCaseInsensitive<sp/>&lt;&lt;<sp/>itsNegate<sp/>&lt;&lt;<sp/>itsIgnoreBlanks</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>itsMaxDistance;</highlight></codeline>
<codeline lineno="320"><highlight class="normal">}</highlight></codeline>
<codeline lineno="321"><highlight class="normal">TaQLNode<sp/>TaQLRegexNodeRep::restore<sp/>(AipsIO&amp;<sp/>aio)</highlight></codeline>
<codeline lineno="322"><highlight class="normal">{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/>String<sp/>value;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><ref refid="namespacecasacore_1abd5691f9e13acc90d901e4007740ff98" kindref="member">Bool</ref><sp/>caseInsensitive,<sp/>negate,<sp/>ignoreBlanks;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><ref refid="namespacecasacore_1abb6e2c1bac472ca1ebadadf96cc8426f" kindref="member">Int</ref><sp/>maxDistance;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/>aio<sp/>&gt;&gt;<sp/>value<sp/>&gt;&gt;<sp/>caseInsensitive<sp/>&gt;&gt;<sp/>negate<sp/>&gt;&gt;<sp/>ignoreBlanks</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>maxDistance;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TaQLRegexNodeRep<sp/>(value,<sp/>caseInsensitive,<sp/>negate,<sp/>ignoreBlanks,</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxDistance);</highlight></codeline>
<codeline lineno="330"><highlight class="normal">}</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal">TaQLUnaryNodeRep::TaQLUnaryNodeRep<sp/>(Type<sp/>type,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TaQLNode&amp;<sp/>child)</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/>:<sp/>TaQLNodeRep<sp/>(<ref refid="TaQLNodeRep_8h_1a8273ee416b2c5110d23988beda213e50" kindref="member">TaQLNode_Unary</ref>),</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>itsType<sp/><sp/>(type),</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>itsChild<sp/>(child)</highlight></codeline>
<codeline lineno="337"><highlight class="normal">{}</highlight></codeline>
<codeline lineno="338"><highlight class="normal">TaQLNodeResult<sp/>TaQLUnaryNodeRep::visit<sp/>(TaQLNodeVisitor&amp;<sp/>visitor)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="339"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>visitor.visitUnaryNode<sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="341"><highlight class="normal">}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lsmf_8cc_1a318b6b20037a5f5584e4b249f4af4fb6" kindref="member">TaQLUnaryNodeRep::show</ref><sp/>(std::ostream&amp;<sp/>os)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="343"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(itsType)<sp/>{</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>U_MINUS:</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;-(&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/>itsChild.show(os);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;)&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>U_NOT:</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;NOT(&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>itsChild.show(os);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;)&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>U_EXISTS:</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;EXISTS<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/>itsChild.show(os);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>U_NOTEXISTS:</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;NOT<sp/>EXISTS<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/>itsChild.show(os);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>U_BITNOT:</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;~(&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>itsChild.show(os);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;)&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="369"><highlight class="normal">}</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TaQLUnaryNodeRep::save<sp/>(AipsIO&amp;<sp/>aio)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="371"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/>aio<sp/>&lt;&lt;<sp/>char(itsType);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/>itsChild.saveNode<sp/>(aio);</highlight></codeline>
<codeline lineno="374"><highlight class="normal">}</highlight></codeline>
<codeline lineno="375"><highlight class="normal">TaQLNode<sp/>TaQLUnaryNodeRep::restore<sp/>(AipsIO&amp;<sp/>aio)</highlight></codeline>
<codeline lineno="376"><highlight class="normal">{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ctype;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/>aio<sp/>&gt;&gt;<sp/>ctype;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/>TaQLUnaryNodeRep::Type<sp/>type<sp/>=<sp/>(TaQLUnaryNodeRep::Type)ctype;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/>TaQLNode<sp/>node<sp/>=<sp/>TaQLNode::restoreNode<sp/>(aio);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TaQLUnaryNodeRep<sp/>(type,<sp/>node);</highlight></codeline>
<codeline lineno="382"><highlight class="normal">}</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal">TaQLBinaryNodeRep::TaQLBinaryNodeRep<sp/>(Type<sp/>type,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TaQLNode&amp;<sp/>left,</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TaQLNode&amp;<sp/>right)</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/>:<sp/>TaQLNodeRep<sp/>(<ref refid="TaQLNodeRep_8h_1a2ab611249125752b4efa9488275a7586" kindref="member">TaQLNode_Binary</ref>),</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>itsType<sp/><sp/>(type),</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/>itsLeft<sp/><sp/>(left),</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/>itsRight<sp/>(right)</highlight></codeline>
<codeline lineno="390"><highlight class="normal">{}</highlight></codeline>
<codeline lineno="391"><highlight class="normal">TaQLBinaryNodeRep*<sp/>TaQLBinaryNodeRep::handleRegex<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TaQLNode&amp;<sp/>left,</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TaQLRegexNode&amp;<sp/>right)</highlight></codeline>
<codeline lineno="393"><highlight class="normal">{</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/>Type<sp/>oper;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(right.negate())<sp/>{</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/>oper<sp/>=<sp/>B_NEREGEX;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>oper<sp/>=<sp/>B_EQREGEX;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TaQLBinaryNodeRep<sp/>(oper,<sp/>left,<sp/>right);</highlight></codeline>
<codeline lineno="401"><highlight class="normal">}</highlight></codeline>
<codeline lineno="402"><highlight class="normal">TaQLNodeResult<sp/>TaQLBinaryNodeRep::visit<sp/>(TaQLNodeVisitor&amp;<sp/>visitor)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="403"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>visitor.visitBinaryNode<sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="405"><highlight class="normal">}</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lsmf_8cc_1a318b6b20037a5f5584e4b249f4af4fb6" kindref="member">TaQLBinaryNodeRep::show</ref><sp/>(std::ostream&amp;<sp/>os)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="407"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;(&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/>itsLeft.show<sp/>(os);</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;)&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><ref refid="namespacecasacore_1abd5691f9e13acc90d901e4007740ff98" kindref="member">Bool</ref><sp/>paren<sp/>=<sp/><ref refid="namespacecasacore_1ad5c850f9e177173e0f7d0ad57091501d" kindref="member">True</ref>;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(itsType)<sp/>{</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>B_PLUS:</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;+&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>B_MINUS:</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;-&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>B_TIMES:</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;*&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>B_DIVIDE:</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>B_DIVIDETRUNC:</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;//&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>B_MODULO:</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;%&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>B_POWER:</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;**&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>B_OR:</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;||&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>B_AND:</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&amp;&amp;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>B_EQ:</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="charliteral">&apos;=&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>B_NE:</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;&lt;&gt;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>B_GT:</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>&apos;&gt;</highlight><highlight class="stringliteral">&apos;;</highlight></codeline>
<codeline lineno="448"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline lineno="449"><highlight class="stringliteral"><sp/><sp/>case<sp/>B_GE:</highlight></codeline>
<codeline lineno="450"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>&quot;&gt;=&quot;;</highlight></codeline>
<codeline lineno="451"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline lineno="452"><highlight class="stringliteral"><sp/><sp/>case<sp/>B_LT:</highlight></codeline>
<codeline lineno="453"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>&apos;</highlight><highlight class="normal">&lt;</highlight><highlight class="stringliteral">&apos;;</highlight></codeline>
<codeline lineno="454"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline lineno="455"><highlight class="stringliteral"><sp/><sp/>case<sp/>B_LE:</highlight></codeline>
<codeline lineno="456"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>&quot;&lt;=&quot;;</highlight></codeline>
<codeline lineno="457"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline lineno="458"><highlight class="stringliteral"><sp/><sp/>case<sp/>B_IN:</highlight></codeline>
<codeline lineno="459"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>paren<sp/>=<sp/>False;</highlight></codeline>
<codeline lineno="460"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>&quot;<sp/>IN<sp/>&quot;;</highlight></codeline>
<codeline lineno="461"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline lineno="462"><highlight class="stringliteral"><sp/><sp/>case<sp/>B_INDEX:</highlight></codeline>
<codeline lineno="463"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>paren<sp/>=<sp/>False;</highlight></codeline>
<codeline lineno="464"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline lineno="465"><highlight class="stringliteral"><sp/><sp/>case<sp/>B_EQREGEX:</highlight></codeline>
<codeline lineno="466"><highlight class="stringliteral"><sp/><sp/>case<sp/>B_NEREGEX:</highlight></codeline>
<codeline lineno="467"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>paren<sp/>=<sp/>False;</highlight></codeline>
<codeline lineno="468"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline lineno="469"><highlight class="stringliteral"><sp/><sp/>case<sp/>B_BITAND:</highlight></codeline>
<codeline lineno="470"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>&apos;</highlight><highlight class="normal">&amp;</highlight><highlight class="stringliteral">&apos;;</highlight></codeline>
<codeline lineno="471"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline lineno="472"><highlight class="stringliteral"><sp/><sp/>case<sp/>B_BITXOR:</highlight></codeline>
<codeline lineno="473"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>&apos;</highlight><highlight class="normal">^</highlight><highlight class="stringliteral">&apos;;</highlight></codeline>
<codeline lineno="474"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline lineno="475"><highlight class="stringliteral"><sp/><sp/>case<sp/>B_BITOR:</highlight></codeline>
<codeline lineno="476"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>&apos;</highlight><highlight class="normal">|</highlight><highlight class="stringliteral">&apos;;</highlight></codeline>
<codeline lineno="477"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline lineno="478"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="479"><highlight class="stringliteral"><sp/><sp/>if<sp/>(paren)<sp/>{</highlight></codeline>
<codeline lineno="480"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>&apos;</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&apos;;</highlight></codeline>
<codeline lineno="481"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsRight.show<sp/>(os);</highlight></codeline>
<codeline lineno="482"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>&apos;</highlight><highlight class="normal">)</highlight><highlight class="stringliteral">&apos;;</highlight></codeline>
<codeline lineno="483"><highlight class="stringliteral"><sp/><sp/>}<sp/>else<sp/>{</highlight></codeline>
<codeline lineno="484"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsRight.show<sp/>(os);</highlight></codeline>
<codeline lineno="485"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="486"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="487"><highlight class="stringliteral">void<sp/>TaQLBinaryNodeRep::save<sp/>(AipsIO&amp;<sp/>aio)<sp/>const</highlight></codeline>
<codeline lineno="488"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="489"><highlight class="stringliteral"><sp/><sp/>aio<sp/>&lt;&lt;<sp/>char(itsType);</highlight></codeline>
<codeline lineno="490"><highlight class="stringliteral"><sp/><sp/>itsLeft.saveNode<sp/>(aio);</highlight></codeline>
<codeline lineno="491"><highlight class="stringliteral"><sp/><sp/>itsRight.saveNode<sp/>(aio);</highlight></codeline>
<codeline lineno="492"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="493"><highlight class="stringliteral">TaQLNode<sp/>TaQLBinaryNodeRep::restore<sp/>(AipsIO&amp;<sp/>aio)</highlight></codeline>
<codeline lineno="494"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="495"><highlight class="stringliteral"><sp/><sp/>char<sp/>ctype;</highlight></codeline>
<codeline lineno="496"><highlight class="stringliteral"><sp/><sp/>aio<sp/>&gt;&gt;<sp/>ctype;</highlight></codeline>
<codeline lineno="497"><highlight class="stringliteral"><sp/><sp/>TaQLBinaryNodeRep::Type<sp/>type<sp/>=<sp/>(TaQLBinaryNodeRep::Type)ctype;</highlight></codeline>
<codeline lineno="498"><highlight class="stringliteral"><sp/><sp/>TaQLNode<sp/>left<sp/>=<sp/>TaQLNode::restoreNode<sp/>(aio);</highlight></codeline>
<codeline lineno="499"><highlight class="stringliteral"><sp/><sp/>TaQLNode<sp/>right<sp/>=<sp/>TaQLNode::restoreNode<sp/>(aio);</highlight></codeline>
<codeline lineno="500"><highlight class="stringliteral"><sp/><sp/>return<sp/>new<sp/>TaQLBinaryNodeRep<sp/>(type,<sp/>left,<sp/>right);</highlight></codeline>
<codeline lineno="501"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="502"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="503"><highlight class="stringliteral">TaQLMultiNodeRep::TaQLMultiNodeRep<sp/>(Bool<sp/>isSetOrArray)</highlight></codeline>
<codeline lineno="504"><highlight class="stringliteral"><sp/><sp/>:<sp/>TaQLNodeRep<sp/>(TaQLNode_Multi),</highlight></codeline>
<codeline lineno="505"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsIsSetOrArray<sp/>(isSetOrArray),</highlight></codeline>
<codeline lineno="506"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsSep<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(&quot;,&quot;),</highlight></codeline>
<codeline lineno="507"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsIncr<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(1)</highlight></codeline>
<codeline lineno="508"><highlight class="stringliteral">{}</highlight></codeline>
<codeline lineno="509"><highlight class="stringliteral">TaQLMultiNodeRep::TaQLMultiNodeRep(const<sp/>String&amp;<sp/>prefix,</highlight></codeline>
<codeline lineno="510"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>String&amp;<sp/>postfix,</highlight></codeline>
<codeline lineno="511"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Bool<sp/>isSetOrArray)</highlight></codeline>
<codeline lineno="512"><highlight class="stringliteral"><sp/><sp/>:<sp/>TaQLNodeRep<sp/>(TaQLNode_Multi),</highlight></codeline>
<codeline lineno="513"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsIsSetOrArray<sp/>(isSetOrArray),</highlight></codeline>
<codeline lineno="514"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsPrefix<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(prefix),</highlight></codeline>
<codeline lineno="515"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsPostfix<sp/><sp/><sp/><sp/><sp/><sp/>(postfix),</highlight></codeline>
<codeline lineno="516"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsSep<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(&quot;,&quot;),</highlight></codeline>
<codeline lineno="517"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsIncr<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(1)</highlight></codeline>
<codeline lineno="518"><highlight class="stringliteral">{}</highlight></codeline>
<codeline lineno="519"><highlight class="stringliteral">TaQLNodeResult<sp/>TaQLMultiNodeRep::visit<sp/>(TaQLNodeVisitor&amp;<sp/>visitor)<sp/>const</highlight></codeline>
<codeline lineno="520"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="521"><highlight class="stringliteral"><sp/><sp/>return<sp/>visitor.visitMultiNode<sp/>(*this);</highlight></codeline>
<codeline lineno="522"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="523"><highlight class="stringliteral">void<sp/>TaQLMultiNodeRep::show<sp/>(std::ostream&amp;<sp/>os)<sp/>const</highlight></codeline>
<codeline lineno="524"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="525"><highlight class="stringliteral"><sp/><sp/>os<sp/>&lt;&lt;<sp/>itsPrefix;</highlight></codeline>
<codeline lineno="526"><highlight class="stringliteral"><sp/><sp/>for<sp/>(uInt<sp/>i=0;<sp/>i&lt;itsNodes.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="527"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>if<sp/>(i<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="528"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>(i%itsIncr<sp/>==<sp/>0<sp/><sp/>?<sp/><sp/>itsSep<sp/>:<sp/>itsSep2);</highlight></codeline>
<codeline lineno="529"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="530"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsNodes[i].show<sp/>(os);</highlight></codeline>
<codeline lineno="531"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="532"><highlight class="stringliteral"><sp/><sp/>os<sp/>&lt;&lt;<sp/>itsPostfix;</highlight></codeline>
<codeline lineno="533"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="534"><highlight class="stringliteral">void<sp/>TaQLMultiNodeRep::save<sp/>(AipsIO&amp;<sp/>aio)<sp/>const</highlight></codeline>
<codeline lineno="535"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="536"><highlight class="stringliteral"><sp/><sp/>aio<sp/>&lt;&lt;<sp/>itsIsSetOrArray<sp/>&lt;&lt;<sp/>itsPrefix<sp/>&lt;&lt;<sp/>itsPostfix</highlight></codeline>
<codeline lineno="537"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>itsSep<sp/>&lt;&lt;<sp/>itsSep2<sp/>&lt;&lt;<sp/>itsIncr;</highlight></codeline>
<codeline lineno="538"><highlight class="stringliteral"><sp/><sp/>aio<sp/>&lt;&lt;<sp/>uInt(itsNodes.size());</highlight></codeline>
<codeline lineno="539"><highlight class="stringliteral"><sp/><sp/>for<sp/>(uInt<sp/>i=0;<sp/>i&lt;itsNodes.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="540"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsNodes[i].saveNode<sp/>(aio);</highlight></codeline>
<codeline lineno="541"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="542"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="543"><highlight class="stringliteral">TaQLMultiNode<sp/>TaQLMultiNodeRep::restore<sp/>(AipsIO&amp;<sp/>aio)</highlight></codeline>
<codeline lineno="544"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="545"><highlight class="stringliteral"><sp/><sp/>uInt<sp/>size,<sp/>incr;</highlight></codeline>
<codeline lineno="546"><highlight class="stringliteral"><sp/><sp/>Bool<sp/>isSetOrArray;</highlight></codeline>
<codeline lineno="547"><highlight class="stringliteral"><sp/><sp/>String<sp/>prefix,<sp/>postfix,<sp/>sep,<sp/>sep2;</highlight></codeline>
<codeline lineno="548"><highlight class="stringliteral"><sp/><sp/>aio<sp/>&gt;&gt;<sp/>isSetOrArray<sp/>&gt;&gt;<sp/>prefix<sp/>&gt;&gt;<sp/>postfix</highlight></codeline>
<codeline lineno="549"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>&gt;&gt;<sp/>sep<sp/>&gt;&gt;<sp/>sep2<sp/>&gt;&gt;<sp/>incr;</highlight></codeline>
<codeline lineno="550"><highlight class="stringliteral"><sp/><sp/>aio<sp/>&gt;&gt;<sp/>size;</highlight></codeline>
<codeline lineno="551"><highlight class="stringliteral"><sp/><sp/>std::unique_ptr&lt;TaQLMultiNodeRep&gt;<sp/>node</highlight></codeline>
<codeline lineno="552"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>(new<sp/>TaQLMultiNodeRep(prefix,<sp/>postfix,<sp/>isSetOrArray));</highlight></codeline>
<codeline lineno="553"><highlight class="stringliteral"><sp/><sp/>node-&gt;setSeparator<sp/>(sep);</highlight></codeline>
<codeline lineno="554"><highlight class="stringliteral"><sp/><sp/>node-&gt;setSeparator<sp/>(incr,<sp/>sep2);</highlight></codeline>
<codeline lineno="555"><highlight class="stringliteral"><sp/><sp/>for<sp/>(uInt<sp/>i=0;<sp/>i&lt;size;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="556"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>node-&gt;add<sp/>(TaQLNode::restoreNode<sp/>(aio));</highlight></codeline>
<codeline lineno="557"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="558"><highlight class="stringliteral"><sp/><sp/>return<sp/>node.release();</highlight></codeline>
<codeline lineno="559"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="560"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="561"><highlight class="stringliteral">TaQLFuncNodeRep::TaQLFuncNodeRep<sp/>(const<sp/>String&amp;<sp/>name)</highlight></codeline>
<codeline lineno="562"><highlight class="stringliteral"><sp/><sp/>:<sp/>TaQLNodeRep<sp/>(TaQLNode_Func),</highlight></codeline>
<codeline lineno="563"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsName<sp/>(name),</highlight></codeline>
<codeline lineno="564"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsArgs<sp/>(False)</highlight></codeline>
<codeline lineno="565"><highlight class="stringliteral">{}</highlight></codeline>
<codeline lineno="566"><highlight class="stringliteral">TaQLFuncNodeRep::TaQLFuncNodeRep<sp/>(const<sp/>String&amp;<sp/>name,</highlight></codeline>
<codeline lineno="567"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>TaQLMultiNode&amp;<sp/>args)</highlight></codeline>
<codeline lineno="568"><highlight class="stringliteral"><sp/><sp/>:<sp/>TaQLNodeRep<sp/>(TaQLNode_Func),</highlight></codeline>
<codeline lineno="569"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsName<sp/>(name),</highlight></codeline>
<codeline lineno="570"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsArgs<sp/>(args)</highlight></codeline>
<codeline lineno="571"><highlight class="stringliteral">{}</highlight></codeline>
<codeline lineno="572"><highlight class="stringliteral">TaQLNodeResult<sp/>TaQLFuncNodeRep::visit<sp/>(TaQLNodeVisitor&amp;<sp/>visitor)<sp/>const</highlight></codeline>
<codeline lineno="573"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="574"><highlight class="stringliteral"><sp/><sp/>return<sp/>visitor.visitFuncNode<sp/>(*this);</highlight></codeline>
<codeline lineno="575"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="576"><highlight class="stringliteral">void<sp/>TaQLFuncNodeRep::show<sp/>(std::ostream&amp;<sp/>os)<sp/>const</highlight></codeline>
<codeline lineno="577"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="578"><highlight class="stringliteral"><sp/><sp/>os<sp/>&lt;&lt;<sp/>itsName<sp/>&lt;&lt;<sp/>&apos;</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&apos;;</highlight></codeline>
<codeline lineno="579"><highlight class="stringliteral"><sp/><sp/>itsArgs.show<sp/>(os);</highlight></codeline>
<codeline lineno="580"><highlight class="stringliteral"><sp/><sp/>os<sp/>&lt;&lt;<sp/>&apos;</highlight><highlight class="normal">)</highlight><highlight class="stringliteral">&apos;;</highlight></codeline>
<codeline lineno="581"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="582"><highlight class="stringliteral">void<sp/>TaQLFuncNodeRep::save<sp/>(AipsIO&amp;<sp/>aio)<sp/>const</highlight></codeline>
<codeline lineno="583"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="584"><highlight class="stringliteral"><sp/><sp/>aio<sp/>&lt;&lt;<sp/>itsName;</highlight></codeline>
<codeline lineno="585"><highlight class="stringliteral"><sp/><sp/>itsArgs.saveNode<sp/>(aio);</highlight></codeline>
<codeline lineno="586"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="587"><highlight class="stringliteral">TaQLNode<sp/>TaQLFuncNodeRep::restore<sp/>(AipsIO&amp;<sp/>aio)</highlight></codeline>
<codeline lineno="588"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="589"><highlight class="stringliteral"><sp/><sp/>String<sp/>name;</highlight></codeline>
<codeline lineno="590"><highlight class="stringliteral"><sp/><sp/>aio<sp/>&gt;&gt;<sp/>name;</highlight></codeline>
<codeline lineno="591"><highlight class="stringliteral"><sp/><sp/>return<sp/>new<sp/>TaQLFuncNodeRep<sp/>(name,<sp/>TaQLNode::restoreMultiNode<sp/>(aio));</highlight></codeline>
<codeline lineno="592"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="593"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="594"><highlight class="stringliteral">TaQLRangeNodeRep::TaQLRangeNodeRep<sp/>(Bool<sp/>leftClosed,<sp/>const<sp/>TaQLNode&amp;<sp/>start,</highlight></codeline>
<codeline lineno="595"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>TaQLNode&amp;<sp/>end,<sp/>Bool<sp/>rightClosed,</highlight></codeline>
<codeline lineno="596"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Bool<sp/>asMidWidth)</highlight></codeline>
<codeline lineno="597"><highlight class="stringliteral"><sp/><sp/>:<sp/>TaQLNodeRep<sp/>(TaQLNode_Range),</highlight></codeline>
<codeline lineno="598"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsStart<sp/><sp/><sp/><sp/><sp/><sp/>(start),</highlight></codeline>
<codeline lineno="599"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsEnd<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(end),</highlight></codeline>
<codeline lineno="600"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsLeftClosed<sp/>(leftClosed),</highlight></codeline>
<codeline lineno="601"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsRightClosed(rightClosed),</highlight></codeline>
<codeline lineno="602"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsAsMidWidth<sp/>(asMidWidth)</highlight></codeline>
<codeline lineno="603"><highlight class="stringliteral">{}</highlight></codeline>
<codeline lineno="604"><highlight class="stringliteral">TaQLRangeNodeRep::TaQLRangeNodeRep<sp/>(Bool<sp/>leftClosed,<sp/>const<sp/>TaQLNode&amp;<sp/>start)</highlight></codeline>
<codeline lineno="605"><highlight class="stringliteral"><sp/><sp/>:<sp/>TaQLNodeRep<sp/>(TaQLNode_Range),</highlight></codeline>
<codeline lineno="606"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsStart<sp/><sp/><sp/><sp/><sp/><sp/>(start),</highlight></codeline>
<codeline lineno="607"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsEnd<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(),</highlight></codeline>
<codeline lineno="608"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsLeftClosed<sp/>(leftClosed),</highlight></codeline>
<codeline lineno="609"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsRightClosed(False),</highlight></codeline>
<codeline lineno="610"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsAsMidWidth<sp/>(False)</highlight></codeline>
<codeline lineno="611"><highlight class="stringliteral">{}</highlight></codeline>
<codeline lineno="612"><highlight class="stringliteral">TaQLRangeNodeRep::TaQLRangeNodeRep<sp/>(const<sp/>TaQLNode&amp;<sp/>end,<sp/>Bool<sp/>rightClosed)</highlight></codeline>
<codeline lineno="613"><highlight class="stringliteral"><sp/><sp/>:<sp/>TaQLNodeRep<sp/>(TaQLNode_Range),</highlight></codeline>
<codeline lineno="614"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsStart<sp/><sp/><sp/><sp/><sp/><sp/>(),</highlight></codeline>
<codeline lineno="615"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsEnd<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(end),</highlight></codeline>
<codeline lineno="616"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsLeftClosed<sp/>(False),</highlight></codeline>
<codeline lineno="617"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsRightClosed(rightClosed),</highlight></codeline>
<codeline lineno="618"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsAsMidWidth<sp/>(False)</highlight></codeline>
<codeline lineno="619"><highlight class="stringliteral">{}</highlight></codeline>
<codeline lineno="620"><highlight class="stringliteral">TaQLRangeNodeRep::TaQLRangeNodeRep<sp/>(const<sp/>TaQLNode&amp;<sp/>mid,<sp/>const<sp/>TaQLNode&amp;<sp/>width)</highlight></codeline>
<codeline lineno="621"><highlight class="stringliteral"><sp/><sp/>:<sp/>TaQLNodeRep<sp/>(TaQLNode_Range),</highlight></codeline>
<codeline lineno="622"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsStart<sp/><sp/><sp/><sp/><sp/><sp/>(mid),</highlight></codeline>
<codeline lineno="623"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsEnd<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(width),</highlight></codeline>
<codeline lineno="624"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsLeftClosed<sp/>(True),</highlight></codeline>
<codeline lineno="625"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsRightClosed(True),</highlight></codeline>
<codeline lineno="626"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsAsMidWidth<sp/>(True)</highlight></codeline>
<codeline lineno="627"><highlight class="stringliteral">{}</highlight></codeline>
<codeline lineno="628"><highlight class="stringliteral">TaQLNodeResult<sp/>TaQLRangeNodeRep::visit<sp/>(TaQLNodeVisitor&amp;<sp/>visitor)<sp/>const</highlight></codeline>
<codeline lineno="629"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="630"><highlight class="stringliteral"><sp/><sp/>return<sp/>visitor.visitRangeNode<sp/>(*this);</highlight></codeline>
<codeline lineno="631"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="632"><highlight class="stringliteral">void<sp/>TaQLRangeNodeRep::show<sp/>(std::ostream&amp;<sp/>os)<sp/>const</highlight></codeline>
<codeline lineno="633"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="634"><highlight class="stringliteral"><sp/><sp/>if<sp/>(itsAsMidWidth)<sp/>{</highlight></codeline>
<codeline lineno="635"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>&apos;</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&apos;;</highlight></codeline>
<codeline lineno="636"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsStart.show<sp/>(os);</highlight></codeline>
<codeline lineno="637"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>&quot;)&lt;:&gt;(&quot;;</highlight></codeline>
<codeline lineno="638"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsEnd.show<sp/>(os);</highlight></codeline>
<codeline lineno="639"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>&apos;</highlight><highlight class="normal">)</highlight><highlight class="stringliteral">&apos;;</highlight></codeline>
<codeline lineno="640"><highlight class="stringliteral"><sp/><sp/>}<sp/>else<sp/>{</highlight></codeline>
<codeline lineno="641"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>if<sp/>(itsLeftClosed)<sp/>{</highlight></codeline>
<codeline lineno="642"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>&apos;</highlight><highlight class="normal">{</highlight><highlight class="stringliteral">&apos;;</highlight></codeline>
<codeline lineno="643"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{</highlight></codeline>
<codeline lineno="644"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>&apos;</highlight><highlight class="normal">&lt;</highlight><highlight class="stringliteral">&apos;;</highlight></codeline>
<codeline lineno="645"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="646"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsStart.show<sp/>(os);</highlight></codeline>
<codeline lineno="647"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;;</highlight></codeline>
<codeline lineno="648"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsEnd.show<sp/>(os);</highlight></codeline>
<codeline lineno="649"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>if<sp/>(itsRightClosed)<sp/>{</highlight></codeline>
<codeline lineno="650"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>&apos;</highlight><highlight class="normal">}</highlight><highlight class="stringliteral">&apos;;</highlight></codeline>
<codeline lineno="651"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{</highlight></codeline>
<codeline lineno="652"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>&apos;</highlight><highlight class="normal">&gt;</highlight><highlight class="stringliteral">&apos;;</highlight></codeline>
<codeline lineno="653"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="654"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="655"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="656"><highlight class="stringliteral">void<sp/>TaQLRangeNodeRep::save<sp/>(AipsIO&amp;<sp/>aio)<sp/>const</highlight></codeline>
<codeline lineno="657"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="658"><highlight class="stringliteral"><sp/><sp/>aio<sp/>&lt;&lt;<sp/>itsLeftClosed<sp/>&lt;&lt;<sp/>itsRightClosed<sp/>&lt;&lt;<sp/>itsAsMidWidth;</highlight></codeline>
<codeline lineno="659"><highlight class="stringliteral"><sp/><sp/>itsStart.saveNode<sp/>(aio);</highlight></codeline>
<codeline lineno="660"><highlight class="stringliteral"><sp/><sp/>itsEnd.saveNode<sp/>(aio);</highlight></codeline>
<codeline lineno="661"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="662"><highlight class="stringliteral">TaQLNode<sp/>TaQLRangeNodeRep::restore<sp/>(AipsIO&amp;<sp/>aio)</highlight></codeline>
<codeline lineno="663"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="664"><highlight class="stringliteral"><sp/><sp/>Bool<sp/>leftClosed,<sp/>rightClosed,<sp/>asMidWidth;</highlight></codeline>
<codeline lineno="665"><highlight class="stringliteral"><sp/><sp/>aio<sp/>&gt;&gt;<sp/>leftClosed<sp/>&gt;&gt;<sp/>rightClosed<sp/>&gt;&gt;<sp/>asMidWidth;</highlight></codeline>
<codeline lineno="666"><highlight class="stringliteral"><sp/><sp/>TaQLNode<sp/>start<sp/>=<sp/>TaQLNode::restoreNode<sp/>(aio);</highlight></codeline>
<codeline lineno="667"><highlight class="stringliteral"><sp/><sp/>TaQLNode<sp/>end<sp/>=<sp/>TaQLNode::restoreNode<sp/>(aio);</highlight></codeline>
<codeline lineno="668"><highlight class="stringliteral"><sp/><sp/>return<sp/>new<sp/>TaQLRangeNodeRep<sp/>(leftClosed,<sp/>start,<sp/>end,<sp/>rightClosed,<sp/>asMidWidth);</highlight></codeline>
<codeline lineno="669"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="670"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="671"><highlight class="stringliteral">TaQLIndexNodeRep::TaQLIndexNodeRep<sp/>(const<sp/>TaQLNode&amp;<sp/>start,</highlight></codeline>
<codeline lineno="672"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>TaQLNode&amp;<sp/>end,</highlight></codeline>
<codeline lineno="673"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>TaQLNode&amp;<sp/>incr)</highlight></codeline>
<codeline lineno="674"><highlight class="stringliteral"><sp/><sp/>:<sp/>TaQLNodeRep<sp/>(TaQLNode_Index),</highlight></codeline>
<codeline lineno="675"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsStart<sp/>(start),</highlight></codeline>
<codeline lineno="676"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsEnd<sp/><sp/><sp/>(end),</highlight></codeline>
<codeline lineno="677"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsIncr<sp/><sp/>(incr)</highlight></codeline>
<codeline lineno="678"><highlight class="stringliteral">{}</highlight></codeline>
<codeline lineno="679"><highlight class="stringliteral">TaQLNodeResult<sp/>TaQLIndexNodeRep::visit<sp/>(TaQLNodeVisitor&amp;<sp/>visitor)<sp/>const</highlight></codeline>
<codeline lineno="680"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="681"><highlight class="stringliteral"><sp/><sp/>return<sp/>visitor.visitIndexNode<sp/>(*this);</highlight></codeline>
<codeline lineno="682"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="683"><highlight class="stringliteral">void<sp/>TaQLIndexNodeRep::show<sp/>(std::ostream&amp;<sp/>os)<sp/>const</highlight></codeline>
<codeline lineno="684"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="685"><highlight class="stringliteral"><sp/><sp/>itsStart.show<sp/>(os);</highlight></codeline>
<codeline lineno="686"><highlight class="stringliteral"><sp/><sp/>if<sp/>(itsEnd.isValid())<sp/>{</highlight></codeline>
<codeline lineno="687"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>&apos;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&apos;;</highlight></codeline>
<codeline lineno="688"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsEnd.show<sp/>(os);</highlight></codeline>
<codeline lineno="689"><highlight class="stringliteral"><sp/><sp/>}<sp/>else<sp/>if<sp/>(itsIncr.isValid())<sp/>{</highlight></codeline>
<codeline lineno="690"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>&apos;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&apos;;</highlight></codeline>
<codeline lineno="691"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="692"><highlight class="stringliteral"><sp/><sp/>if<sp/>(itsIncr.isValid())<sp/>{</highlight></codeline>
<codeline lineno="693"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>&apos;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&apos;;</highlight></codeline>
<codeline lineno="694"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsIncr.show<sp/>(os);</highlight></codeline>
<codeline lineno="695"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="696"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="697"><highlight class="stringliteral">void<sp/>TaQLIndexNodeRep::save<sp/>(AipsIO&amp;<sp/>aio)<sp/>const</highlight></codeline>
<codeline lineno="698"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="699"><highlight class="stringliteral"><sp/><sp/>itsStart.saveNode<sp/>(aio);</highlight></codeline>
<codeline lineno="700"><highlight class="stringliteral"><sp/><sp/>itsEnd.saveNode<sp/>(aio);</highlight></codeline>
<codeline lineno="701"><highlight class="stringliteral"><sp/><sp/>itsIncr.saveNode<sp/>(aio);</highlight></codeline>
<codeline lineno="702"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="703"><highlight class="stringliteral">TaQLNode<sp/>TaQLIndexNodeRep::restore<sp/>(AipsIO&amp;<sp/>aio)</highlight></codeline>
<codeline lineno="704"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="705"><highlight class="stringliteral"><sp/><sp/>TaQLNode<sp/>start<sp/>=<sp/>TaQLNode::restoreNode<sp/>(aio);</highlight></codeline>
<codeline lineno="706"><highlight class="stringliteral"><sp/><sp/>TaQLNode<sp/>end<sp/>=<sp/>TaQLNode::restoreNode<sp/>(aio);</highlight></codeline>
<codeline lineno="707"><highlight class="stringliteral"><sp/><sp/>TaQLNode<sp/>incr<sp/>=<sp/>TaQLNode::restoreNode<sp/>(aio);</highlight></codeline>
<codeline lineno="708"><highlight class="stringliteral"><sp/><sp/>return<sp/>new<sp/>TaQLIndexNodeRep<sp/>(start,<sp/>end,<sp/>incr);</highlight></codeline>
<codeline lineno="709"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="710"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="711"><highlight class="stringliteral">TaQLJoinNodeRep::TaQLJoinNodeRep<sp/>(const<sp/>TaQLMultiNode&amp;<sp/>tables,</highlight></codeline>
<codeline lineno="712"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>TaQLNode&amp;<sp/>condition)</highlight></codeline>
<codeline lineno="713"><highlight class="stringliteral"><sp/><sp/>:<sp/>TaQLNodeRep<sp/>(TaQLNode_Join),</highlight></codeline>
<codeline lineno="714"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsTables<sp/><sp/><sp/><sp/>(tables),</highlight></codeline>
<codeline lineno="715"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsCondition<sp/>(condition)</highlight></codeline>
<codeline lineno="716"><highlight class="stringliteral">{}</highlight></codeline>
<codeline lineno="717"><highlight class="stringliteral">TaQLNodeResult<sp/>TaQLJoinNodeRep::visit<sp/>(TaQLNodeVisitor&amp;<sp/>visitor)<sp/>const</highlight></codeline>
<codeline lineno="718"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="719"><highlight class="stringliteral"><sp/><sp/>return<sp/>visitor.visitJoinNode<sp/>(*this);</highlight></codeline>
<codeline lineno="720"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="721"><highlight class="stringliteral">void<sp/>TaQLJoinNodeRep::show<sp/>(std::ostream&amp;<sp/>os)<sp/>const</highlight></codeline>
<codeline lineno="722"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="723"><highlight class="stringliteral"><sp/><sp/>os<sp/>&lt;&lt;<sp/>&quot;<sp/>JOIN<sp/>&quot;;</highlight></codeline>
<codeline lineno="724"><highlight class="stringliteral"><sp/><sp/>if<sp/>(itsTables.isValid())<sp/>{</highlight></codeline>
<codeline lineno="725"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsTables.show<sp/>(os);</highlight></codeline>
<codeline lineno="726"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;;</highlight></codeline>
<codeline lineno="727"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="728"><highlight class="stringliteral"><sp/><sp/>os<sp/>&lt;&lt;<sp/>&quot;ON<sp/>&quot;;</highlight></codeline>
<codeline lineno="729"><highlight class="stringliteral"><sp/><sp/>itsCondition.show<sp/>(os);</highlight></codeline>
<codeline lineno="730"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="731"><highlight class="stringliteral">void<sp/>TaQLJoinNodeRep::save<sp/>(AipsIO&amp;<sp/>aio)<sp/>const</highlight></codeline>
<codeline lineno="732"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="733"><highlight class="stringliteral"><sp/><sp/>itsTables.saveNode<sp/>(aio);</highlight></codeline>
<codeline lineno="734"><highlight class="stringliteral"><sp/><sp/>itsCondition.saveNode<sp/>(aio);</highlight></codeline>
<codeline lineno="735"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="736"><highlight class="stringliteral">TaQLNode<sp/>TaQLJoinNodeRep::restore<sp/>(AipsIO&amp;<sp/>aio)</highlight></codeline>
<codeline lineno="737"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="738"><highlight class="stringliteral"><sp/><sp/>TaQLMultiNode<sp/>tables<sp/>=<sp/>TaQLNode::restoreMultiNode<sp/>(aio);</highlight></codeline>
<codeline lineno="739"><highlight class="stringliteral"><sp/><sp/>TaQLNode<sp/>condition<sp/>=<sp/>TaQLNode::restoreNode<sp/>(aio);</highlight></codeline>
<codeline lineno="740"><highlight class="stringliteral"><sp/><sp/>return<sp/>new<sp/>TaQLJoinNodeRep<sp/>(tables,<sp/>condition);</highlight></codeline>
<codeline lineno="741"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="742"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="743"><highlight class="stringliteral">TaQLKeyColNodeRep::TaQLKeyColNodeRep<sp/>(const<sp/>String&amp;<sp/>name,</highlight></codeline>
<codeline lineno="744"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>String&amp;<sp/>nameMask)</highlight></codeline>
<codeline lineno="745"><highlight class="stringliteral">:<sp/>TaQLNodeRep<sp/>(TaQLNode_KeyCol),</highlight></codeline>
<codeline lineno="746"><highlight class="stringliteral"><sp/><sp/>itsName<sp/><sp/><sp/><sp/><sp/>(name),</highlight></codeline>
<codeline lineno="747"><highlight class="stringliteral"><sp/><sp/>itsNameMask<sp/>(nameMask)</highlight></codeline>
<codeline lineno="748"><highlight class="stringliteral">{}</highlight></codeline>
<codeline lineno="749"><highlight class="stringliteral">TaQLNodeResult<sp/>TaQLKeyColNodeRep::visit<sp/>(TaQLNodeVisitor&amp;<sp/>visitor)<sp/>const</highlight></codeline>
<codeline lineno="750"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="751"><highlight class="stringliteral"><sp/><sp/>return<sp/>visitor.visitKeyColNode<sp/>(*this);</highlight></codeline>
<codeline lineno="752"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="753"><highlight class="stringliteral">void<sp/>TaQLKeyColNodeRep::show<sp/>(std::ostream&amp;<sp/>os)<sp/>const</highlight></codeline>
<codeline lineno="754"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="755"><highlight class="stringliteral"><sp/><sp/>if<sp/>(itsNameMask.empty())<sp/>{</highlight></codeline>
<codeline lineno="756"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>itsName;</highlight></codeline>
<codeline lineno="757"><highlight class="stringliteral"><sp/><sp/>}<sp/>else<sp/>{</highlight></codeline>
<codeline lineno="758"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>&apos;</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&apos;<sp/>&lt;&lt;<sp/>itsName<sp/>&lt;&lt;<sp/>&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;<sp/>&lt;&lt;<sp/>itsNameMask<sp/>&lt;&lt;<sp/>&apos;</highlight><highlight class="normal">)</highlight><highlight class="stringliteral">&apos;;</highlight></codeline>
<codeline lineno="759"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="760"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="761"><highlight class="stringliteral">void<sp/>TaQLKeyColNodeRep::save<sp/>(AipsIO&amp;<sp/>aio)<sp/>const</highlight></codeline>
<codeline lineno="762"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="763"><highlight class="stringliteral"><sp/><sp/>aio<sp/>&lt;&lt;<sp/>itsName<sp/>&lt;&lt;<sp/>itsNameMask;</highlight></codeline>
<codeline lineno="764"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="765"><highlight class="stringliteral">TaQLNode<sp/>TaQLKeyColNodeRep::restore<sp/>(AipsIO&amp;<sp/>aio)</highlight></codeline>
<codeline lineno="766"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="767"><highlight class="stringliteral"><sp/><sp/>String<sp/>name,<sp/>nameMask;</highlight></codeline>
<codeline lineno="768"><highlight class="stringliteral"><sp/><sp/>aio<sp/>&gt;&gt;<sp/>name<sp/>&gt;&gt;<sp/>nameMask;</highlight></codeline>
<codeline lineno="769"><highlight class="stringliteral"><sp/><sp/>return<sp/>new<sp/>TaQLKeyColNodeRep<sp/>(name,<sp/>nameMask);</highlight></codeline>
<codeline lineno="770"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="771"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="772"><highlight class="stringliteral">TaQLTableNodeRep::TaQLTableNodeRep<sp/>(const<sp/>TaQLNode&amp;<sp/>table,</highlight></codeline>
<codeline lineno="773"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>String&amp;<sp/>alias)</highlight></codeline>
<codeline lineno="774"><highlight class="stringliteral"><sp/><sp/>:<sp/>TaQLNodeRep<sp/>(TaQLNode_Table),</highlight></codeline>
<codeline lineno="775"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsTable<sp/>(table),</highlight></codeline>
<codeline lineno="776"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsAlias<sp/>(alias)</highlight></codeline>
<codeline lineno="777"><highlight class="stringliteral">{}</highlight></codeline>
<codeline lineno="778"><highlight class="stringliteral">TaQLNodeResult<sp/>TaQLTableNodeRep::visit<sp/>(TaQLNodeVisitor&amp;<sp/>visitor)<sp/>const</highlight></codeline>
<codeline lineno="779"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="780"><highlight class="stringliteral"><sp/><sp/>return<sp/>visitor.visitTableNode<sp/>(*this);</highlight></codeline>
<codeline lineno="781"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="782"><highlight class="stringliteral">void<sp/>TaQLTableNodeRep::show<sp/>(std::ostream&amp;<sp/>os)<sp/>const</highlight></codeline>
<codeline lineno="783"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="784"><highlight class="stringliteral"><sp/><sp/>itsTable.show<sp/>(os);</highlight></codeline>
<codeline lineno="785"><highlight class="stringliteral"><sp/><sp/>if<sp/>(!<sp/>itsAlias.empty())<sp/>{</highlight></codeline>
<codeline lineno="786"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>&quot;<sp/>AS<sp/>&quot;<sp/>&lt;&lt;<sp/>itsAlias;</highlight></codeline>
<codeline lineno="787"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="788"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="789"><highlight class="stringliteral">void<sp/>TaQLTableNodeRep::save<sp/>(AipsIO&amp;<sp/>aio)<sp/>const</highlight></codeline>
<codeline lineno="790"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="791"><highlight class="stringliteral"><sp/><sp/>aio<sp/>&lt;&lt;<sp/>itsAlias;</highlight></codeline>
<codeline lineno="792"><highlight class="stringliteral"><sp/><sp/>itsTable.saveNode<sp/>(aio);</highlight></codeline>
<codeline lineno="793"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="794"><highlight class="stringliteral">TaQLNode<sp/>TaQLTableNodeRep::restore<sp/>(AipsIO&amp;<sp/>aio)</highlight></codeline>
<codeline lineno="795"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="796"><highlight class="stringliteral"><sp/><sp/>String<sp/>alias;</highlight></codeline>
<codeline lineno="797"><highlight class="stringliteral"><sp/><sp/>aio<sp/>&gt;&gt;<sp/>alias;</highlight></codeline>
<codeline lineno="798"><highlight class="stringliteral"><sp/><sp/>return<sp/>new<sp/>TaQLTableNodeRep<sp/>(TaQLNode::restoreNode(aio),<sp/>alias);</highlight></codeline>
<codeline lineno="799"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="800"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="801"><highlight class="stringliteral">TaQLColNodeRep::TaQLColNodeRep<sp/>(const<sp/>TaQLNode&amp;<sp/>expr,<sp/>const<sp/>String&amp;<sp/>name,</highlight></codeline>
<codeline lineno="802"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>String&amp;<sp/>nameMask,<sp/>const<sp/>String&amp;<sp/>dtype)</highlight></codeline>
<codeline lineno="803"><highlight class="stringliteral"><sp/><sp/>:<sp/>TaQLNodeRep<sp/>(TaQLNode_Col),</highlight></codeline>
<codeline lineno="804"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsExpr<sp/><sp/><sp/><sp/><sp/>(expr),</highlight></codeline>
<codeline lineno="805"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsName<sp/><sp/><sp/><sp/><sp/>(name),</highlight></codeline>
<codeline lineno="806"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsNameMask<sp/>(nameMask),</highlight></codeline>
<codeline lineno="807"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsDtype<sp/><sp/><sp/><sp/>(checkDataType(dtype))</highlight></codeline>
<codeline lineno="808"><highlight class="stringliteral">{}</highlight></codeline>
<codeline lineno="809"><highlight class="stringliteral">TaQLNodeResult<sp/>TaQLColNodeRep::visit<sp/>(TaQLNodeVisitor&amp;<sp/>visitor)<sp/>const</highlight></codeline>
<codeline lineno="810"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="811"><highlight class="stringliteral"><sp/><sp/>return<sp/>visitor.visitColNode<sp/>(*this);</highlight></codeline>
<codeline lineno="812"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="813"><highlight class="stringliteral">void<sp/>TaQLColNodeRep::show<sp/>(std::ostream&amp;<sp/>os)<sp/>const</highlight></codeline>
<codeline lineno="814"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="815"><highlight class="stringliteral"><sp/><sp/>itsExpr.show<sp/>(os);</highlight></codeline>
<codeline lineno="816"><highlight class="stringliteral"><sp/><sp/>if<sp/>(!<sp/>itsName.empty())<sp/>{</highlight></codeline>
<codeline lineno="817"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>&quot;<sp/>AS<sp/>&quot;<sp/>;</highlight></codeline>
<codeline lineno="818"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>if<sp/>(itsNameMask.empty())<sp/>{</highlight></codeline>
<codeline lineno="819"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>itsName;</highlight></codeline>
<codeline lineno="820"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{</highlight></codeline>
<codeline lineno="821"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>&apos;</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&apos;<sp/>&lt;&lt;<sp/>itsName<sp/>&lt;&lt;<sp/>&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;<sp/>&lt;&lt;<sp/>itsNameMask<sp/>&lt;&lt;<sp/>&apos;</highlight><highlight class="normal">)</highlight><highlight class="stringliteral">&apos;;</highlight></codeline>
<codeline lineno="822"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="823"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>if<sp/>(!<sp/>itsDtype.empty())<sp/>{</highlight></codeline>
<codeline lineno="824"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;<sp/>&lt;&lt;<sp/>itsDtype;</highlight></codeline>
<codeline lineno="825"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="826"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="827"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="828"><highlight class="stringliteral">void<sp/>TaQLColNodeRep::save<sp/>(AipsIO&amp;<sp/>aio)<sp/>const</highlight></codeline>
<codeline lineno="829"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="830"><highlight class="stringliteral"><sp/><sp/>aio<sp/>&lt;&lt;<sp/>itsName<sp/>&lt;&lt;<sp/>itsNameMask<sp/>&lt;&lt;<sp/>itsDtype;</highlight></codeline>
<codeline lineno="831"><highlight class="stringliteral"><sp/><sp/>itsExpr.saveNode<sp/>(aio);</highlight></codeline>
<codeline lineno="832"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="833"><highlight class="stringliteral">TaQLNode<sp/>TaQLColNodeRep::restore<sp/>(AipsIO&amp;<sp/>aio)</highlight></codeline>
<codeline lineno="834"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="835"><highlight class="stringliteral"><sp/><sp/>String<sp/>name,<sp/>nameMask,<sp/>dtype;</highlight></codeline>
<codeline lineno="836"><highlight class="stringliteral"><sp/><sp/>aio<sp/>&gt;&gt;<sp/>name<sp/>&gt;&gt;<sp/>nameMask<sp/>&gt;&gt;<sp/>dtype;</highlight></codeline>
<codeline lineno="837"><highlight class="stringliteral"><sp/><sp/>return<sp/>new<sp/>TaQLColNodeRep<sp/>(TaQLNode::restoreNode(aio),</highlight></codeline>
<codeline lineno="838"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name,<sp/>nameMask,<sp/>dtype);</highlight></codeline>
<codeline lineno="839"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="840"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="841"><highlight class="stringliteral">TaQLColumnsNodeRep::TaQLColumnsNodeRep<sp/>(Bool<sp/>distinct,</highlight></codeline>
<codeline lineno="842"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>TaQLMultiNode&amp;<sp/>nodes)</highlight></codeline>
<codeline lineno="843"><highlight class="stringliteral"><sp/><sp/>:<sp/>TaQLNodeRep<sp/>(TaQLNode_Columns),</highlight></codeline>
<codeline lineno="844"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsDistinct<sp/>(distinct),</highlight></codeline>
<codeline lineno="845"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsNodes<sp/><sp/><sp/><sp/>(nodes)</highlight></codeline>
<codeline lineno="846"><highlight class="stringliteral">{}</highlight></codeline>
<codeline lineno="847"><highlight class="stringliteral">TaQLNodeResult<sp/>TaQLColumnsNodeRep::visit<sp/>(TaQLNodeVisitor&amp;<sp/>visitor)<sp/>const</highlight></codeline>
<codeline lineno="848"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="849"><highlight class="stringliteral"><sp/><sp/>return<sp/>visitor.visitColumnsNode<sp/>(*this);</highlight></codeline>
<codeline lineno="850"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="851"><highlight class="stringliteral">void<sp/>TaQLColumnsNodeRep::show<sp/>(std::ostream&amp;<sp/>os)<sp/>const</highlight></codeline>
<codeline lineno="852"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="853"><highlight class="stringliteral"><sp/><sp/>if<sp/>(itsDistinct)<sp/>{</highlight></codeline>
<codeline lineno="854"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>&quot;<sp/>DISTINCT&quot;;</highlight></codeline>
<codeline lineno="855"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="856"><highlight class="stringliteral"><sp/><sp/>if<sp/>(itsNodes.isValid())<sp/>{</highlight></codeline>
<codeline lineno="857"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;;</highlight></codeline>
<codeline lineno="858"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsNodes.show<sp/>(os);</highlight></codeline>
<codeline lineno="859"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="860"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="861"><highlight class="stringliteral">void<sp/>TaQLColumnsNodeRep::save<sp/>(AipsIO&amp;<sp/>aio)<sp/>const</highlight></codeline>
<codeline lineno="862"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="863"><highlight class="stringliteral"><sp/><sp/>aio<sp/>&lt;&lt;<sp/>itsDistinct;</highlight></codeline>
<codeline lineno="864"><highlight class="stringliteral"><sp/><sp/>itsNodes.saveNode<sp/>(aio);</highlight></codeline>
<codeline lineno="865"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="866"><highlight class="stringliteral">TaQLNode<sp/>TaQLColumnsNodeRep::restore<sp/>(AipsIO&amp;<sp/>aio)</highlight></codeline>
<codeline lineno="867"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="868"><highlight class="stringliteral"><sp/><sp/>Bool<sp/>distinct;</highlight></codeline>
<codeline lineno="869"><highlight class="stringliteral"><sp/><sp/>aio<sp/>&gt;&gt;<sp/>distinct;</highlight></codeline>
<codeline lineno="870"><highlight class="stringliteral"><sp/><sp/>return<sp/>new<sp/>TaQLColumnsNodeRep<sp/>(distinct,<sp/>TaQLNode::restoreMultiNode(aio));</highlight></codeline>
<codeline lineno="871"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="872"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="873"><highlight class="stringliteral">TaQLGroupNodeRep::TaQLGroupNodeRep<sp/>(Type<sp/>type,<sp/>const<sp/>TaQLMultiNode&amp;<sp/>nodes)</highlight></codeline>
<codeline lineno="874"><highlight class="stringliteral"><sp/><sp/>:<sp/>TaQLNodeRep<sp/>(TaQLNode_Groupby),</highlight></codeline>
<codeline lineno="875"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsType<sp/><sp/>(type),</highlight></codeline>
<codeline lineno="876"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsNodes<sp/>(nodes)</highlight></codeline>
<codeline lineno="877"><highlight class="stringliteral">{}</highlight></codeline>
<codeline lineno="878"><highlight class="stringliteral">TaQLNodeResult<sp/>TaQLGroupNodeRep::visit<sp/>(TaQLNodeVisitor&amp;<sp/>visitor)<sp/>const</highlight></codeline>
<codeline lineno="879"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="880"><highlight class="stringliteral"><sp/><sp/>return<sp/>visitor.visitGroupNode<sp/>(*this);</highlight></codeline>
<codeline lineno="881"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="882"><highlight class="stringliteral">void<sp/>TaQLGroupNodeRep::show<sp/>(std::ostream&amp;<sp/>os)<sp/>const</highlight></codeline>
<codeline lineno="883"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="884"><highlight class="stringliteral"><sp/><sp/>os<sp/>&lt;&lt;<sp/>&quot;<sp/>GROUPBY&quot;;</highlight></codeline>
<codeline lineno="885"><highlight class="stringliteral"><sp/><sp/>if<sp/>(itsType<sp/>==<sp/>Rollup)<sp/>{</highlight></codeline>
<codeline lineno="886"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>&quot;<sp/>ROLLUP&quot;;</highlight></codeline>
<codeline lineno="887"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="888"><highlight class="stringliteral"><sp/><sp/>os<sp/>&lt;&lt;<sp/>&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;;</highlight></codeline>
<codeline lineno="889"><highlight class="stringliteral"><sp/><sp/>itsNodes.show<sp/>(os);</highlight></codeline>
<codeline lineno="890"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="891"><highlight class="stringliteral">void<sp/>TaQLGroupNodeRep::save<sp/>(AipsIO&amp;<sp/>aio)<sp/>const</highlight></codeline>
<codeline lineno="892"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="893"><highlight class="stringliteral"><sp/><sp/>aio<sp/>&lt;&lt;<sp/>char(itsType);</highlight></codeline>
<codeline lineno="894"><highlight class="stringliteral"><sp/><sp/>itsNodes.saveNode<sp/>(aio);</highlight></codeline>
<codeline lineno="895"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="896"><highlight class="stringliteral">TaQLNode<sp/>TaQLGroupNodeRep::restore<sp/>(AipsIO&amp;<sp/>aio)</highlight></codeline>
<codeline lineno="897"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="898"><highlight class="stringliteral"><sp/><sp/>char<sp/>ctype;</highlight></codeline>
<codeline lineno="899"><highlight class="stringliteral"><sp/><sp/>aio<sp/>&gt;&gt;<sp/>ctype;</highlight></codeline>
<codeline lineno="900"><highlight class="stringliteral"><sp/><sp/>TaQLGroupNodeRep::Type<sp/>type<sp/>=<sp/>(TaQLGroupNodeRep::Type)ctype;</highlight></codeline>
<codeline lineno="901"><highlight class="stringliteral"><sp/><sp/>return<sp/>new<sp/>TaQLGroupNodeRep<sp/>(type,<sp/>TaQLNode::restoreMultiNode(aio));</highlight></codeline>
<codeline lineno="902"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="903"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="904"><highlight class="stringliteral">TaQLSortKeyNodeRep::TaQLSortKeyNodeRep<sp/>(Type<sp/>type,<sp/>const<sp/>TaQLNode&amp;<sp/>child)</highlight></codeline>
<codeline lineno="905"><highlight class="stringliteral"><sp/><sp/>:<sp/>TaQLNodeRep<sp/>(TaQLNode_SortKey),</highlight></codeline>
<codeline lineno="906"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsType<sp/><sp/>(type),</highlight></codeline>
<codeline lineno="907"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsChild<sp/>(child)</highlight></codeline>
<codeline lineno="908"><highlight class="stringliteral">{}</highlight></codeline>
<codeline lineno="909"><highlight class="stringliteral">TaQLNodeResult<sp/>TaQLSortKeyNodeRep::visit<sp/>(TaQLNodeVisitor&amp;<sp/>visitor)<sp/>const</highlight></codeline>
<codeline lineno="910"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="911"><highlight class="stringliteral"><sp/><sp/>return<sp/>visitor.visitSortKeyNode<sp/>(*this);</highlight></codeline>
<codeline lineno="912"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="913"><highlight class="stringliteral">void<sp/>TaQLSortKeyNodeRep::show<sp/>(std::ostream&amp;<sp/>os)<sp/>const</highlight></codeline>
<codeline lineno="914"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="915"><highlight class="stringliteral"><sp/><sp/>itsChild.show<sp/>(os);</highlight></codeline>
<codeline lineno="916"><highlight class="stringliteral"><sp/><sp/>switch<sp/>(itsType)<sp/>{</highlight></codeline>
<codeline lineno="917"><highlight class="stringliteral"><sp/><sp/>case<sp/>Ascending:</highlight></codeline>
<codeline lineno="918"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>&quot;<sp/>ASC&quot;;</highlight></codeline>
<codeline lineno="919"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline lineno="920"><highlight class="stringliteral"><sp/><sp/>case<sp/>Descending:</highlight></codeline>
<codeline lineno="921"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>&quot;<sp/>DESC&quot;;</highlight></codeline>
<codeline lineno="922"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline lineno="923"><highlight class="stringliteral"><sp/><sp/>case<sp/>None:</highlight></codeline>
<codeline lineno="924"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline lineno="925"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="926"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="927"><highlight class="stringliteral">void<sp/>TaQLSortKeyNodeRep::save<sp/>(AipsIO&amp;<sp/>aio)<sp/>const</highlight></codeline>
<codeline lineno="928"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="929"><highlight class="stringliteral"><sp/><sp/>aio<sp/>&lt;&lt;<sp/>char(itsType);</highlight></codeline>
<codeline lineno="930"><highlight class="stringliteral"><sp/><sp/>itsChild.saveNode<sp/>(aio);</highlight></codeline>
<codeline lineno="931"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="932"><highlight class="stringliteral">TaQLNode<sp/>TaQLSortKeyNodeRep::restore<sp/>(AipsIO&amp;<sp/>aio)</highlight></codeline>
<codeline lineno="933"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="934"><highlight class="stringliteral"><sp/><sp/>char<sp/>ctype;</highlight></codeline>
<codeline lineno="935"><highlight class="stringliteral"><sp/><sp/>aio<sp/>&gt;&gt;<sp/>ctype;</highlight></codeline>
<codeline lineno="936"><highlight class="stringliteral"><sp/><sp/>TaQLSortKeyNodeRep::Type<sp/>type<sp/>=<sp/>(TaQLSortKeyNodeRep::Type)ctype;</highlight></codeline>
<codeline lineno="937"><highlight class="stringliteral"><sp/><sp/>return<sp/>new<sp/>TaQLSortKeyNodeRep<sp/>(type,<sp/>TaQLNode::restoreNode(aio));</highlight></codeline>
<codeline lineno="938"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="939"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="940"><highlight class="stringliteral">TaQLSortNodeRep::TaQLSortNodeRep<sp/>(Bool<sp/>unique,<sp/>Type<sp/>type,</highlight></codeline>
<codeline lineno="941"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>TaQLMultiNode&amp;<sp/>keys)</highlight></codeline>
<codeline lineno="942"><highlight class="stringliteral"><sp/><sp/>:<sp/>TaQLNodeRep<sp/>(TaQLNode_Sort),</highlight></codeline>
<codeline lineno="943"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsUnique<sp/>(unique),</highlight></codeline>
<codeline lineno="944"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsType<sp/><sp/><sp/>(type),</highlight></codeline>
<codeline lineno="945"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsKeys<sp/><sp/><sp/>(keys)</highlight></codeline>
<codeline lineno="946"><highlight class="stringliteral">{}</highlight></codeline>
<codeline lineno="947"><highlight class="stringliteral">TaQLNodeResult<sp/>TaQLSortNodeRep::visit<sp/>(TaQLNodeVisitor&amp;<sp/>visitor)<sp/>const</highlight></codeline>
<codeline lineno="948"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="949"><highlight class="stringliteral"><sp/><sp/>return<sp/>visitor.visitSortNode<sp/>(*this);</highlight></codeline>
<codeline lineno="950"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="951"><highlight class="stringliteral">void<sp/>TaQLSortNodeRep::show<sp/>(std::ostream&amp;<sp/>os)<sp/>const</highlight></codeline>
<codeline lineno="952"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="953"><highlight class="stringliteral"><sp/><sp/>os<sp/>&lt;&lt;<sp/>&quot;<sp/>ORDERBY&quot;;</highlight></codeline>
<codeline lineno="954"><highlight class="stringliteral"><sp/><sp/>if<sp/>(itsUnique)<sp/>{</highlight></codeline>
<codeline lineno="955"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>&quot;<sp/>UNIQUE&quot;;</highlight></codeline>
<codeline lineno="956"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="957"><highlight class="stringliteral"><sp/><sp/>if<sp/>(itsType<sp/>==<sp/>Descending)<sp/>{</highlight></codeline>
<codeline lineno="958"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>&quot;<sp/>DESC&quot;;</highlight></codeline>
<codeline lineno="959"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="960"><highlight class="stringliteral"><sp/><sp/>os<sp/>&lt;&lt;<sp/>&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;;</highlight></codeline>
<codeline lineno="961"><highlight class="stringliteral"><sp/><sp/>itsKeys.show<sp/>(os);</highlight></codeline>
<codeline lineno="962"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="963"><highlight class="stringliteral">void<sp/>TaQLSortNodeRep::save<sp/>(AipsIO&amp;<sp/>aio)<sp/>const</highlight></codeline>
<codeline lineno="964"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="965"><highlight class="stringliteral"><sp/><sp/>aio<sp/>&lt;&lt;<sp/>itsUnique<sp/>&lt;&lt;<sp/>char(itsType);</highlight></codeline>
<codeline lineno="966"><highlight class="stringliteral"><sp/><sp/>itsKeys.saveNode<sp/>(aio);</highlight></codeline>
<codeline lineno="967"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="968"><highlight class="stringliteral">TaQLNode<sp/>TaQLSortNodeRep::restore<sp/>(AipsIO&amp;<sp/>aio)</highlight></codeline>
<codeline lineno="969"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="970"><highlight class="stringliteral"><sp/><sp/>Bool<sp/>unique;</highlight></codeline>
<codeline lineno="971"><highlight class="stringliteral"><sp/><sp/>char<sp/>ctype;</highlight></codeline>
<codeline lineno="972"><highlight class="stringliteral"><sp/><sp/>aio<sp/>&gt;&gt;<sp/>unique<sp/>&gt;&gt;<sp/>ctype;</highlight></codeline>
<codeline lineno="973"><highlight class="stringliteral"><sp/><sp/>TaQLSortNodeRep::Type<sp/>type<sp/>=<sp/>(TaQLSortNodeRep::Type)ctype;</highlight></codeline>
<codeline lineno="974"><highlight class="stringliteral"><sp/><sp/>return<sp/>new<sp/>TaQLSortNodeRep<sp/>(unique,<sp/>type,<sp/>TaQLNode::restoreMultiNode(aio));</highlight></codeline>
<codeline lineno="975"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="976"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="977"><highlight class="stringliteral">TaQLLimitOffNodeRep::TaQLLimitOffNodeRep<sp/>(const<sp/>TaQLNode&amp;<sp/>limit,</highlight></codeline>
<codeline lineno="978"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>TaQLNode&amp;<sp/>offset)</highlight></codeline>
<codeline lineno="979"><highlight class="stringliteral"><sp/><sp/>:<sp/>TaQLNodeRep<sp/>(TaQLNode_LimitOff),</highlight></codeline>
<codeline lineno="980"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsLimit<sp/>(limit),</highlight></codeline>
<codeline lineno="981"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsOffset<sp/>(offset)</highlight></codeline>
<codeline lineno="982"><highlight class="stringliteral">{}</highlight></codeline>
<codeline lineno="983"><highlight class="stringliteral">TaQLNodeResult<sp/>TaQLLimitOffNodeRep::visit<sp/>(TaQLNodeVisitor&amp;<sp/>visitor)<sp/>const</highlight></codeline>
<codeline lineno="984"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="985"><highlight class="stringliteral"><sp/><sp/>return<sp/>visitor.visitLimitOffNode<sp/>(*this);</highlight></codeline>
<codeline lineno="986"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="987"><highlight class="stringliteral">void<sp/>TaQLLimitOffNodeRep::show<sp/>(std::ostream&amp;<sp/>os)<sp/>const</highlight></codeline>
<codeline lineno="988"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="989"><highlight class="stringliteral"><sp/><sp/>if<sp/>(itsLimit.isValid())<sp/>{</highlight></codeline>
<codeline lineno="990"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>&quot;<sp/>LIMIT<sp/>&quot;;</highlight></codeline>
<codeline lineno="991"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsLimit.show<sp/>(os);</highlight></codeline>
<codeline lineno="992"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="993"><highlight class="stringliteral"><sp/><sp/>if<sp/>(itsOffset.isValid())<sp/>{</highlight></codeline>
<codeline lineno="994"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>&quot;<sp/>OFFSET<sp/>&quot;;</highlight></codeline>
<codeline lineno="995"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsOffset.show<sp/>(os);</highlight></codeline>
<codeline lineno="996"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="997"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="998"><highlight class="stringliteral">void<sp/>TaQLLimitOffNodeRep::save<sp/>(AipsIO&amp;<sp/>aio)<sp/>const</highlight></codeline>
<codeline lineno="999"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1000"><highlight class="stringliteral"><sp/><sp/>itsLimit.saveNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1001"><highlight class="stringliteral"><sp/><sp/>itsOffset.saveNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1002"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1003"><highlight class="stringliteral">TaQLNode<sp/>TaQLLimitOffNodeRep::restore<sp/>(AipsIO&amp;<sp/>aio)</highlight></codeline>
<codeline lineno="1004"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1005"><highlight class="stringliteral"><sp/><sp/>TaQLNode<sp/>limit<sp/>=<sp/>TaQLNode::restoreNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1006"><highlight class="stringliteral"><sp/><sp/>TaQLNode<sp/>offset<sp/>=<sp/>TaQLNode::restoreNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1007"><highlight class="stringliteral"><sp/><sp/>return<sp/>new<sp/>TaQLLimitOffNodeRep<sp/>(limit,<sp/>offset);</highlight></codeline>
<codeline lineno="1008"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1009"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1010"><highlight class="stringliteral">TaQLGivingNodeRep::TaQLGivingNodeRep<sp/>(const<sp/>String&amp;<sp/>name,</highlight></codeline>
<codeline lineno="1011"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>TaQLMultiNode&amp;<sp/>type)</highlight></codeline>
<codeline lineno="1012"><highlight class="stringliteral"><sp/><sp/>:<sp/>TaQLNodeRep<sp/>(TaQLNode_Giving),</highlight></codeline>
<codeline lineno="1013"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsName<sp/><sp/><sp/><sp/><sp/>(name),</highlight></codeline>
<codeline lineno="1014"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsType<sp/><sp/><sp/><sp/><sp/>(type)</highlight></codeline>
<codeline lineno="1015"><highlight class="stringliteral">{}</highlight></codeline>
<codeline lineno="1016"><highlight class="stringliteral">TaQLGivingNodeRep::TaQLGivingNodeRep<sp/>(const<sp/>TaQLMultiNode&amp;<sp/>exprlist)</highlight></codeline>
<codeline lineno="1017"><highlight class="stringliteral"><sp/><sp/>:<sp/>TaQLNodeRep<sp/>(TaQLNode_Giving),</highlight></codeline>
<codeline lineno="1018"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsExprList<sp/>(exprlist)</highlight></codeline>
<codeline lineno="1019"><highlight class="stringliteral">{}</highlight></codeline>
<codeline lineno="1020"><highlight class="stringliteral">TaQLNodeResult<sp/>TaQLGivingNodeRep::visit<sp/>(TaQLNodeVisitor&amp;<sp/>visitor)<sp/>const</highlight></codeline>
<codeline lineno="1021"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1022"><highlight class="stringliteral"><sp/><sp/>return<sp/>visitor.visitGivingNode<sp/>(*this);</highlight></codeline>
<codeline lineno="1023"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1024"><highlight class="stringliteral">void<sp/>TaQLGivingNodeRep::show<sp/>(std::ostream&amp;<sp/>os)<sp/>const</highlight></codeline>
<codeline lineno="1025"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1026"><highlight class="stringliteral"><sp/><sp/>if<sp/>(itsExprList.isValid())<sp/>{</highlight></codeline>
<codeline lineno="1027"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsExprList.show<sp/>(os);</highlight></codeline>
<codeline lineno="1028"><highlight class="stringliteral"><sp/><sp/>}<sp/>else<sp/>{</highlight></codeline>
<codeline lineno="1029"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>addEscape(itsName);</highlight></codeline>
<codeline lineno="1030"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>if<sp/>(itsType.isValid())<sp/>{</highlight></codeline>
<codeline lineno="1031"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>&quot;<sp/>AS<sp/>&quot;;</highlight></codeline>
<codeline lineno="1032"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>itsType.show<sp/>(os);</highlight></codeline>
<codeline lineno="1033"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1034"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1035"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1036"><highlight class="stringliteral">void<sp/>TaQLGivingNodeRep::save<sp/>(AipsIO&amp;<sp/>aio)<sp/>const</highlight></codeline>
<codeline lineno="1037"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1038"><highlight class="stringliteral"><sp/><sp/>itsExprList.saveNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1039"><highlight class="stringliteral"><sp/><sp/>if<sp/>(!<sp/>itsExprList.isValid())<sp/>{</highlight></codeline>
<codeline lineno="1040"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>aio<sp/>&lt;&lt;<sp/>itsName;</highlight></codeline>
<codeline lineno="1041"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsType.saveNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1042"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1043"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1044"><highlight class="stringliteral">TaQLNode<sp/>TaQLGivingNodeRep::restore<sp/>(AipsIO&amp;<sp/>aio)</highlight></codeline>
<codeline lineno="1045"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1046"><highlight class="stringliteral"><sp/><sp/>TaQLMultiNode<sp/>node<sp/>=<sp/>TaQLNode::restoreMultiNode(aio);</highlight></codeline>
<codeline lineno="1047"><highlight class="stringliteral"><sp/><sp/>if<sp/>(node.isValid())<sp/>{</highlight></codeline>
<codeline lineno="1048"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>return<sp/>new<sp/>TaQLGivingNodeRep<sp/>(node);</highlight></codeline>
<codeline lineno="1049"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1050"><highlight class="stringliteral"><sp/><sp/>String<sp/>name;</highlight></codeline>
<codeline lineno="1051"><highlight class="stringliteral"><sp/><sp/>aio<sp/>&gt;&gt;<sp/>name;</highlight></codeline>
<codeline lineno="1052"><highlight class="stringliteral"><sp/><sp/>TaQLMultiNode<sp/>type<sp/>=<sp/>TaQLNode::restoreMultiNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1053"><highlight class="stringliteral"><sp/><sp/>return<sp/>new<sp/>TaQLGivingNodeRep<sp/>(name,<sp/>type);</highlight></codeline>
<codeline lineno="1054"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1055"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1056"><highlight class="stringliteral">TaQLUpdExprNodeRep::TaQLUpdExprNodeRep<sp/>(const<sp/>String&amp;<sp/>name,</highlight></codeline>
<codeline lineno="1057"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>String&amp;<sp/>nameMask,</highlight></codeline>
<codeline lineno="1058"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>TaQLNode&amp;<sp/>expr)</highlight></codeline>
<codeline lineno="1059"><highlight class="stringliteral"><sp/><sp/>:<sp/>TaQLNodeRep<sp/>(TaQLNode_UpdExpr),</highlight></codeline>
<codeline lineno="1060"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsName<sp/><sp/><sp/><sp/><sp/>(name),</highlight></codeline>
<codeline lineno="1061"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsNameMask<sp/>(nameMask),</highlight></codeline>
<codeline lineno="1062"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsExpr<sp/><sp/><sp/><sp/><sp/>(expr)</highlight></codeline>
<codeline lineno="1063"><highlight class="stringliteral">{}</highlight></codeline>
<codeline lineno="1064"><highlight class="stringliteral">TaQLUpdExprNodeRep::TaQLUpdExprNodeRep<sp/>(const<sp/>String&amp;<sp/>name,</highlight></codeline>
<codeline lineno="1065"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>String&amp;<sp/>nameMask,</highlight></codeline>
<codeline lineno="1066"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>TaQLMultiNode&amp;<sp/>indices,</highlight></codeline>
<codeline lineno="1067"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>TaQLNode&amp;<sp/>expr)</highlight></codeline>
<codeline lineno="1068"><highlight class="stringliteral"><sp/><sp/>:<sp/>TaQLNodeRep<sp/>(TaQLNode_UpdExpr),</highlight></codeline>
<codeline lineno="1069"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsName<sp/><sp/><sp/><sp/><sp/>(name),</highlight></codeline>
<codeline lineno="1070"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsNameMask<sp/>(nameMask),</highlight></codeline>
<codeline lineno="1071"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsIndices1<sp/>(indices),</highlight></codeline>
<codeline lineno="1072"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsExpr<sp/><sp/><sp/><sp/><sp/>(expr)</highlight></codeline>
<codeline lineno="1073"><highlight class="stringliteral">{}</highlight></codeline>
<codeline lineno="1074"><highlight class="stringliteral">TaQLUpdExprNodeRep::TaQLUpdExprNodeRep<sp/>(const<sp/>String&amp;<sp/>name,</highlight></codeline>
<codeline lineno="1075"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>String&amp;<sp/>nameMask,</highlight></codeline>
<codeline lineno="1076"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>TaQLMultiNode&amp;<sp/>indices1,</highlight></codeline>
<codeline lineno="1077"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>TaQLMultiNode&amp;<sp/>indices2,</highlight></codeline>
<codeline lineno="1078"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>TaQLNode&amp;<sp/>expr)</highlight></codeline>
<codeline lineno="1079"><highlight class="stringliteral"><sp/><sp/>:<sp/>TaQLNodeRep<sp/>(TaQLNode_UpdExpr),</highlight></codeline>
<codeline lineno="1080"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsName<sp/><sp/><sp/><sp/><sp/>(name),</highlight></codeline>
<codeline lineno="1081"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsNameMask<sp/>(nameMask),</highlight></codeline>
<codeline lineno="1082"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsIndices1<sp/>(indices1),</highlight></codeline>
<codeline lineno="1083"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsIndices2<sp/>(indices2),</highlight></codeline>
<codeline lineno="1084"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsExpr<sp/><sp/><sp/><sp/><sp/>(expr)</highlight></codeline>
<codeline lineno="1085"><highlight class="stringliteral">{}</highlight></codeline>
<codeline lineno="1086"><highlight class="stringliteral">TaQLNodeResult<sp/>TaQLUpdExprNodeRep::visit<sp/>(TaQLNodeVisitor&amp;<sp/>visitor)<sp/>const</highlight></codeline>
<codeline lineno="1087"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1088"><highlight class="stringliteral"><sp/><sp/>return<sp/>visitor.visitUpdExprNode<sp/>(*this);</highlight></codeline>
<codeline lineno="1089"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1090"><highlight class="stringliteral">void<sp/>TaQLUpdExprNodeRep::show<sp/>(std::ostream&amp;<sp/>os)<sp/>const</highlight></codeline>
<codeline lineno="1091"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1092"><highlight class="stringliteral"><sp/><sp/>if<sp/>(itsNameMask.empty())<sp/>{</highlight></codeline>
<codeline lineno="1093"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>itsName;</highlight></codeline>
<codeline lineno="1094"><highlight class="stringliteral"><sp/><sp/>}<sp/>else<sp/>{</highlight></codeline>
<codeline lineno="1095"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>&apos;</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&apos;<sp/>&lt;&lt;<sp/>itsName<sp/>&lt;&lt;<sp/>&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;<sp/>&lt;&lt;<sp/>itsNameMask<sp/>&lt;&lt;<sp/>&apos;</highlight><highlight class="normal">)</highlight><highlight class="stringliteral">&apos;;</highlight></codeline>
<codeline lineno="1096"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1097"><highlight class="stringliteral"><sp/><sp/>itsIndices1.show<sp/>(os);</highlight></codeline>
<codeline lineno="1098"><highlight class="stringliteral"><sp/><sp/>itsIndices2.show<sp/>(os);</highlight></codeline>
<codeline lineno="1099"><highlight class="stringliteral"><sp/><sp/>os<sp/>&lt;&lt;<sp/>&apos;</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&apos;;</highlight></codeline>
<codeline lineno="1100"><highlight class="stringliteral"><sp/><sp/>itsExpr.show<sp/>(os);</highlight></codeline>
<codeline lineno="1101"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1102"><highlight class="stringliteral">void<sp/>TaQLUpdExprNodeRep::save<sp/>(AipsIO&amp;<sp/>aio)<sp/>const</highlight></codeline>
<codeline lineno="1103"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1104"><highlight class="stringliteral"><sp/><sp/>aio<sp/>&lt;&lt;<sp/>itsName<sp/>&lt;&lt;<sp/>itsNameMask;</highlight></codeline>
<codeline lineno="1105"><highlight class="stringliteral"><sp/><sp/>itsIndices1.saveNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1106"><highlight class="stringliteral"><sp/><sp/>itsIndices2.saveNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1107"><highlight class="stringliteral"><sp/><sp/>itsExpr.saveNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1108"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1109"><highlight class="stringliteral">TaQLNode<sp/>TaQLUpdExprNodeRep::restore<sp/>(AipsIO&amp;<sp/>aio)</highlight></codeline>
<codeline lineno="1110"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1111"><highlight class="stringliteral"><sp/><sp/>String<sp/>name,<sp/>nameMask;</highlight></codeline>
<codeline lineno="1112"><highlight class="stringliteral"><sp/><sp/>aio<sp/>&gt;&gt;<sp/>name<sp/>&gt;&gt;<sp/>nameMask;</highlight></codeline>
<codeline lineno="1113"><highlight class="stringliteral"><sp/><sp/>TaQLMultiNode<sp/>indices1<sp/>=<sp/>TaQLNode::restoreMultiNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1114"><highlight class="stringliteral"><sp/><sp/>TaQLMultiNode<sp/>indices2<sp/>=<sp/>TaQLNode::restoreMultiNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1115"><highlight class="stringliteral"><sp/><sp/>TaQLNode<sp/>expr<sp/>=<sp/>TaQLNode::restoreNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1116"><highlight class="stringliteral"><sp/><sp/>return<sp/>new<sp/>TaQLUpdExprNodeRep<sp/>(name,<sp/>nameMask,<sp/>indices1,<sp/>indices2,<sp/>expr);</highlight></codeline>
<codeline lineno="1117"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1118"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1119"><highlight class="stringliteral">TaQLQueryNodeRep::TaQLQueryNodeRep<sp/>(int<sp/>nodeType)</highlight></codeline>
<codeline lineno="1120"><highlight class="stringliteral"><sp/><sp/>:<sp/>TaQLNodeRep<sp/><sp/><sp/><sp/>(nodeType),</highlight></codeline>
<codeline lineno="1121"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsBrackets<sp/><sp/><sp/><sp/>(False),</highlight></codeline>
<codeline lineno="1122"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsNoExecute<sp/><sp/><sp/>(False),</highlight></codeline>
<codeline lineno="1123"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsFromExecute<sp/>(False)</highlight></codeline>
<codeline lineno="1124"><highlight class="stringliteral">{}</highlight></codeline>
<codeline lineno="1125"><highlight class="stringliteral">void<sp/>TaQLQueryNodeRep::show<sp/>(std::ostream&amp;<sp/>os)<sp/>const</highlight></codeline>
<codeline lineno="1126"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1127"><highlight class="stringliteral"><sp/><sp/>if<sp/>(itsBrackets)<sp/>{</highlight></codeline>
<codeline lineno="1128"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>&apos;</highlight><highlight class="normal">[</highlight><highlight class="stringliteral">&apos;;</highlight></codeline>
<codeline lineno="1129"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1130"><highlight class="stringliteral"><sp/><sp/>showDerived<sp/>(os);</highlight></codeline>
<codeline lineno="1131"><highlight class="stringliteral"><sp/><sp/>if<sp/>(itsBrackets)<sp/>{</highlight></codeline>
<codeline lineno="1132"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>&apos;</highlight><highlight class="normal">]</highlight><highlight class="stringliteral">&apos;;</highlight></codeline>
<codeline lineno="1133"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1134"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1135"><highlight class="stringliteral">void<sp/>TaQLQueryNodeRep::saveSuper<sp/>(AipsIO&amp;<sp/>aio)<sp/>const</highlight></codeline>
<codeline lineno="1136"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1137"><highlight class="stringliteral"><sp/><sp/>aio<sp/>&lt;&lt;<sp/>itsBrackets<sp/>&lt;&lt;<sp/>itsNoExecute<sp/>&lt;&lt;<sp/>itsFromExecute;</highlight></codeline>
<codeline lineno="1138"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1139"><highlight class="stringliteral">void<sp/>TaQLQueryNodeRep::restoreSuper<sp/>(AipsIO&amp;<sp/>aio)</highlight></codeline>
<codeline lineno="1140"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1141"><highlight class="stringliteral"><sp/><sp/>aio<sp/>&gt;&gt;<sp/>itsBrackets<sp/>&gt;&gt;<sp/>itsNoExecute<sp/>&gt;&gt;<sp/>itsFromExecute;</highlight></codeline>
<codeline lineno="1142"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1143"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1144"><highlight class="stringliteral">TaQLSelectNodeRep::TaQLSelectNodeRep<sp/>(const<sp/>TaQLNode&amp;<sp/>columns,</highlight></codeline>
<codeline lineno="1145"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>TaQLMultiNode&amp;<sp/>with,</highlight></codeline>
<codeline lineno="1146"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>TaQLNode&amp;<sp/>where,</highlight></codeline>
<codeline lineno="1147"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>TaQLNode&amp;<sp/>groupby,</highlight></codeline>
<codeline lineno="1148"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>TaQLNode&amp;<sp/>having,</highlight></codeline>
<codeline lineno="1149"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>TaQLNode&amp;<sp/>sort,</highlight></codeline>
<codeline lineno="1150"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>TaQLNode&amp;<sp/>limitoff,</highlight></codeline>
<codeline lineno="1151"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>TaQLNode&amp;<sp/>giving,</highlight></codeline>
<codeline lineno="1152"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>TaQLMultiNode&amp;<sp/>dminfo)</highlight></codeline>
<codeline lineno="1153"><highlight class="stringliteral"><sp/><sp/>:<sp/>TaQLQueryNodeRep<sp/>(TaQLNode_Select),</highlight></codeline>
<codeline lineno="1154"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsColumns(columns),<sp/>itsWith(with),</highlight></codeline>
<codeline lineno="1155"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsWhere(where),<sp/>itsGroupby(groupby),<sp/>itsHaving(having),</highlight></codeline>
<codeline lineno="1156"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsSort(sort),<sp/>itsLimitOff(limitoff),<sp/>itsGiving(giving),</highlight></codeline>
<codeline lineno="1157"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsDMInfo(dminfo)</highlight></codeline>
<codeline lineno="1158"><highlight class="stringliteral">{}</highlight></codeline>
<codeline lineno="1159"><highlight class="stringliteral">TaQLSelectNodeRep::TaQLSelectNodeRep<sp/>(const<sp/>TaQLNode&amp;<sp/>columns,</highlight></codeline>
<codeline lineno="1160"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>TaQLMultiNode&amp;<sp/>with,</highlight></codeline>
<codeline lineno="1161"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>TaQLMultiNode&amp;<sp/>tables,</highlight></codeline>
<codeline lineno="1162"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>TaQLMultiNode&amp;<sp/>joins,</highlight></codeline>
<codeline lineno="1163"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>TaQLNode&amp;<sp/>where,</highlight></codeline>
<codeline lineno="1164"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>TaQLNode&amp;<sp/>groupby,</highlight></codeline>
<codeline lineno="1165"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>TaQLNode&amp;<sp/>having,</highlight></codeline>
<codeline lineno="1166"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>TaQLNode&amp;<sp/>sort,</highlight></codeline>
<codeline lineno="1167"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>TaQLNode&amp;<sp/>limitoff,</highlight></codeline>
<codeline lineno="1168"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>TaQLNode&amp;<sp/>giving,</highlight></codeline>
<codeline lineno="1169"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>TaQLMultiNode&amp;<sp/>dminfo)</highlight></codeline>
<codeline lineno="1170"><highlight class="stringliteral"><sp/><sp/>:<sp/>TaQLQueryNodeRep<sp/>(TaQLNode_Select),</highlight></codeline>
<codeline lineno="1171"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsColumns(columns),<sp/>itsWith(with),<sp/>itsTables(tables),</highlight></codeline>
<codeline lineno="1172"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsJoins(joins),<sp/>itsWhere(where),<sp/>itsGroupby(groupby),<sp/>itsHaving(having),</highlight></codeline>
<codeline lineno="1173"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsSort(sort),<sp/>itsLimitOff(limitoff),<sp/>itsGiving(giving),</highlight></codeline>
<codeline lineno="1174"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsDMInfo(dminfo)</highlight></codeline>
<codeline lineno="1175"><highlight class="stringliteral">{}</highlight></codeline>
<codeline lineno="1176"><highlight class="stringliteral">TaQLNodeResult<sp/>TaQLSelectNodeRep::visit<sp/>(TaQLNodeVisitor&amp;<sp/>visitor)<sp/>const</highlight></codeline>
<codeline lineno="1177"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1178"><highlight class="stringliteral"><sp/><sp/>return<sp/>visitor.visitSelectNode<sp/>(*this);</highlight></codeline>
<codeline lineno="1179"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1180"><highlight class="stringliteral">void<sp/>TaQLSelectNodeRep::showDerived<sp/>(std::ostream&amp;<sp/>os)<sp/>const</highlight></codeline>
<codeline lineno="1181"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1182"><highlight class="stringliteral"><sp/><sp/>showWithTables<sp/>(os,<sp/>itsWith);</highlight></codeline>
<codeline lineno="1183"><highlight class="stringliteral"><sp/><sp/>os<sp/>&lt;&lt;<sp/>&quot;SELECT&quot;;</highlight></codeline>
<codeline lineno="1184"><highlight class="stringliteral"><sp/><sp/>itsColumns.show<sp/>(os);</highlight></codeline>
<codeline lineno="1185"><highlight class="stringliteral"><sp/><sp/>if<sp/>(itsTables.isValid())<sp/>{</highlight></codeline>
<codeline lineno="1186"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>&quot;<sp/>FROM<sp/>&quot;;</highlight></codeline>
<codeline lineno="1187"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsTables.show<sp/>(os);</highlight></codeline>
<codeline lineno="1188"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1189"><highlight class="stringliteral"><sp/><sp/>itsJoins.show<sp/>(os);</highlight></codeline>
<codeline lineno="1190"><highlight class="stringliteral"><sp/><sp/>if<sp/>(itsWhere.isValid())<sp/>{</highlight></codeline>
<codeline lineno="1191"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>&quot;<sp/>WHERE<sp/>&quot;;</highlight></codeline>
<codeline lineno="1192"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsWhere.show<sp/>(os);</highlight></codeline>
<codeline lineno="1193"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1194"><highlight class="stringliteral"><sp/><sp/>if<sp/>(itsGroupby.isValid())<sp/>{</highlight></codeline>
<codeline lineno="1195"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsGroupby.show<sp/>(os);</highlight></codeline>
<codeline lineno="1196"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1197"><highlight class="stringliteral"><sp/><sp/>if<sp/>(itsHaving.isValid())<sp/>{</highlight></codeline>
<codeline lineno="1198"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>&quot;<sp/>HAVING<sp/>&quot;;</highlight></codeline>
<codeline lineno="1199"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsHaving.show<sp/>(os);</highlight></codeline>
<codeline lineno="1200"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1201"><highlight class="stringliteral"><sp/><sp/>itsSort.show<sp/>(os);</highlight></codeline>
<codeline lineno="1202"><highlight class="stringliteral"><sp/><sp/>itsLimitOff.show<sp/>(os);</highlight></codeline>
<codeline lineno="1203"><highlight class="stringliteral"><sp/><sp/>if<sp/>(itsGiving.isValid())<sp/>{</highlight></codeline>
<codeline lineno="1204"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>&quot;<sp/>GIVING<sp/>&quot;;</highlight></codeline>
<codeline lineno="1205"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsGiving.show<sp/>(os);</highlight></codeline>
<codeline lineno="1206"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1207"><highlight class="stringliteral"><sp/><sp/>if<sp/>(itsDMInfo.isValid())<sp/>{</highlight></codeline>
<codeline lineno="1208"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>&quot;<sp/>DMINFO<sp/>&quot;;</highlight></codeline>
<codeline lineno="1209"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsDMInfo.show<sp/>(os);</highlight></codeline>
<codeline lineno="1210"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1211"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1212"><highlight class="stringliteral">void<sp/>TaQLSelectNodeRep::save<sp/>(AipsIO&amp;<sp/>aio)<sp/>const</highlight></codeline>
<codeline lineno="1213"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1214"><highlight class="stringliteral"><sp/><sp/>itsColumns.saveNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1215"><highlight class="stringliteral"><sp/><sp/>itsWith.saveNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1216"><highlight class="stringliteral"><sp/><sp/>itsTables.saveNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1217"><highlight class="stringliteral"><sp/><sp/>itsJoins.saveNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1218"><highlight class="stringliteral"><sp/><sp/>itsWhere.saveNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1219"><highlight class="stringliteral"><sp/><sp/>itsGroupby.saveNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1220"><highlight class="stringliteral"><sp/><sp/>itsHaving.saveNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1221"><highlight class="stringliteral"><sp/><sp/>itsSort.saveNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1222"><highlight class="stringliteral"><sp/><sp/>itsLimitOff.saveNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1223"><highlight class="stringliteral"><sp/><sp/>itsGiving.saveNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1224"><highlight class="stringliteral"><sp/><sp/>itsDMInfo.saveNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1225"><highlight class="stringliteral"><sp/><sp/>saveSuper<sp/>(aio);</highlight></codeline>
<codeline lineno="1226"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1227"><highlight class="stringliteral">TaQLNode<sp/>TaQLSelectNodeRep::restore<sp/>(AipsIO&amp;<sp/>aio)</highlight></codeline>
<codeline lineno="1228"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1229"><highlight class="stringliteral"><sp/><sp/>TaQLNode<sp/>columns<sp/>=<sp/>TaQLNode::restoreNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1230"><highlight class="stringliteral"><sp/><sp/>TaQLMultiNode<sp/>with<sp/>=<sp/>TaQLNode::restoreMultiNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1231"><highlight class="stringliteral"><sp/><sp/>TaQLMultiNode<sp/>tables<sp/>=<sp/>TaQLNode::restoreMultiNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1232"><highlight class="stringliteral"><sp/><sp/>TaQLMultiNode<sp/>joins<sp/>=<sp/>TaQLNode::restoreMultiNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1233"><highlight class="stringliteral"><sp/><sp/>TaQLNode<sp/>where<sp/>=<sp/>TaQLNode::restoreNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1234"><highlight class="stringliteral"><sp/><sp/>TaQLNode<sp/>groupby<sp/>=<sp/>TaQLNode::restoreNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1235"><highlight class="stringliteral"><sp/><sp/>TaQLNode<sp/>having<sp/>=<sp/>TaQLNode::restoreNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1236"><highlight class="stringliteral"><sp/><sp/>TaQLNode<sp/>sort<sp/>=<sp/>TaQLNode::restoreNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1237"><highlight class="stringliteral"><sp/><sp/>TaQLNode<sp/>limitoff<sp/>=<sp/>TaQLNode::restoreNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1238"><highlight class="stringliteral"><sp/><sp/>TaQLNode<sp/>giving<sp/>=<sp/>TaQLNode::restoreNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1239"><highlight class="stringliteral"><sp/><sp/>TaQLMultiNode<sp/>dminfo<sp/>=<sp/>TaQLNode::restoreMultiNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1240"><highlight class="stringliteral"><sp/><sp/>std::unique_ptr&lt;TaQLSelectNodeRep&gt;<sp/>node</highlight></codeline>
<codeline lineno="1241"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>(new<sp/>TaQLSelectNodeRep<sp/>(columns,<sp/>with,<sp/>tables,<sp/>joins,</highlight></codeline>
<codeline lineno="1242"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>where,<sp/>groupby,<sp/>having,</highlight></codeline>
<codeline lineno="1243"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sort,<sp/>limitoff,<sp/>giving,<sp/>dminfo));</highlight></codeline>
<codeline lineno="1244"><highlight class="stringliteral"><sp/><sp/>node-&gt;restoreSuper<sp/>(aio);</highlight></codeline>
<codeline lineno="1245"><highlight class="stringliteral"><sp/><sp/>return<sp/>node.release();</highlight></codeline>
<codeline lineno="1246"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1247"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1248"><highlight class="stringliteral">TaQLCountNodeRep::TaQLCountNodeRep<sp/>(const<sp/>TaQLMultiNode&amp;<sp/>with,</highlight></codeline>
<codeline lineno="1249"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>TaQLNode&amp;<sp/>columns,</highlight></codeline>
<codeline lineno="1250"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>TaQLMultiNode&amp;<sp/>tables,</highlight></codeline>
<codeline lineno="1251"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>TaQLNode&amp;<sp/>where)</highlight></codeline>
<codeline lineno="1252"><highlight class="stringliteral"><sp/><sp/>:<sp/>TaQLQueryNodeRep<sp/>(TaQLNode_Count),</highlight></codeline>
<codeline lineno="1253"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsWith(with),<sp/>itsColumns(columns),<sp/>itsTables(tables),<sp/>itsWhere(where)</highlight></codeline>
<codeline lineno="1254"><highlight class="stringliteral">{}</highlight></codeline>
<codeline lineno="1255"><highlight class="stringliteral">TaQLNodeResult<sp/>TaQLCountNodeRep::visit<sp/>(TaQLNodeVisitor&amp;<sp/>visitor)<sp/>const</highlight></codeline>
<codeline lineno="1256"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1257"><highlight class="stringliteral"><sp/><sp/>return<sp/>visitor.visitCountNode<sp/>(*this);</highlight></codeline>
<codeline lineno="1258"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1259"><highlight class="stringliteral">void<sp/>TaQLCountNodeRep::showDerived<sp/>(std::ostream&amp;<sp/>os)<sp/>const</highlight></codeline>
<codeline lineno="1260"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1261"><highlight class="stringliteral"><sp/><sp/>showWithTables<sp/>(os,<sp/>itsWith);</highlight></codeline>
<codeline lineno="1262"><highlight class="stringliteral"><sp/><sp/>os<sp/>&lt;&lt;<sp/>&quot;COUNT<sp/>&quot;;</highlight></codeline>
<codeline lineno="1263"><highlight class="stringliteral"><sp/><sp/>itsColumns.show<sp/>(os);</highlight></codeline>
<codeline lineno="1264"><highlight class="stringliteral"><sp/><sp/>os<sp/>&lt;&lt;<sp/>&quot;<sp/>FROM<sp/>&quot;;</highlight></codeline>
<codeline lineno="1265"><highlight class="stringliteral"><sp/><sp/>itsTables.show<sp/>(os);</highlight></codeline>
<codeline lineno="1266"><highlight class="stringliteral"><sp/><sp/>if<sp/>(itsWhere.isValid())<sp/>{</highlight></codeline>
<codeline lineno="1267"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>&quot;<sp/>WHERE<sp/>&quot;;</highlight></codeline>
<codeline lineno="1268"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsWhere.show<sp/>(os);</highlight></codeline>
<codeline lineno="1269"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1270"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1271"><highlight class="stringliteral">void<sp/>TaQLCountNodeRep::save<sp/>(AipsIO&amp;<sp/>aio)<sp/>const</highlight></codeline>
<codeline lineno="1272"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1273"><highlight class="stringliteral"><sp/><sp/>itsWith.saveNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1274"><highlight class="stringliteral"><sp/><sp/>itsColumns.saveNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1275"><highlight class="stringliteral"><sp/><sp/>itsTables.saveNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1276"><highlight class="stringliteral"><sp/><sp/>itsWhere.saveNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1277"><highlight class="stringliteral"><sp/><sp/>saveSuper<sp/>(aio);</highlight></codeline>
<codeline lineno="1278"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1279"><highlight class="stringliteral">TaQLNode<sp/>TaQLCountNodeRep::restore<sp/>(AipsIO&amp;<sp/>aio)</highlight></codeline>
<codeline lineno="1280"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1281"><highlight class="stringliteral"><sp/><sp/>TaQLMultiNode<sp/>with<sp/>=<sp/>TaQLNode::restoreMultiNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1282"><highlight class="stringliteral"><sp/><sp/>TaQLNode<sp/>columns<sp/>=<sp/>TaQLNode::restoreNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1283"><highlight class="stringliteral"><sp/><sp/>TaQLMultiNode<sp/>tables<sp/>=<sp/>TaQLNode::restoreMultiNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1284"><highlight class="stringliteral"><sp/><sp/>TaQLNode<sp/>where<sp/>=<sp/>TaQLNode::restoreNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1285"><highlight class="stringliteral"><sp/><sp/>std::unique_ptr&lt;TaQLCountNodeRep&gt;<sp/>node</highlight></codeline>
<codeline lineno="1286"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>(new<sp/>TaQLCountNodeRep<sp/>(with,<sp/>columns,<sp/>tables,<sp/>where));</highlight></codeline>
<codeline lineno="1287"><highlight class="stringliteral"><sp/><sp/>node-&gt;restoreSuper<sp/>(aio);</highlight></codeline>
<codeline lineno="1288"><highlight class="stringliteral"><sp/><sp/>return<sp/>node.release();</highlight></codeline>
<codeline lineno="1289"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1290"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1291"><highlight class="stringliteral">TaQLUpdateNodeRep::TaQLUpdateNodeRep<sp/>(const<sp/>TaQLMultiNode&amp;<sp/>with,</highlight></codeline>
<codeline lineno="1292"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>TaQLMultiNode&amp;<sp/>tables,</highlight></codeline>
<codeline lineno="1293"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>TaQLMultiNode&amp;<sp/>update,</highlight></codeline>
<codeline lineno="1294"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>TaQLMultiNode&amp;<sp/>from,</highlight></codeline>
<codeline lineno="1295"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>TaQLNode&amp;<sp/>where,</highlight></codeline>
<codeline lineno="1296"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>TaQLNode&amp;<sp/>sort,</highlight></codeline>
<codeline lineno="1297"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>TaQLNode&amp;<sp/>limitoff)</highlight></codeline>
<codeline lineno="1298"><highlight class="stringliteral"><sp/><sp/>:<sp/>TaQLNodeRep<sp/>(TaQLNode_Update),</highlight></codeline>
<codeline lineno="1299"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsWith<sp/><sp/><sp/><sp/><sp/>(with),</highlight></codeline>
<codeline lineno="1300"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsTables<sp/><sp/><sp/>(tables),</highlight></codeline>
<codeline lineno="1301"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsUpdate<sp/><sp/><sp/>(update),</highlight></codeline>
<codeline lineno="1302"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsFrom<sp/><sp/><sp/><sp/><sp/>(from),</highlight></codeline>
<codeline lineno="1303"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsWhere<sp/><sp/><sp/><sp/>(where),</highlight></codeline>
<codeline lineno="1304"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsSort<sp/><sp/><sp/><sp/><sp/>(sort),</highlight></codeline>
<codeline lineno="1305"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsLimitOff<sp/>(limitoff)</highlight></codeline>
<codeline lineno="1306"><highlight class="stringliteral">{}</highlight></codeline>
<codeline lineno="1307"><highlight class="stringliteral">TaQLNodeResult<sp/>TaQLUpdateNodeRep::visit<sp/>(TaQLNodeVisitor&amp;<sp/>visitor)<sp/>const</highlight></codeline>
<codeline lineno="1308"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1309"><highlight class="stringliteral"><sp/><sp/>return<sp/>visitor.visitUpdateNode<sp/>(*this);</highlight></codeline>
<codeline lineno="1310"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1311"><highlight class="stringliteral">void<sp/>TaQLUpdateNodeRep::show<sp/>(std::ostream&amp;<sp/>os)<sp/>const</highlight></codeline>
<codeline lineno="1312"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1313"><highlight class="stringliteral"><sp/><sp/>showWithTables<sp/>(os,<sp/>itsWith);</highlight></codeline>
<codeline lineno="1314"><highlight class="stringliteral"><sp/><sp/>os<sp/>&lt;&lt;<sp/>&quot;UPDATE<sp/>&quot;;</highlight></codeline>
<codeline lineno="1315"><highlight class="stringliteral"><sp/><sp/>itsTables.show<sp/>(os);</highlight></codeline>
<codeline lineno="1316"><highlight class="stringliteral"><sp/><sp/>os<sp/>&lt;&lt;<sp/>&quot;<sp/>SET<sp/>&quot;;</highlight></codeline>
<codeline lineno="1317"><highlight class="stringliteral"><sp/><sp/>itsUpdate.show<sp/>(os);</highlight></codeline>
<codeline lineno="1318"><highlight class="stringliteral"><sp/><sp/>if<sp/>(itsFrom.isValid())<sp/>{</highlight></codeline>
<codeline lineno="1319"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>&quot;<sp/>FROM<sp/>&quot;;</highlight></codeline>
<codeline lineno="1320"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsFrom.show<sp/>(os);</highlight></codeline>
<codeline lineno="1321"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1322"><highlight class="stringliteral"><sp/><sp/>if<sp/>(itsWhere.isValid())<sp/>{</highlight></codeline>
<codeline lineno="1323"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>&quot;<sp/>WHERE<sp/>&quot;;</highlight></codeline>
<codeline lineno="1324"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsWhere.show<sp/>(os);</highlight></codeline>
<codeline lineno="1325"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1326"><highlight class="stringliteral"><sp/><sp/>itsSort.show<sp/>(os);</highlight></codeline>
<codeline lineno="1327"><highlight class="stringliteral"><sp/><sp/>itsLimitOff.show<sp/>(os);</highlight></codeline>
<codeline lineno="1328"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1329"><highlight class="stringliteral">void<sp/>TaQLUpdateNodeRep::save<sp/>(AipsIO&amp;<sp/>aio)<sp/>const</highlight></codeline>
<codeline lineno="1330"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1331"><highlight class="stringliteral"><sp/><sp/>itsWith.saveNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1332"><highlight class="stringliteral"><sp/><sp/>itsTables.saveNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1333"><highlight class="stringliteral"><sp/><sp/>itsUpdate.saveNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1334"><highlight class="stringliteral"><sp/><sp/>itsFrom.saveNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1335"><highlight class="stringliteral"><sp/><sp/>itsWhere.saveNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1336"><highlight class="stringliteral"><sp/><sp/>itsSort.saveNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1337"><highlight class="stringliteral"><sp/><sp/>itsLimitOff.saveNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1338"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1339"><highlight class="stringliteral">TaQLNode<sp/>TaQLUpdateNodeRep::restore<sp/>(AipsIO&amp;<sp/>aio)</highlight></codeline>
<codeline lineno="1340"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1341"><highlight class="stringliteral"><sp/><sp/>TaQLMultiNode<sp/>with<sp/>=<sp/>TaQLNode::restoreMultiNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1342"><highlight class="stringliteral"><sp/><sp/>TaQLMultiNode<sp/>tables<sp/>=<sp/>TaQLNode::restoreMultiNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1343"><highlight class="stringliteral"><sp/><sp/>TaQLMultiNode<sp/>update<sp/>=<sp/>TaQLNode::restoreMultiNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1344"><highlight class="stringliteral"><sp/><sp/>TaQLMultiNode<sp/>from<sp/>=<sp/>TaQLNode::restoreMultiNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1345"><highlight class="stringliteral"><sp/><sp/>TaQLNode<sp/>where<sp/>=<sp/>TaQLNode::restoreNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1346"><highlight class="stringliteral"><sp/><sp/>TaQLNode<sp/>sort<sp/>=<sp/>TaQLNode::restoreNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1347"><highlight class="stringliteral"><sp/><sp/>TaQLNode<sp/>limitoff<sp/>=<sp/>TaQLNode::restoreNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1348"><highlight class="stringliteral"><sp/><sp/>return<sp/>new<sp/>TaQLUpdateNodeRep<sp/>(with,<sp/>tables,<sp/>update,<sp/>from,<sp/>where,<sp/>sort,<sp/>limitoff);</highlight></codeline>
<codeline lineno="1349"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1350"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1351"><highlight class="stringliteral">TaQLInsertNodeRep::TaQLInsertNodeRep<sp/>(const<sp/>TaQLMultiNode&amp;<sp/>with,</highlight></codeline>
<codeline lineno="1352"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>TaQLMultiNode&amp;<sp/>tables,</highlight></codeline>
<codeline lineno="1353"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>TaQLMultiNode&amp;<sp/>columns,</highlight></codeline>
<codeline lineno="1354"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>TaQLNode&amp;<sp/>values,</highlight></codeline>
<codeline lineno="1355"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>TaQLNode&amp;<sp/>limit)</highlight></codeline>
<codeline lineno="1356"><highlight class="stringliteral"><sp/><sp/>:<sp/>TaQLNodeRep<sp/>(TaQLNode_Insert),</highlight></codeline>
<codeline lineno="1357"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsWith<sp/><sp/><sp/><sp/>(with),</highlight></codeline>
<codeline lineno="1358"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsTables<sp/><sp/>(tables),</highlight></codeline>
<codeline lineno="1359"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsColumns<sp/>(columns),</highlight></codeline>
<codeline lineno="1360"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsValues<sp/><sp/>(values),</highlight></codeline>
<codeline lineno="1361"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsLimit<sp/><sp/><sp/>(limit)</highlight></codeline>
<codeline lineno="1362"><highlight class="stringliteral">{}</highlight></codeline>
<codeline lineno="1363"><highlight class="stringliteral">TaQLInsertNodeRep::TaQLInsertNodeRep<sp/>(const<sp/>TaQLMultiNode&amp;<sp/>with,</highlight></codeline>
<codeline lineno="1364"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>TaQLMultiNode&amp;<sp/>tables,</highlight></codeline>
<codeline lineno="1365"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>TaQLMultiNode&amp;<sp/>insert)</highlight></codeline>
<codeline lineno="1366"><highlight class="stringliteral"><sp/><sp/>:<sp/>TaQLNodeRep<sp/>(TaQLNode_Insert),</highlight></codeline>
<codeline lineno="1367"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsWith<sp/><sp/><sp/><sp/>(with),</highlight></codeline>
<codeline lineno="1368"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsTables<sp/><sp/>(tables),</highlight></codeline>
<codeline lineno="1369"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsColumns<sp/>(False)</highlight></codeline>
<codeline lineno="1370"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1371"><highlight class="stringliteral"><sp/><sp/>//<sp/>Convert<sp/>the<sp/>list<sp/>of<sp/>column=value<sp/>expressions<sp/>like</highlight></codeline>
<codeline lineno="1372"><highlight class="stringliteral"><sp/><sp/>//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SET<sp/>col1=val1,<sp/>col2=val2</highlight></codeline>
<codeline lineno="1373"><highlight class="stringliteral"><sp/><sp/>//<sp/>to<sp/>a<sp/>list<sp/>of<sp/>columns<sp/>and<sp/>a<sp/>list<sp/>of<sp/>values<sp/>like</highlight></codeline>
<codeline lineno="1374"><highlight class="stringliteral"><sp/><sp/>//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[col1,col2]<sp/>VALUES<sp/>[val1,val2].</highlight></codeline>
<codeline lineno="1375"><highlight class="stringliteral"><sp/><sp/>TaQLMultiNode<sp/>values(False);</highlight></codeline>
<codeline lineno="1376"><highlight class="stringliteral"><sp/><sp/>values.setPPFix<sp/>(&quot;VALUES<sp/>[&quot;,<sp/>&quot;]&quot;);</highlight></codeline>
<codeline lineno="1377"><highlight class="stringliteral"><sp/><sp/>//<sp/>The<sp/>nodes<sp/>in<sp/>the<sp/>list<sp/>are<sp/>of<sp/>type<sp/>TaQLUpdExprNodeRep.</highlight></codeline>
<codeline lineno="1378"><highlight class="stringliteral"><sp/><sp/>const<sp/>std::vector&lt;TaQLNode&gt;&amp;<sp/>nodes<sp/>=<sp/>insert.getMultiRep()-&gt;getNodes();</highlight></codeline>
<codeline lineno="1379"><highlight class="stringliteral"><sp/><sp/>for<sp/>(uInt<sp/>i=0;<sp/>i&lt;nodes.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1380"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>const<sp/>TaQLUpdExprNodeRep*<sp/>rep<sp/>=<sp/>dynamic_cast&lt;const<sp/>TaQLUpdExprNodeRep*&gt;</highlight></codeline>
<codeline lineno="1381"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>(nodes[i].getRep());</highlight></codeline>
<codeline lineno="1382"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>AlwaysAssert<sp/>(rep,<sp/>AipsError);</highlight></codeline>
<codeline lineno="1383"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>if<sp/>(rep-&gt;itsIndices1.isValid()<sp/><sp/>||<sp/><sp/>rep-&gt;itsIndices2.isValid())<sp/>{</highlight></codeline>
<codeline lineno="1384"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>throw<sp/>TableInvExpr<sp/>(&quot;Column<sp/>indices<sp/>or<sp/>masks<sp/>cannot<sp/>be<sp/>given<sp/>in<sp/>an<sp/>&quot;</highlight></codeline>
<codeline lineno="1385"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;INSERT<sp/>command&quot;);</highlight></codeline>
<codeline lineno="1386"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1387"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>//<sp/>Add<sp/>the<sp/>column<sp/>name<sp/>and<sp/>value<sp/>expression.</highlight></codeline>
<codeline lineno="1388"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsColumns.add<sp/>(new<sp/>TaQLKeyColNodeRep<sp/>(rep-&gt;itsName));</highlight></codeline>
<codeline lineno="1389"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>values.add<sp/>(rep-&gt;itsExpr);</highlight></codeline>
<codeline lineno="1390"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1391"><highlight class="stringliteral"><sp/><sp/>TaQLMultiNode<sp/>valuesList(False);</highlight></codeline>
<codeline lineno="1392"><highlight class="stringliteral"><sp/><sp/>valuesList.add<sp/>(values);</highlight></codeline>
<codeline lineno="1393"><highlight class="stringliteral"><sp/><sp/>itsValues<sp/>=<sp/>valuesList;</highlight></codeline>
<codeline lineno="1394"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1395"><highlight class="stringliteral">TaQLNodeResult<sp/>TaQLInsertNodeRep::visit<sp/>(TaQLNodeVisitor&amp;<sp/>visitor)<sp/>const</highlight></codeline>
<codeline lineno="1396"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1397"><highlight class="stringliteral"><sp/><sp/>return<sp/>visitor.visitInsertNode<sp/>(*this);</highlight></codeline>
<codeline lineno="1398"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1399"><highlight class="stringliteral">void<sp/>TaQLInsertNodeRep::show<sp/>(std::ostream&amp;<sp/>os)<sp/>const</highlight></codeline>
<codeline lineno="1400"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1401"><highlight class="stringliteral"><sp/><sp/>showWithTables<sp/>(os,<sp/>itsWith);</highlight></codeline>
<codeline lineno="1402"><highlight class="stringliteral"><sp/><sp/>os<sp/>&lt;&lt;<sp/>&quot;INSERT&quot;;</highlight></codeline>
<codeline lineno="1403"><highlight class="stringliteral"><sp/><sp/>if<sp/>(itsLimit.isValid())<sp/>{</highlight></codeline>
<codeline lineno="1404"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>&quot;<sp/>LIMIT<sp/>&quot;;</highlight></codeline>
<codeline lineno="1405"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsLimit.show<sp/>(os);</highlight></codeline>
<codeline lineno="1406"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1407"><highlight class="stringliteral"><sp/><sp/>os<sp/>&lt;&lt;<sp/>&quot;<sp/>INTO<sp/>&quot;;</highlight></codeline>
<codeline lineno="1408"><highlight class="stringliteral"><sp/><sp/>itsTables.show<sp/>(os);</highlight></codeline>
<codeline lineno="1409"><highlight class="stringliteral"><sp/><sp/>if<sp/>(itsColumns.isValid())<sp/>{</highlight></codeline>
<codeline lineno="1410"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>&quot;<sp/>[&quot;;</highlight></codeline>
<codeline lineno="1411"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsColumns.show<sp/>(os);</highlight></codeline>
<codeline lineno="1412"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>&apos;</highlight><highlight class="normal">]</highlight><highlight class="stringliteral">&apos;;</highlight></codeline>
<codeline lineno="1413"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1414"><highlight class="stringliteral"><sp/><sp/>os<sp/>&lt;&lt;<sp/>&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;;</highlight></codeline>
<codeline lineno="1415"><highlight class="stringliteral"><sp/><sp/>itsValues.show<sp/>(os);</highlight></codeline>
<codeline lineno="1416"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1417"><highlight class="stringliteral">void<sp/>TaQLInsertNodeRep::save<sp/>(AipsIO&amp;<sp/>aio)<sp/>const</highlight></codeline>
<codeline lineno="1418"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1419"><highlight class="stringliteral"><sp/><sp/>itsWith.saveNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1420"><highlight class="stringliteral"><sp/><sp/>itsTables.saveNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1421"><highlight class="stringliteral"><sp/><sp/>itsColumns.saveNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1422"><highlight class="stringliteral"><sp/><sp/>itsValues.saveNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1423"><highlight class="stringliteral"><sp/><sp/>itsLimit.saveNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1424"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1425"><highlight class="stringliteral">TaQLNode<sp/>TaQLInsertNodeRep::restore<sp/>(AipsIO&amp;<sp/>aio)</highlight></codeline>
<codeline lineno="1426"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1427"><highlight class="stringliteral"><sp/><sp/>TaQLMultiNode<sp/>with<sp/>=<sp/>TaQLNode::restoreMultiNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1428"><highlight class="stringliteral"><sp/><sp/>TaQLMultiNode<sp/>tables<sp/>=<sp/>TaQLNode::restoreMultiNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1429"><highlight class="stringliteral"><sp/><sp/>TaQLMultiNode<sp/>columns<sp/>=<sp/>TaQLNode::restoreMultiNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1430"><highlight class="stringliteral"><sp/><sp/>TaQLNode<sp/>values<sp/>=<sp/>TaQLNode::restoreNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1431"><highlight class="stringliteral"><sp/><sp/>TaQLNode<sp/>limit<sp/><sp/>=<sp/>TaQLNode::restoreNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1432"><highlight class="stringliteral"><sp/><sp/>return<sp/>new<sp/>TaQLInsertNodeRep<sp/>(with,<sp/>tables,<sp/>columns,<sp/>values,<sp/>limit);</highlight></codeline>
<codeline lineno="1433"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1434"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1435"><highlight class="stringliteral">TaQLDeleteNodeRep::TaQLDeleteNodeRep<sp/>(const<sp/>TaQLMultiNode&amp;<sp/>with,</highlight></codeline>
<codeline lineno="1436"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>TaQLMultiNode&amp;<sp/>tables,</highlight></codeline>
<codeline lineno="1437"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>TaQLNode&amp;<sp/>where,</highlight></codeline>
<codeline lineno="1438"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>TaQLNode&amp;<sp/>sort,</highlight></codeline>
<codeline lineno="1439"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>TaQLNode&amp;<sp/>limitoff)</highlight></codeline>
<codeline lineno="1440"><highlight class="stringliteral"><sp/><sp/>:<sp/>TaQLNodeRep<sp/>(TaQLNode_Delete),</highlight></codeline>
<codeline lineno="1441"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsWith<sp/><sp/><sp/><sp/><sp/>(with),</highlight></codeline>
<codeline lineno="1442"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsTables<sp/><sp/><sp/>(tables),</highlight></codeline>
<codeline lineno="1443"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsWhere<sp/><sp/><sp/><sp/>(where),</highlight></codeline>
<codeline lineno="1444"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsSort<sp/><sp/><sp/><sp/><sp/>(sort),</highlight></codeline>
<codeline lineno="1445"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsLimitOff<sp/>(limitoff)</highlight></codeline>
<codeline lineno="1446"><highlight class="stringliteral">{}</highlight></codeline>
<codeline lineno="1447"><highlight class="stringliteral">TaQLNodeResult<sp/>TaQLDeleteNodeRep::visit<sp/>(TaQLNodeVisitor&amp;<sp/>visitor)<sp/>const</highlight></codeline>
<codeline lineno="1448"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1449"><highlight class="stringliteral"><sp/><sp/>return<sp/>visitor.visitDeleteNode<sp/>(*this);</highlight></codeline>
<codeline lineno="1450"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1451"><highlight class="stringliteral">void<sp/>TaQLDeleteNodeRep::show<sp/>(std::ostream&amp;<sp/>os)<sp/>const</highlight></codeline>
<codeline lineno="1452"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1453"><highlight class="stringliteral"><sp/><sp/>showWithTables<sp/>(os,<sp/>itsWith);</highlight></codeline>
<codeline lineno="1454"><highlight class="stringliteral"><sp/><sp/>os<sp/>&lt;&lt;<sp/>&quot;DELETE<sp/>FROM<sp/>&quot;;</highlight></codeline>
<codeline lineno="1455"><highlight class="stringliteral"><sp/><sp/>itsTables.show<sp/>(os);</highlight></codeline>
<codeline lineno="1456"><highlight class="stringliteral"><sp/><sp/>if<sp/>(itsWhere.isValid())<sp/>{</highlight></codeline>
<codeline lineno="1457"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>&quot;<sp/>WHERE<sp/>&quot;;</highlight></codeline>
<codeline lineno="1458"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsWhere.show<sp/>(os);</highlight></codeline>
<codeline lineno="1459"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1460"><highlight class="stringliteral"><sp/><sp/>itsSort.show<sp/>(os);</highlight></codeline>
<codeline lineno="1461"><highlight class="stringliteral"><sp/><sp/>itsLimitOff.show<sp/>(os);</highlight></codeline>
<codeline lineno="1462"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1463"><highlight class="stringliteral">void<sp/>TaQLDeleteNodeRep::save<sp/>(AipsIO&amp;<sp/>aio)<sp/>const</highlight></codeline>
<codeline lineno="1464"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1465"><highlight class="stringliteral"><sp/><sp/>itsWith.saveNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1466"><highlight class="stringliteral"><sp/><sp/>itsTables.saveNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1467"><highlight class="stringliteral"><sp/><sp/>itsWhere.saveNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1468"><highlight class="stringliteral"><sp/><sp/>itsSort.saveNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1469"><highlight class="stringliteral"><sp/><sp/>itsLimitOff.saveNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1470"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1471"><highlight class="stringliteral">TaQLNode<sp/>TaQLDeleteNodeRep::restore<sp/>(AipsIO&amp;<sp/>aio)</highlight></codeline>
<codeline lineno="1472"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1473"><highlight class="stringliteral"><sp/><sp/>TaQLMultiNode<sp/>with<sp/>=<sp/>TaQLNode::restoreMultiNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1474"><highlight class="stringliteral"><sp/><sp/>TaQLMultiNode<sp/>tables<sp/>=<sp/>TaQLNode::restoreMultiNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1475"><highlight class="stringliteral"><sp/><sp/>TaQLNode<sp/>where<sp/>=<sp/>TaQLNode::restoreNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1476"><highlight class="stringliteral"><sp/><sp/>TaQLNode<sp/>sort<sp/>=<sp/>TaQLNode::restoreNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1477"><highlight class="stringliteral"><sp/><sp/>TaQLNode<sp/>limitoff<sp/>=<sp/>TaQLNode::restoreNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1478"><highlight class="stringliteral"><sp/><sp/>return<sp/>new<sp/>TaQLDeleteNodeRep<sp/>(with,<sp/>tables,<sp/>where,<sp/>sort,<sp/>limitoff);</highlight></codeline>
<codeline lineno="1479"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1480"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1481"><highlight class="stringliteral">TaQLCalcNodeRep::TaQLCalcNodeRep<sp/>(const<sp/>TaQLMultiNode&amp;<sp/>with,</highlight></codeline>
<codeline lineno="1482"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>TaQLMultiNode&amp;<sp/>tables,</highlight></codeline>
<codeline lineno="1483"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>TaQLNode&amp;<sp/>expr,</highlight></codeline>
<codeline lineno="1484"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>TaQLNode&amp;<sp/>where,</highlight></codeline>
<codeline lineno="1485"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>TaQLNode&amp;<sp/>sort,</highlight></codeline>
<codeline lineno="1486"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>TaQLNode&amp;<sp/>limitoff)</highlight></codeline>
<codeline lineno="1487"><highlight class="stringliteral"><sp/><sp/>:<sp/>TaQLNodeRep<sp/>(TaQLNode_Calc),</highlight></codeline>
<codeline lineno="1488"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsWith<sp/><sp/><sp/><sp/><sp/>(with),</highlight></codeline>
<codeline lineno="1489"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsTables<sp/><sp/><sp/>(tables),</highlight></codeline>
<codeline lineno="1490"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsExpr<sp/><sp/><sp/><sp/><sp/>(expr),</highlight></codeline>
<codeline lineno="1491"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsWhere<sp/><sp/><sp/><sp/>(where),</highlight></codeline>
<codeline lineno="1492"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsSort<sp/><sp/><sp/><sp/><sp/>(sort),</highlight></codeline>
<codeline lineno="1493"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsLimitOff<sp/>(limitoff)</highlight></codeline>
<codeline lineno="1494"><highlight class="stringliteral">{}</highlight></codeline>
<codeline lineno="1495"><highlight class="stringliteral">TaQLNodeResult<sp/>TaQLCalcNodeRep::visit<sp/>(TaQLNodeVisitor&amp;<sp/>visitor)<sp/>const</highlight></codeline>
<codeline lineno="1496"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1497"><highlight class="stringliteral"><sp/><sp/>return<sp/>visitor.visitCalcNode<sp/>(*this);</highlight></codeline>
<codeline lineno="1498"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1499"><highlight class="stringliteral">void<sp/>TaQLCalcNodeRep::show<sp/>(std::ostream&amp;<sp/>os)<sp/>const</highlight></codeline>
<codeline lineno="1500"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1501"><highlight class="stringliteral"><sp/><sp/>showWithTables<sp/>(os,<sp/>itsWith);</highlight></codeline>
<codeline lineno="1502"><highlight class="stringliteral"><sp/><sp/>os<sp/>&lt;&lt;<sp/>&quot;CALC<sp/>&quot;;</highlight></codeline>
<codeline lineno="1503"><highlight class="stringliteral"><sp/><sp/>itsExpr.show<sp/>(os);</highlight></codeline>
<codeline lineno="1504"><highlight class="stringliteral"><sp/><sp/>if<sp/>(itsTables.isValid())<sp/>{</highlight></codeline>
<codeline lineno="1505"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>&quot;<sp/>FROM<sp/>&quot;;</highlight></codeline>
<codeline lineno="1506"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsTables.show<sp/>(os);</highlight></codeline>
<codeline lineno="1507"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1508"><highlight class="stringliteral"><sp/><sp/>if<sp/>(itsWhere.isValid())<sp/>{</highlight></codeline>
<codeline lineno="1509"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>&quot;<sp/>WHERE<sp/>&quot;;</highlight></codeline>
<codeline lineno="1510"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsWhere.show<sp/>(os);</highlight></codeline>
<codeline lineno="1511"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1512"><highlight class="stringliteral"><sp/><sp/>itsSort.show<sp/>(os);</highlight></codeline>
<codeline lineno="1513"><highlight class="stringliteral"><sp/><sp/>itsLimitOff.show<sp/>(os);</highlight></codeline>
<codeline lineno="1514"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1515"><highlight class="stringliteral">void<sp/>TaQLCalcNodeRep::save<sp/>(AipsIO&amp;<sp/>aio)<sp/>const</highlight></codeline>
<codeline lineno="1516"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1517"><highlight class="stringliteral"><sp/><sp/>itsWith.saveNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1518"><highlight class="stringliteral"><sp/><sp/>itsTables.saveNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1519"><highlight class="stringliteral"><sp/><sp/>itsExpr.saveNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1520"><highlight class="stringliteral"><sp/><sp/>itsWhere.saveNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1521"><highlight class="stringliteral"><sp/><sp/>itsSort.saveNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1522"><highlight class="stringliteral"><sp/><sp/>itsLimitOff.saveNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1523"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1524"><highlight class="stringliteral">TaQLNode<sp/>TaQLCalcNodeRep::restore<sp/>(AipsIO&amp;<sp/>aio)</highlight></codeline>
<codeline lineno="1525"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1526"><highlight class="stringliteral"><sp/><sp/>TaQLMultiNode<sp/>with<sp/>=<sp/>TaQLNode::restoreMultiNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1527"><highlight class="stringliteral"><sp/><sp/>TaQLMultiNode<sp/>tables<sp/>=<sp/>TaQLNode::restoreMultiNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1528"><highlight class="stringliteral"><sp/><sp/>TaQLNode<sp/>expr<sp/>=<sp/>TaQLNode::restoreNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1529"><highlight class="stringliteral"><sp/><sp/>TaQLNode<sp/>where<sp/>=<sp/>TaQLNode::restoreNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1530"><highlight class="stringliteral"><sp/><sp/>TaQLNode<sp/>sort<sp/>=<sp/>TaQLNode::restoreNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1531"><highlight class="stringliteral"><sp/><sp/>TaQLNode<sp/>limitoff<sp/>=<sp/>TaQLNode::restoreNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1532"><highlight class="stringliteral"><sp/><sp/>return<sp/>new<sp/>TaQLCalcNodeRep<sp/>(with,<sp/>tables,<sp/>expr,<sp/>where,<sp/>sort,<sp/>limitoff);</highlight></codeline>
<codeline lineno="1533"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1534"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1535"><highlight class="stringliteral">TaQLCreTabNodeRep::TaQLCreTabNodeRep<sp/>(const<sp/>TaQLMultiNode&amp;<sp/>with,</highlight></codeline>
<codeline lineno="1536"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>TaQLNode&amp;<sp/>giving,</highlight></codeline>
<codeline lineno="1537"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>TaQLMultiNode&amp;<sp/>likeDrop,</highlight></codeline>
<codeline lineno="1538"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>TaQLMultiNode&amp;<sp/>cols,</highlight></codeline>
<codeline lineno="1539"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>TaQLNode&amp;<sp/>limit,</highlight></codeline>
<codeline lineno="1540"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>TaQLMultiNode&amp;<sp/>dminfo)</highlight></codeline>
<codeline lineno="1541"><highlight class="stringliteral"><sp/><sp/>:<sp/>TaQLQueryNodeRep<sp/>(TaQLNode_CreTab),</highlight></codeline>
<codeline lineno="1542"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsWith<sp/><sp/><sp/><sp/>(with),</highlight></codeline>
<codeline lineno="1543"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsGiving<sp/><sp/>(giving),</highlight></codeline>
<codeline lineno="1544"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsLikeDrop(likeDrop),</highlight></codeline>
<codeline lineno="1545"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsColumns<sp/>(cols),</highlight></codeline>
<codeline lineno="1546"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsLimit<sp/><sp/><sp/>(limit),</highlight></codeline>
<codeline lineno="1547"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsDMInfo<sp/><sp/>(dminfo)</highlight></codeline>
<codeline lineno="1548"><highlight class="stringliteral">{}</highlight></codeline>
<codeline lineno="1549"><highlight class="stringliteral">TaQLNodeResult<sp/>TaQLCreTabNodeRep::visit<sp/>(TaQLNodeVisitor&amp;<sp/>visitor)<sp/>const</highlight></codeline>
<codeline lineno="1550"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1551"><highlight class="stringliteral"><sp/><sp/>return<sp/>visitor.visitCreTabNode<sp/>(*this);</highlight></codeline>
<codeline lineno="1552"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1553"><highlight class="stringliteral">void<sp/>TaQLCreTabNodeRep::showDerived<sp/>(std::ostream&amp;<sp/>os)<sp/>const</highlight></codeline>
<codeline lineno="1554"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1555"><highlight class="stringliteral"><sp/><sp/>showWithTables<sp/>(os,<sp/>itsWith);</highlight></codeline>
<codeline lineno="1556"><highlight class="stringliteral"><sp/><sp/>os<sp/>&lt;&lt;<sp/>&quot;CREATE<sp/>TABLE<sp/>&quot;;</highlight></codeline>
<codeline lineno="1557"><highlight class="stringliteral"><sp/><sp/>itsGiving.show<sp/>(os);</highlight></codeline>
<codeline lineno="1558"><highlight class="stringliteral"><sp/><sp/>if<sp/>(itsLikeDrop.isValid())<sp/>{</highlight></codeline>
<codeline lineno="1559"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>&quot;<sp/>LIKE<sp/>&quot;;</highlight></codeline>
<codeline lineno="1560"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>const<sp/>std::vector&lt;TaQLNode&gt;&amp;<sp/>nodes<sp/>=<sp/>itsLikeDrop.getMultiRep()-&gt;getNodes();</highlight></codeline>
<codeline lineno="1561"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>nodes[0].show<sp/>(os);</highlight></codeline>
<codeline lineno="1562"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>if<sp/>(nodes.size()<sp/>==<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="1563"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>&quot;<sp/>DROP<sp/>COLUMN<sp/>&quot;;</highlight></codeline>
<codeline lineno="1564"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>nodes[1].show<sp/>(os);</highlight></codeline>
<codeline lineno="1565"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1566"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1567"><highlight class="stringliteral"><sp/><sp/>//<sp/>If<sp/>a<sp/>column-list<sp/>is<sp/>given,<sp/>it<sp/>must<sp/>be<sp/>preceded<sp/>by<sp/>ADD<sp/>COLUMN<sp/>if</highlight></codeline>
<codeline lineno="1568"><highlight class="stringliteral"><sp/><sp/>//<sp/>the<sp/>LIKE<sp/>clause<sp/>is<sp/>given<sp/>as<sp/>well.</highlight></codeline>
<codeline lineno="1569"><highlight class="stringliteral"><sp/><sp/>if<sp/>(itsColumns.isValid()<sp/>&amp;&amp;<sp/>!itsColumns.getMultiRep()-&gt;getNodes().empty())<sp/>{</highlight></codeline>
<codeline lineno="1570"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>if<sp/>(itsLikeDrop.isValid())<sp/>{</highlight></codeline>
<codeline lineno="1571"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>&quot;<sp/>ADD<sp/>COLUMN<sp/>&quot;;</highlight></codeline>
<codeline lineno="1572"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{</highlight></codeline>
<codeline lineno="1573"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;;</highlight></codeline>
<codeline lineno="1574"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1575"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsColumns.show<sp/>(os);</highlight></codeline>
<codeline lineno="1576"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1577"><highlight class="stringliteral"><sp/><sp/>if<sp/>(itsLimit.isValid())<sp/>{</highlight></codeline>
<codeline lineno="1578"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>&quot;<sp/>LIMIT<sp/>&quot;;</highlight></codeline>
<codeline lineno="1579"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsLimit.show<sp/>(os);</highlight></codeline>
<codeline lineno="1580"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1581"><highlight class="stringliteral"><sp/><sp/>if<sp/>(itsDMInfo.isValid())<sp/>{</highlight></codeline>
<codeline lineno="1582"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>&quot;<sp/>DMINFO<sp/>&quot;;</highlight></codeline>
<codeline lineno="1583"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsDMInfo.show<sp/>(os);</highlight></codeline>
<codeline lineno="1584"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1585"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1586"><highlight class="stringliteral">void<sp/>TaQLCreTabNodeRep::save<sp/>(AipsIO&amp;<sp/>aio)<sp/>const</highlight></codeline>
<codeline lineno="1587"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1588"><highlight class="stringliteral"><sp/><sp/>itsWith.saveNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1589"><highlight class="stringliteral"><sp/><sp/>itsGiving.saveNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1590"><highlight class="stringliteral"><sp/><sp/>itsLikeDrop.saveNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1591"><highlight class="stringliteral"><sp/><sp/>itsColumns.saveNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1592"><highlight class="stringliteral"><sp/><sp/>itsLimit.saveNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1593"><highlight class="stringliteral"><sp/><sp/>itsDMInfo.saveNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1594"><highlight class="stringliteral"><sp/><sp/>saveSuper<sp/>(aio);</highlight></codeline>
<codeline lineno="1595"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1596"><highlight class="stringliteral">TaQLNode<sp/>TaQLCreTabNodeRep::restore<sp/>(AipsIO&amp;<sp/>aio)</highlight></codeline>
<codeline lineno="1597"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1598"><highlight class="stringliteral"><sp/><sp/>TaQLMultiNode<sp/>with<sp/>=<sp/>TaQLNode::restoreMultiNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1599"><highlight class="stringliteral"><sp/><sp/>TaQLNode<sp/>giving<sp/>=<sp/>TaQLNode::restoreNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1600"><highlight class="stringliteral"><sp/><sp/>TaQLMultiNode<sp/>likeDrop<sp/>=<sp/>TaQLNode::restoreMultiNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1601"><highlight class="stringliteral"><sp/><sp/>TaQLMultiNode<sp/>columns<sp/>=<sp/>TaQLNode::restoreMultiNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1602"><highlight class="stringliteral"><sp/><sp/>TaQLNode<sp/>limit<sp/>=<sp/>TaQLNode::restoreNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1603"><highlight class="stringliteral"><sp/><sp/>TaQLMultiNode<sp/>dminfo<sp/>=<sp/>TaQLNode::restoreMultiNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1604"><highlight class="stringliteral"><sp/><sp/>std::unique_ptr&lt;TaQLCreTabNodeRep&gt;<sp/>node</highlight></codeline>
<codeline lineno="1605"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>(new<sp/>TaQLCreTabNodeRep<sp/>(with,<sp/>giving,<sp/>likeDrop,</highlight></codeline>
<codeline lineno="1606"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>columns,<sp/>limit,<sp/>dminfo));</highlight></codeline>
<codeline lineno="1607"><highlight class="stringliteral"><sp/><sp/>node-&gt;restoreSuper<sp/>(aio);</highlight></codeline>
<codeline lineno="1608"><highlight class="stringliteral"><sp/><sp/>return<sp/>node.release();</highlight></codeline>
<codeline lineno="1609"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1610"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1611"><highlight class="stringliteral">TaQLColSpecNodeRep::TaQLColSpecNodeRep<sp/>(const<sp/>String&amp;<sp/>name,</highlight></codeline>
<codeline lineno="1612"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>String&amp;<sp/>likeCol,</highlight></codeline>
<codeline lineno="1613"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>String&amp;<sp/>dtype,</highlight></codeline>
<codeline lineno="1614"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>TaQLMultiNode&amp;<sp/>spec)</highlight></codeline>
<codeline lineno="1615"><highlight class="stringliteral"><sp/><sp/>:<sp/>TaQLNodeRep<sp/><sp/>(TaQLNode_ColSpec),</highlight></codeline>
<codeline lineno="1616"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsName<sp/><sp/><sp/><sp/>(name),</highlight></codeline>
<codeline lineno="1617"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsLikeCol<sp/>(likeCol),</highlight></codeline>
<codeline lineno="1618"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsDtype<sp/><sp/><sp/>(checkDataType(dtype)),</highlight></codeline>
<codeline lineno="1619"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsSpec<sp/><sp/><sp/><sp/>(spec)</highlight></codeline>
<codeline lineno="1620"><highlight class="stringliteral">{}</highlight></codeline>
<codeline lineno="1621"><highlight class="stringliteral">TaQLNodeResult<sp/>TaQLColSpecNodeRep::visit<sp/>(TaQLNodeVisitor&amp;<sp/>visitor)<sp/>const</highlight></codeline>
<codeline lineno="1622"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1623"><highlight class="stringliteral"><sp/><sp/>return<sp/>visitor.visitColSpecNode<sp/>(*this);</highlight></codeline>
<codeline lineno="1624"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1625"><highlight class="stringliteral">void<sp/>TaQLColSpecNodeRep::show<sp/>(std::ostream&amp;<sp/>os)<sp/>const</highlight></codeline>
<codeline lineno="1626"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1627"><highlight class="stringliteral"><sp/><sp/>os<sp/>&lt;&lt;<sp/>itsName;</highlight></codeline>
<codeline lineno="1628"><highlight class="stringliteral"><sp/><sp/>if<sp/>(!<sp/>itsLikeCol.empty())<sp/>{</highlight></codeline>
<codeline lineno="1629"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>&quot;<sp/>LIKE<sp/>&quot;<sp/>&lt;&lt;<sp/>itsLikeCol;</highlight></codeline>
<codeline lineno="1630"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1631"><highlight class="stringliteral"><sp/><sp/>if<sp/>(!<sp/>itsDtype.empty())<sp/>{</highlight></codeline>
<codeline lineno="1632"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;<sp/>&lt;&lt;<sp/>itsDtype;</highlight></codeline>
<codeline lineno="1633"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1634"><highlight class="stringliteral"><sp/><sp/>if<sp/>(itsSpec.isValid())<sp/>{</highlight></codeline>
<codeline lineno="1635"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;;</highlight></codeline>
<codeline lineno="1636"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsSpec.show<sp/>(os);</highlight></codeline>
<codeline lineno="1637"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1638"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1639"><highlight class="stringliteral">void<sp/>TaQLColSpecNodeRep::save<sp/>(AipsIO&amp;<sp/>aio)<sp/>const</highlight></codeline>
<codeline lineno="1640"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1641"><highlight class="stringliteral"><sp/><sp/>aio<sp/>&lt;&lt;<sp/>itsName<sp/>&lt;&lt;<sp/>itsLikeCol<sp/>&lt;&lt;<sp/>itsDtype;</highlight></codeline>
<codeline lineno="1642"><highlight class="stringliteral"><sp/><sp/>itsSpec.saveNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1643"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1644"><highlight class="stringliteral">TaQLNode<sp/>TaQLColSpecNodeRep::restore<sp/>(AipsIO&amp;<sp/>aio)</highlight></codeline>
<codeline lineno="1645"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1646"><highlight class="stringliteral"><sp/><sp/>String<sp/>name,<sp/>likeCol,<sp/>dtype;</highlight></codeline>
<codeline lineno="1647"><highlight class="stringliteral"><sp/><sp/>aio<sp/>&gt;&gt;<sp/>name<sp/>&gt;&gt;<sp/>likeCol<sp/>&gt;&gt;<sp/>dtype;</highlight></codeline>
<codeline lineno="1648"><highlight class="stringliteral"><sp/><sp/>TaQLMultiNode<sp/>spec<sp/>=<sp/>TaQLNode::restoreMultiNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1649"><highlight class="stringliteral"><sp/><sp/>return<sp/>new<sp/>TaQLColSpecNodeRep<sp/>(name,<sp/>likeCol,<sp/>dtype,<sp/>spec);</highlight></codeline>
<codeline lineno="1650"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1651"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1652"><highlight class="stringliteral">TaQLRecFldNodeRep::TaQLRecFldNodeRep<sp/>(const<sp/>String&amp;<sp/>name,</highlight></codeline>
<codeline lineno="1653"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>TaQLNode&amp;<sp/>values,</highlight></codeline>
<codeline lineno="1654"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>String&amp;<sp/>dtype)</highlight></codeline>
<codeline lineno="1655"><highlight class="stringliteral"><sp/><sp/>:<sp/>TaQLNodeRep<sp/>(TaQLNode_RecFld),</highlight></codeline>
<codeline lineno="1656"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsName<sp/><sp/>(name),</highlight></codeline>
<codeline lineno="1657"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsDtype<sp/>(checkDataType(dtype)),</highlight></codeline>
<codeline lineno="1658"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsValues(values)</highlight></codeline>
<codeline lineno="1659"><highlight class="stringliteral">{}</highlight></codeline>
<codeline lineno="1660"><highlight class="stringliteral">TaQLRecFldNodeRep::TaQLRecFldNodeRep<sp/>(const<sp/>String&amp;<sp/>name,</highlight></codeline>
<codeline lineno="1661"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>TaQLRecFldNodeRep&amp;<sp/>node)</highlight></codeline>
<codeline lineno="1662"><highlight class="stringliteral"><sp/><sp/>:<sp/>TaQLNodeRep<sp/>(TaQLNode_RecFld),</highlight></codeline>
<codeline lineno="1663"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsName<sp/><sp/>(name),</highlight></codeline>
<codeline lineno="1664"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsDtype<sp/>(node.itsDtype),</highlight></codeline>
<codeline lineno="1665"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsValues(node.itsValues)</highlight></codeline>
<codeline lineno="1666"><highlight class="stringliteral">{}</highlight></codeline>
<codeline lineno="1667"><highlight class="stringliteral">TaQLRecFldNodeRep::TaQLRecFldNodeRep<sp/>(const<sp/>String&amp;<sp/>name,</highlight></codeline>
<codeline lineno="1668"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>String&amp;<sp/>fromName,</highlight></codeline>
<codeline lineno="1669"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>String&amp;<sp/>dtype)</highlight></codeline>
<codeline lineno="1670"><highlight class="stringliteral"><sp/><sp/>:<sp/>TaQLNodeRep<sp/>(TaQLNode_RecFld),</highlight></codeline>
<codeline lineno="1671"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsName<sp/><sp/><sp/><sp/><sp/>(name),</highlight></codeline>
<codeline lineno="1672"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsFromName<sp/>(fromName),</highlight></codeline>
<codeline lineno="1673"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsDtype<sp/><sp/><sp/><sp/>(checkDataType(dtype))</highlight></codeline>
<codeline lineno="1674"><highlight class="stringliteral">{}</highlight></codeline>
<codeline lineno="1675"><highlight class="stringliteral">TaQLNodeResult<sp/>TaQLRecFldNodeRep::visit<sp/>(TaQLNodeVisitor&amp;<sp/>visitor)<sp/>const</highlight></codeline>
<codeline lineno="1676"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1677"><highlight class="stringliteral"><sp/><sp/>return<sp/>visitor.visitRecFldNode<sp/>(*this);</highlight></codeline>
<codeline lineno="1678"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1679"><highlight class="stringliteral">void<sp/>TaQLRecFldNodeRep::show<sp/>(std::ostream&amp;<sp/>os)<sp/>const</highlight></codeline>
<codeline lineno="1680"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1681"><highlight class="stringliteral"><sp/><sp/>if<sp/>(!<sp/>itsName.empty())<sp/>{</highlight></codeline>
<codeline lineno="1682"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>itsName<sp/>&lt;&lt;<sp/>&apos;</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&apos;;</highlight></codeline>
<codeline lineno="1683"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1684"><highlight class="stringliteral"><sp/><sp/>if<sp/>(!<sp/>itsFromName.empty())<sp/>{</highlight></codeline>
<codeline lineno="1685"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>itsFromName;</highlight></codeline>
<codeline lineno="1686"><highlight class="stringliteral"><sp/><sp/>}<sp/>else<sp/>if<sp/>(itsValues.isValid())<sp/>{</highlight></codeline>
<codeline lineno="1687"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>if<sp/>(itsValues.nodeType()<sp/>==<sp/>TaQLNode_Multi<sp/><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1688"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dynamic_cast&lt;const<sp/>TaQLMultiNodeRep&amp;&gt;(*(itsValues.getRep())).itsNodes.empty())<sp/>{</highlight></codeline>
<codeline lineno="1689"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>&quot;[=]&quot;;</highlight></codeline>
<codeline lineno="1690"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{</highlight></codeline>
<codeline lineno="1691"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/>itsValues.show<sp/>(os);</highlight></codeline>
<codeline lineno="1692"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1693"><highlight class="stringliteral"><sp/><sp/>}<sp/>else<sp/>{</highlight></codeline>
<codeline lineno="1694"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>&quot;[]&quot;;</highlight></codeline>
<codeline lineno="1695"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1696"><highlight class="stringliteral"><sp/><sp/>if<sp/>(!<sp/>itsDtype.empty())<sp/>{</highlight></codeline>
<codeline lineno="1697"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>&quot;<sp/>AS<sp/>&quot;<sp/>&lt;&lt;<sp/>itsDtype;</highlight></codeline>
<codeline lineno="1698"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1699"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1700"><highlight class="stringliteral">void<sp/>TaQLRecFldNodeRep::save<sp/>(AipsIO&amp;<sp/>aio)<sp/>const</highlight></codeline>
<codeline lineno="1701"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1702"><highlight class="stringliteral"><sp/><sp/>aio<sp/>&lt;&lt;<sp/>itsName<sp/>&lt;&lt;<sp/>itsFromName<sp/>&lt;&lt;<sp/>itsDtype;</highlight></codeline>
<codeline lineno="1703"><highlight class="stringliteral"><sp/><sp/>itsValues.saveNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1704"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1705"><highlight class="stringliteral">TaQLNode<sp/>TaQLRecFldNodeRep::restore<sp/>(AipsIO&amp;<sp/>aio)</highlight></codeline>
<codeline lineno="1706"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1707"><highlight class="stringliteral"><sp/><sp/>String<sp/>name,<sp/>fromName,<sp/>dtype;</highlight></codeline>
<codeline lineno="1708"><highlight class="stringliteral"><sp/><sp/>aio<sp/>&gt;&gt;<sp/>name<sp/>&gt;&gt;<sp/>fromName<sp/>&gt;&gt;<sp/>dtype;</highlight></codeline>
<codeline lineno="1709"><highlight class="stringliteral"><sp/><sp/>TaQLNode<sp/>values<sp/>=<sp/>TaQLNode::restoreNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1710"><highlight class="stringliteral"><sp/><sp/>if<sp/>(fromName.empty())<sp/>{</highlight></codeline>
<codeline lineno="1711"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>return<sp/>new<sp/>TaQLRecFldNodeRep<sp/>(name,<sp/>values,<sp/>dtype);</highlight></codeline>
<codeline lineno="1712"><highlight class="stringliteral"><sp/><sp/>}<sp/>else<sp/>{</highlight></codeline>
<codeline lineno="1713"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>return<sp/>new<sp/>TaQLRecFldNodeRep<sp/>(name,<sp/>fromName,<sp/>dtype);</highlight></codeline>
<codeline lineno="1714"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1715"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1716"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1717"><highlight class="stringliteral">TaQLUnitNodeRep::TaQLUnitNodeRep<sp/>(const<sp/>String&amp;<sp/>unit,</highlight></codeline>
<codeline lineno="1718"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>TaQLNode&amp;<sp/>child)</highlight></codeline>
<codeline lineno="1719"><highlight class="stringliteral"><sp/><sp/>:<sp/>TaQLNodeRep<sp/>(TaQLNode_Unit),</highlight></codeline>
<codeline lineno="1720"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsUnit<sp/><sp/>(unit),</highlight></codeline>
<codeline lineno="1721"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsChild<sp/>(child)</highlight></codeline>
<codeline lineno="1722"><highlight class="stringliteral">{}</highlight></codeline>
<codeline lineno="1723"><highlight class="stringliteral">TaQLNodeResult<sp/>TaQLUnitNodeRep::visit<sp/>(TaQLNodeVisitor&amp;<sp/>visitor)<sp/>const</highlight></codeline>
<codeline lineno="1724"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1725"><highlight class="stringliteral"><sp/><sp/>return<sp/>visitor.visitUnitNode<sp/>(*this);</highlight></codeline>
<codeline lineno="1726"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1727"><highlight class="stringliteral">void<sp/>TaQLUnitNodeRep::show<sp/>(std::ostream&amp;<sp/>os)<sp/>const</highlight></codeline>
<codeline lineno="1728"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1729"><highlight class="stringliteral"><sp/><sp/>os<sp/>&lt;&lt;<sp/>&apos;</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&apos;;</highlight></codeline>
<codeline lineno="1730"><highlight class="stringliteral"><sp/><sp/>itsChild.show(os);</highlight></codeline>
<codeline lineno="1731"><highlight class="stringliteral"><sp/><sp/>os<sp/>&lt;&lt;<sp/>&quot;)&apos;</highlight><highlight class="stringliteral">&quot;<sp/>&lt;&lt;<sp/>itsUnit<sp/>&lt;&lt;<sp/>&quot;</highlight><highlight class="stringliteral">&apos;&quot;;</highlight></codeline>
<codeline lineno="1732"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1733"><highlight class="stringliteral">void<sp/>TaQLUnitNodeRep::save<sp/>(AipsIO&amp;<sp/>aio)<sp/>const</highlight></codeline>
<codeline lineno="1734"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1735"><highlight class="stringliteral"><sp/><sp/>aio<sp/>&lt;&lt;<sp/>itsUnit;</highlight></codeline>
<codeline lineno="1736"><highlight class="stringliteral"><sp/><sp/>itsChild.saveNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1737"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1738"><highlight class="stringliteral">TaQLNode<sp/>TaQLUnitNodeRep::restore<sp/>(AipsIO&amp;<sp/>aio)</highlight></codeline>
<codeline lineno="1739"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1740"><highlight class="stringliteral"><sp/><sp/>String<sp/>unit;</highlight></codeline>
<codeline lineno="1741"><highlight class="stringliteral"><sp/><sp/>aio<sp/>&gt;&gt;<sp/>unit;</highlight></codeline>
<codeline lineno="1742"><highlight class="stringliteral"><sp/><sp/>TaQLNode<sp/>node<sp/>=<sp/>TaQLNode::restoreNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1743"><highlight class="stringliteral"><sp/><sp/>return<sp/>new<sp/>TaQLUnitNodeRep<sp/>(unit,<sp/>node);</highlight></codeline>
<codeline lineno="1744"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1745"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1746"><highlight class="stringliteral">TaQLAltTabNodeRep::TaQLAltTabNodeRep<sp/>(const<sp/>TaQLMultiNode&amp;<sp/>with,</highlight></codeline>
<codeline lineno="1747"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>TaQLNode&amp;<sp/>table,</highlight></codeline>
<codeline lineno="1748"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>TaQLMultiNode&amp;<sp/>from,</highlight></codeline>
<codeline lineno="1749"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>TaQLMultiNode&amp;<sp/>commands)</highlight></codeline>
<codeline lineno="1750"><highlight class="stringliteral"><sp/><sp/>:<sp/>TaQLQueryNodeRep<sp/>(TaQLNode_AltTab),</highlight></codeline>
<codeline lineno="1751"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsWith<sp/><sp/><sp/><sp/><sp/>(with),</highlight></codeline>
<codeline lineno="1752"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsTable<sp/><sp/><sp/><sp/>(table),</highlight></codeline>
<codeline lineno="1753"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsFrom<sp/><sp/><sp/><sp/><sp/>(from),</highlight></codeline>
<codeline lineno="1754"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsCommands<sp/>(commands)</highlight></codeline>
<codeline lineno="1755"><highlight class="stringliteral">{}</highlight></codeline>
<codeline lineno="1756"><highlight class="stringliteral">TaQLNodeResult<sp/>TaQLAltTabNodeRep::visit<sp/>(TaQLNodeVisitor&amp;<sp/>visitor)<sp/>const</highlight></codeline>
<codeline lineno="1757"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1758"><highlight class="stringliteral"><sp/><sp/>return<sp/>visitor.visitAltTabNode<sp/>(*this);</highlight></codeline>
<codeline lineno="1759"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1760"><highlight class="stringliteral">void<sp/>TaQLAltTabNodeRep::showDerived<sp/>(std::ostream&amp;<sp/>os)<sp/>const</highlight></codeline>
<codeline lineno="1761"><highlight class="stringliteral">{<sp/></highlight></codeline>
<codeline lineno="1762"><highlight class="stringliteral"><sp/><sp/>showWithTables<sp/>(os,<sp/>itsWith);</highlight></codeline>
<codeline lineno="1763"><highlight class="stringliteral"><sp/><sp/>os<sp/>&lt;&lt;<sp/>&quot;ALTER<sp/>TABLE<sp/>&quot;;</highlight></codeline>
<codeline lineno="1764"><highlight class="stringliteral"><sp/><sp/>itsTable.show<sp/>(os);</highlight></codeline>
<codeline lineno="1765"><highlight class="stringliteral"><sp/><sp/>if<sp/>(itsFrom.isValid())<sp/>{</highlight></codeline>
<codeline lineno="1766"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>&quot;<sp/>FROM<sp/>&quot;;</highlight></codeline>
<codeline lineno="1767"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsFrom.show<sp/>(os);</highlight></codeline>
<codeline lineno="1768"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1769"><highlight class="stringliteral"><sp/><sp/>os<sp/>&lt;&lt;<sp/>&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;;</highlight></codeline>
<codeline lineno="1770"><highlight class="stringliteral"><sp/><sp/>itsCommands.show<sp/>(os);</highlight></codeline>
<codeline lineno="1771"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1772"><highlight class="stringliteral">void<sp/>TaQLAltTabNodeRep::save<sp/>(AipsIO&amp;<sp/>aio)<sp/>const</highlight></codeline>
<codeline lineno="1773"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1774"><highlight class="stringliteral"><sp/><sp/>itsWith.saveNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1775"><highlight class="stringliteral"><sp/><sp/>itsTable.saveNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1776"><highlight class="stringliteral"><sp/><sp/>itsFrom.saveNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1777"><highlight class="stringliteral"><sp/><sp/>itsCommands.saveNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1778"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1779"><highlight class="stringliteral">TaQLNode<sp/>TaQLAltTabNodeRep::restore<sp/>(AipsIO&amp;<sp/>aio)</highlight></codeline>
<codeline lineno="1780"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1781"><highlight class="stringliteral"><sp/><sp/>TaQLMultiNode<sp/>with<sp/><sp/><sp/><sp/><sp/>=<sp/>TaQLNode::restoreMultiNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1782"><highlight class="stringliteral"><sp/><sp/>TaQLNode<sp/>table<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>TaQLNode::restoreNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1783"><highlight class="stringliteral"><sp/><sp/>TaQLMultiNode<sp/>from<sp/><sp/><sp/><sp/><sp/>=<sp/>TaQLNode::restoreMultiNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1784"><highlight class="stringliteral"><sp/><sp/>TaQLMultiNode<sp/>commands<sp/>=<sp/>TaQLNode::restoreMultiNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1785"><highlight class="stringliteral"><sp/><sp/>return<sp/>new<sp/>TaQLAltTabNodeRep<sp/>(with,<sp/>table,<sp/>from,<sp/>commands);</highlight></codeline>
<codeline lineno="1786"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1787"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1788"><highlight class="stringliteral">TaQLAddColNodeRep::TaQLAddColNodeRep<sp/>(const<sp/>TaQLMultiNode&amp;<sp/>cols,</highlight></codeline>
<codeline lineno="1789"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>TaQLMultiNode&amp;<sp/>dminfo)</highlight></codeline>
<codeline lineno="1790"><highlight class="stringliteral"><sp/><sp/>:<sp/>TaQLNodeRep<sp/>(TaQLNode_AddCol),</highlight></codeline>
<codeline lineno="1791"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsColumns<sp/>(cols),</highlight></codeline>
<codeline lineno="1792"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsDMInfo<sp/><sp/>(dminfo)</highlight></codeline>
<codeline lineno="1793"><highlight class="stringliteral">{}</highlight></codeline>
<codeline lineno="1794"><highlight class="stringliteral">TaQLNodeResult<sp/>TaQLAddColNodeRep::visit<sp/>(TaQLNodeVisitor&amp;<sp/>visitor)<sp/>const</highlight></codeline>
<codeline lineno="1795"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1796"><highlight class="stringliteral"><sp/><sp/>return<sp/>visitor.visitAddColNode<sp/>(*this);</highlight></codeline>
<codeline lineno="1797"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1798"><highlight class="stringliteral">void<sp/>TaQLAddColNodeRep::show<sp/>(std::ostream&amp;<sp/>os)<sp/>const</highlight></codeline>
<codeline lineno="1799"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1800"><highlight class="stringliteral"><sp/><sp/>os<sp/>&lt;&lt;<sp/>&quot;ADD<sp/>COLUMN<sp/>&quot;;</highlight></codeline>
<codeline lineno="1801"><highlight class="stringliteral"><sp/><sp/>itsColumns.show<sp/>(os);</highlight></codeline>
<codeline lineno="1802"><highlight class="stringliteral"><sp/><sp/>if<sp/>(itsDMInfo.isValid())<sp/>{</highlight></codeline>
<codeline lineno="1803"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>&quot;<sp/>DMINFO<sp/>&quot;;</highlight></codeline>
<codeline lineno="1804"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsDMInfo.show<sp/>(os);</highlight></codeline>
<codeline lineno="1805"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1806"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1807"><highlight class="stringliteral">void<sp/>TaQLAddColNodeRep::save<sp/>(AipsIO&amp;<sp/>aio)<sp/>const</highlight></codeline>
<codeline lineno="1808"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1809"><highlight class="stringliteral"><sp/><sp/>itsColumns.saveNode(aio);</highlight></codeline>
<codeline lineno="1810"><highlight class="stringliteral"><sp/><sp/>itsDMInfo.saveNode(aio);</highlight></codeline>
<codeline lineno="1811"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1812"><highlight class="stringliteral">TaQLNode<sp/>TaQLAddColNodeRep::restore<sp/>(AipsIO&amp;<sp/>aio)</highlight></codeline>
<codeline lineno="1813"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1814"><highlight class="stringliteral"><sp/><sp/>TaQLMultiNode<sp/>cols<sp/><sp/><sp/>=<sp/>TaQLNode::restoreMultiNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1815"><highlight class="stringliteral"><sp/><sp/>TaQLMultiNode<sp/>dminfo<sp/>=<sp/>TaQLNode::restoreMultiNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1816"><highlight class="stringliteral"><sp/><sp/>return<sp/>new<sp/>TaQLAddColNodeRep<sp/>(cols,<sp/>dminfo);</highlight></codeline>
<codeline lineno="1817"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1818"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1819"><highlight class="stringliteral">TaQLRenDropNodeRep::TaQLRenDropNodeRep<sp/>(Int<sp/>type,<sp/>const<sp/>TaQLMultiNode&amp;<sp/>names)</highlight></codeline>
<codeline lineno="1820"><highlight class="stringliteral"><sp/><sp/>:<sp/>TaQLNodeRep<sp/>(TaQLNode_RenDrop),</highlight></codeline>
<codeline lineno="1821"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsType<sp/><sp/>(type),</highlight></codeline>
<codeline lineno="1822"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsNames<sp/>(names)</highlight></codeline>
<codeline lineno="1823"><highlight class="stringliteral">{}</highlight></codeline>
<codeline lineno="1824"><highlight class="stringliteral">TaQLNodeResult<sp/>TaQLRenDropNodeRep::visit<sp/>(TaQLNodeVisitor&amp;<sp/>visitor)<sp/>const</highlight></codeline>
<codeline lineno="1825"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1826"><highlight class="stringliteral"><sp/><sp/>return<sp/>visitor.visitRenDropNode<sp/>(*this);</highlight></codeline>
<codeline lineno="1827"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1828"><highlight class="stringliteral">void<sp/>TaQLRenDropNodeRep::show<sp/>(std::ostream&amp;<sp/>os)<sp/>const</highlight></codeline>
<codeline lineno="1829"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1830"><highlight class="stringliteral"><sp/><sp/>if<sp/>(itsType<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1831"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>&quot;RENAME<sp/>COLUMN<sp/>&quot;;</highlight></codeline>
<codeline lineno="1832"><highlight class="stringliteral"><sp/><sp/>}<sp/>else<sp/>if<sp/>(itsType<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="1833"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>&quot;DROP<sp/>COLUMN<sp/>&quot;;</highlight></codeline>
<codeline lineno="1834"><highlight class="stringliteral"><sp/><sp/>}<sp/>else<sp/>if<sp/>(itsType<sp/>==<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="1835"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>&quot;RENAME<sp/>KEYWORD<sp/>&quot;;</highlight></codeline>
<codeline lineno="1836"><highlight class="stringliteral"><sp/><sp/>}<sp/>else<sp/>{</highlight></codeline>
<codeline lineno="1837"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>&quot;DROP<sp/>KEYWORD<sp/>&quot;;</highlight></codeline>
<codeline lineno="1838"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1839"><highlight class="stringliteral"><sp/><sp/>itsNames.show<sp/>(os);</highlight></codeline>
<codeline lineno="1840"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1841"><highlight class="stringliteral">void<sp/>TaQLRenDropNodeRep::save<sp/>(AipsIO&amp;<sp/>aio)<sp/>const</highlight></codeline>
<codeline lineno="1842"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1843"><highlight class="stringliteral"><sp/><sp/>aio<sp/>&lt;&lt;<sp/>itsType;</highlight></codeline>
<codeline lineno="1844"><highlight class="stringliteral"><sp/><sp/>itsNames.saveNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1845"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1846"><highlight class="stringliteral">TaQLNode<sp/>TaQLRenDropNodeRep::restore<sp/>(AipsIO&amp;<sp/>aio)</highlight></codeline>
<codeline lineno="1847"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1848"><highlight class="stringliteral"><sp/><sp/>Int<sp/>type;</highlight></codeline>
<codeline lineno="1849"><highlight class="stringliteral"><sp/><sp/>aio<sp/>&gt;&gt;<sp/>type;</highlight></codeline>
<codeline lineno="1850"><highlight class="stringliteral"><sp/><sp/>TaQLMultiNode<sp/>names<sp/>=<sp/>TaQLNode::restoreMultiNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1851"><highlight class="stringliteral"><sp/><sp/>return<sp/>new<sp/>TaQLRenDropNodeRep<sp/>(type,<sp/>names);</highlight></codeline>
<codeline lineno="1852"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1853"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1854"><highlight class="stringliteral">TaQLSetKeyNodeRep::TaQLSetKeyNodeRep<sp/>(const<sp/>TaQLMultiNode&amp;<sp/>keyvals)</highlight></codeline>
<codeline lineno="1855"><highlight class="stringliteral"><sp/><sp/>:<sp/>TaQLNodeRep<sp/>(TaQLNode_SetKey),</highlight></codeline>
<codeline lineno="1856"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsKeyVals<sp/>(keyvals)</highlight></codeline>
<codeline lineno="1857"><highlight class="stringliteral">{}</highlight></codeline>
<codeline lineno="1858"><highlight class="stringliteral">TaQLNodeResult<sp/>TaQLSetKeyNodeRep::visit<sp/>(TaQLNodeVisitor&amp;<sp/>visitor)<sp/>const</highlight></codeline>
<codeline lineno="1859"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1860"><highlight class="stringliteral"><sp/><sp/>return<sp/>visitor.visitSetKeyNode<sp/>(*this);</highlight></codeline>
<codeline lineno="1861"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1862"><highlight class="stringliteral">void<sp/>TaQLSetKeyNodeRep::show<sp/>(std::ostream&amp;<sp/>os)<sp/>const</highlight></codeline>
<codeline lineno="1863"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1864"><highlight class="stringliteral"><sp/><sp/>os<sp/>&lt;&lt;<sp/>&quot;SET<sp/>KEYWORD<sp/>&quot;;</highlight></codeline>
<codeline lineno="1865"><highlight class="stringliteral"><sp/><sp/>itsKeyVals.show<sp/>(os);</highlight></codeline>
<codeline lineno="1866"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1867"><highlight class="stringliteral">void<sp/>TaQLSetKeyNodeRep::save<sp/>(AipsIO&amp;<sp/>aio)<sp/>const</highlight></codeline>
<codeline lineno="1868"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1869"><highlight class="stringliteral"><sp/><sp/>itsKeyVals.saveNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1870"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1871"><highlight class="stringliteral">TaQLNode<sp/>TaQLSetKeyNodeRep::restore<sp/>(AipsIO&amp;<sp/>aio)</highlight></codeline>
<codeline lineno="1872"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1873"><highlight class="stringliteral"><sp/><sp/>TaQLMultiNode<sp/>keyvals<sp/>=<sp/>TaQLNode::restoreMultiNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1874"><highlight class="stringliteral"><sp/><sp/>return<sp/>new<sp/>TaQLSetKeyNodeRep<sp/>(keyvals);</highlight></codeline>
<codeline lineno="1875"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1876"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1877"><highlight class="stringliteral">TaQLAddRowNodeRep::TaQLAddRowNodeRep<sp/>(const<sp/>TaQLNode&amp;<sp/>nrow)</highlight></codeline>
<codeline lineno="1878"><highlight class="stringliteral"><sp/><sp/>:<sp/>TaQLNodeRep<sp/>(TaQLNode_AddRow),</highlight></codeline>
<codeline lineno="1879"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsNRow(nrow)</highlight></codeline>
<codeline lineno="1880"><highlight class="stringliteral">{}</highlight></codeline>
<codeline lineno="1881"><highlight class="stringliteral">TaQLNodeResult<sp/>TaQLAddRowNodeRep::visit<sp/>(TaQLNodeVisitor&amp;<sp/>visitor)<sp/>const</highlight></codeline>
<codeline lineno="1882"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1883"><highlight class="stringliteral"><sp/><sp/>return<sp/>visitor.visitAddRowNode<sp/>(*this);</highlight></codeline>
<codeline lineno="1884"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1885"><highlight class="stringliteral">void<sp/>TaQLAddRowNodeRep::show<sp/>(std::ostream&amp;<sp/>os)<sp/>const</highlight></codeline>
<codeline lineno="1886"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1887"><highlight class="stringliteral"><sp/><sp/>os<sp/>&lt;&lt;<sp/>&quot;ADD<sp/>ROW<sp/>&quot;;</highlight></codeline>
<codeline lineno="1888"><highlight class="stringliteral"><sp/><sp/>itsNRow.show<sp/>(os);</highlight></codeline>
<codeline lineno="1889"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1890"><highlight class="stringliteral">void<sp/>TaQLAddRowNodeRep::save<sp/>(AipsIO&amp;<sp/>aio)<sp/>const</highlight></codeline>
<codeline lineno="1891"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1892"><highlight class="stringliteral"><sp/><sp/>itsNRow.saveNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1893"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1894"><highlight class="stringliteral">TaQLNode<sp/>TaQLAddRowNodeRep::restore<sp/>(AipsIO&amp;<sp/>aio)</highlight></codeline>
<codeline lineno="1895"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1896"><highlight class="stringliteral"><sp/><sp/>TaQLNode<sp/>nrow<sp/>=<sp/>TaQLNode::restoreNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1897"><highlight class="stringliteral"><sp/><sp/>return<sp/>new<sp/>TaQLAddRowNodeRep<sp/>(nrow);</highlight></codeline>
<codeline lineno="1898"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1899"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1900"><highlight class="stringliteral">TaQLConcTabNodeRep::TaQLConcTabNodeRep<sp/>(const<sp/>String&amp;<sp/>tableName,</highlight></codeline>
<codeline lineno="1901"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>TaQLMultiNode&amp;<sp/>tables,</highlight></codeline>
<codeline lineno="1902"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>TaQLMultiNode&amp;<sp/>subtableNames)</highlight></codeline>
<codeline lineno="1903"><highlight class="stringliteral"><sp/><sp/>:<sp/>TaQLQueryNodeRep<sp/>(TaQLNode_ConcTab),</highlight></codeline>
<codeline lineno="1904"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsTableName<sp/>(tableName),</highlight></codeline>
<codeline lineno="1905"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsTables<sp/><sp/><sp/><sp/>(tables),</highlight></codeline>
<codeline lineno="1906"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsSubTables<sp/>(subtableNames)</highlight></codeline>
<codeline lineno="1907"><highlight class="stringliteral">{}</highlight></codeline>
<codeline lineno="1908"><highlight class="stringliteral">TaQLNodeResult<sp/>TaQLConcTabNodeRep::visit<sp/>(TaQLNodeVisitor&amp;<sp/>visitor)<sp/>const</highlight></codeline>
<codeline lineno="1909"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1910"><highlight class="stringliteral"><sp/><sp/>return<sp/>visitor.visitConcTabNode<sp/>(*this);</highlight></codeline>
<codeline lineno="1911"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1912"><highlight class="stringliteral">void<sp/>TaQLConcTabNodeRep::showDerived<sp/>(std::ostream&amp;<sp/>os)<sp/>const</highlight></codeline>
<codeline lineno="1913"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1914"><highlight class="stringliteral"><sp/><sp/>os<sp/>&lt;&lt;<sp/>&quot;[&quot;;</highlight></codeline>
<codeline lineno="1915"><highlight class="stringliteral"><sp/><sp/>itsTables.show<sp/>(os);</highlight></codeline>
<codeline lineno="1916"><highlight class="stringliteral"><sp/><sp/>if<sp/>(itsSubTables.isValid())<sp/>{</highlight></codeline>
<codeline lineno="1917"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>&quot;<sp/>SUBTABLES<sp/>&quot;;</highlight></codeline>
<codeline lineno="1918"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsSubTables.show<sp/>(os);</highlight></codeline>
<codeline lineno="1919"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1920"><highlight class="stringliteral"><sp/><sp/>if<sp/>(!<sp/>itsTableName.empty())<sp/>{</highlight></codeline>
<codeline lineno="1921"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>&quot;<sp/>GIVING<sp/>&quot;<sp/>&lt;&lt;<sp/>addEscape(itsTableName);</highlight></codeline>
<codeline lineno="1922"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1923"><highlight class="stringliteral"><sp/><sp/>os<sp/>&lt;&lt;<sp/>&apos;</highlight><highlight class="normal">]</highlight><highlight class="stringliteral">&apos;;</highlight></codeline>
<codeline lineno="1924"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1925"><highlight class="stringliteral">void<sp/>TaQLConcTabNodeRep::save<sp/>(AipsIO&amp;<sp/>aio)<sp/>const</highlight></codeline>
<codeline lineno="1926"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1927"><highlight class="stringliteral"><sp/><sp/>aio<sp/>&lt;&lt;<sp/>itsTableName;</highlight></codeline>
<codeline lineno="1928"><highlight class="stringliteral"><sp/><sp/>itsTables.saveNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1929"><highlight class="stringliteral"><sp/><sp/>itsSubTables.saveNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1930"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1931"><highlight class="stringliteral">TaQLNode<sp/>TaQLConcTabNodeRep::restore<sp/>(AipsIO&amp;<sp/>aio)</highlight></codeline>
<codeline lineno="1932"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1933"><highlight class="stringliteral"><sp/><sp/>String<sp/>tableName;</highlight></codeline>
<codeline lineno="1934"><highlight class="stringliteral"><sp/><sp/>aio<sp/>&gt;&gt;<sp/>tableName;</highlight></codeline>
<codeline lineno="1935"><highlight class="stringliteral"><sp/><sp/>TaQLMultiNode<sp/>tables<sp/>=<sp/>TaQLNode::restoreMultiNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1936"><highlight class="stringliteral"><sp/><sp/>TaQLMultiNode<sp/>subtables<sp/>=<sp/>TaQLNode::restoreMultiNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1937"><highlight class="stringliteral"><sp/><sp/>return<sp/>new<sp/>TaQLConcTabNodeRep<sp/>(tableName,<sp/>tables,<sp/>subtables);</highlight></codeline>
<codeline lineno="1938"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1939"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1940"><highlight class="stringliteral">TaQLShowNodeRep::TaQLShowNodeRep<sp/>(const<sp/>TaQLMultiNode&amp;<sp/>names)</highlight></codeline>
<codeline lineno="1941"><highlight class="stringliteral"><sp/><sp/>:<sp/>TaQLNodeRep<sp/>(TaQLNode_Show),</highlight></codeline>
<codeline lineno="1942"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsNames<sp/>(names)</highlight></codeline>
<codeline lineno="1943"><highlight class="stringliteral">{}</highlight></codeline>
<codeline lineno="1944"><highlight class="stringliteral">TaQLNodeResult<sp/>TaQLShowNodeRep::visit<sp/>(TaQLNodeVisitor&amp;<sp/>visitor)<sp/>const</highlight></codeline>
<codeline lineno="1945"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1946"><highlight class="stringliteral"><sp/><sp/>return<sp/>visitor.visitShowNode<sp/>(*this);</highlight></codeline>
<codeline lineno="1947"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1948"><highlight class="stringliteral">void<sp/>TaQLShowNodeRep::show<sp/>(std::ostream&amp;<sp/>os)<sp/>const</highlight></codeline>
<codeline lineno="1949"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1950"><highlight class="stringliteral"><sp/><sp/>os<sp/>&lt;&lt;<sp/>&quot;SHOW<sp/>&quot;;</highlight></codeline>
<codeline lineno="1951"><highlight class="stringliteral"><sp/><sp/>if<sp/>(itsNames.isValid())<sp/>{</highlight></codeline>
<codeline lineno="1952"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsNames.show<sp/>(os);</highlight></codeline>
<codeline lineno="1953"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1954"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1955"><highlight class="stringliteral">void<sp/>TaQLShowNodeRep::save<sp/>(AipsIO&amp;<sp/>aio)<sp/>const</highlight></codeline>
<codeline lineno="1956"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1957"><highlight class="stringliteral"><sp/><sp/>itsNames.saveNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1958"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1959"><highlight class="stringliteral">TaQLNode<sp/>TaQLShowNodeRep::restore<sp/>(AipsIO&amp;<sp/>aio)</highlight></codeline>
<codeline lineno="1960"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1961"><highlight class="stringliteral"><sp/><sp/>TaQLMultiNode<sp/>names<sp/>=<sp/>TaQLNode::restoreMultiNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1962"><highlight class="stringliteral"><sp/><sp/>return<sp/>new<sp/>TaQLShowNodeRep<sp/>(names);</highlight></codeline>
<codeline lineno="1963"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1964"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1965"><highlight class="stringliteral">TaQLCopyColNodeRep::TaQLCopyColNodeRep<sp/>(const<sp/>TaQLMultiNode&amp;<sp/>names,</highlight></codeline>
<codeline lineno="1966"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>TaQLMultiNode&amp;<sp/>dminfo)</highlight></codeline>
<codeline lineno="1967"><highlight class="stringliteral"><sp/><sp/>:<sp/>TaQLNodeRep<sp/>(TaQLNode_CopyCol),</highlight></codeline>
<codeline lineno="1968"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsNames<sp/><sp/>(names),</highlight></codeline>
<codeline lineno="1969"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsDMInfo<sp/>(dminfo)</highlight></codeline>
<codeline lineno="1970"><highlight class="stringliteral">{}</highlight></codeline>
<codeline lineno="1971"><highlight class="stringliteral">TaQLNodeResult<sp/>TaQLCopyColNodeRep::visit<sp/>(TaQLNodeVisitor&amp;<sp/>visitor)<sp/>const</highlight></codeline>
<codeline lineno="1972"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1973"><highlight class="stringliteral"><sp/><sp/>return<sp/>visitor.visitCopyColNode<sp/>(*this);</highlight></codeline>
<codeline lineno="1974"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1975"><highlight class="stringliteral">void<sp/>TaQLCopyColNodeRep::show<sp/>(std::ostream&amp;<sp/>os)<sp/>const</highlight></codeline>
<codeline lineno="1976"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1977"><highlight class="stringliteral"><sp/><sp/>os<sp/>&lt;&lt;<sp/>&quot;COPY<sp/>COLUMN<sp/>&quot;;</highlight></codeline>
<codeline lineno="1978"><highlight class="stringliteral"><sp/><sp/>itsNames.show<sp/>(os);</highlight></codeline>
<codeline lineno="1979"><highlight class="stringliteral"><sp/><sp/>if<sp/>(itsDMInfo.isValid())<sp/>{</highlight></codeline>
<codeline lineno="1980"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>&quot;<sp/>DMINFO<sp/>&quot;;</highlight></codeline>
<codeline lineno="1981"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsDMInfo.show<sp/>(os);</highlight></codeline>
<codeline lineno="1982"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1983"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1984"><highlight class="stringliteral">void<sp/>TaQLCopyColNodeRep::save<sp/>(AipsIO&amp;<sp/>aio)<sp/>const</highlight></codeline>
<codeline lineno="1985"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1986"><highlight class="stringliteral"><sp/><sp/>itsNames.saveNode(aio);</highlight></codeline>
<codeline lineno="1987"><highlight class="stringliteral"><sp/><sp/>itsDMInfo.saveNode(aio);</highlight></codeline>
<codeline lineno="1988"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1989"><highlight class="stringliteral">TaQLNode<sp/>TaQLCopyColNodeRep::restore<sp/>(AipsIO&amp;<sp/>aio)</highlight></codeline>
<codeline lineno="1990"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="1991"><highlight class="stringliteral"><sp/><sp/>TaQLMultiNode<sp/>names<sp/><sp/>=<sp/>TaQLNode::restoreMultiNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1992"><highlight class="stringliteral"><sp/><sp/>TaQLMultiNode<sp/>dminfo<sp/>=<sp/>TaQLNode::restoreMultiNode<sp/>(aio);</highlight></codeline>
<codeline lineno="1993"><highlight class="stringliteral"><sp/><sp/>return<sp/>new<sp/>TaQLCopyColNodeRep<sp/>(names,<sp/>dminfo);</highlight></codeline>
<codeline lineno="1994"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="1995"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1996"><highlight class="stringliteral">TaQLDropTabNodeRep::TaQLDropTabNodeRep<sp/>(const<sp/>TaQLMultiNode&amp;<sp/>with,</highlight></codeline>
<codeline lineno="1997"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>TaQLMultiNode&amp;<sp/>tables)</highlight></codeline>
<codeline lineno="1998"><highlight class="stringliteral"><sp/><sp/>:<sp/>TaQLNodeRep<sp/>(TaQLNode_DropTab),</highlight></codeline>
<codeline lineno="1999"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsWith<sp/><sp/><sp/>(with),</highlight></codeline>
<codeline lineno="2000"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>itsTables<sp/>(tables)</highlight></codeline>
<codeline lineno="2001"><highlight class="stringliteral">{}</highlight></codeline>
<codeline lineno="2002"><highlight class="stringliteral">TaQLNodeResult<sp/>TaQLDropTabNodeRep::visit<sp/>(TaQLNodeVisitor&amp;<sp/>visitor)<sp/>const</highlight></codeline>
<codeline lineno="2003"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="2004"><highlight class="stringliteral"><sp/><sp/>return<sp/>visitor.visitDropTabNode<sp/>(*this);</highlight></codeline>
<codeline lineno="2005"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="2006"><highlight class="stringliteral">void<sp/>TaQLDropTabNodeRep::show<sp/>(std::ostream&amp;<sp/>os)<sp/>const</highlight></codeline>
<codeline lineno="2007"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="2008"><highlight class="stringliteral"><sp/><sp/>showWithTables<sp/>(os,<sp/>itsWith);</highlight></codeline>
<codeline lineno="2009"><highlight class="stringliteral"><sp/><sp/>os<sp/>&lt;&lt;<sp/>&quot;DROP<sp/>TABLE<sp/>&quot;;</highlight></codeline>
<codeline lineno="2010"><highlight class="stringliteral"><sp/><sp/>itsTables.show<sp/>(os);</highlight></codeline>
<codeline lineno="2011"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="2012"><highlight class="stringliteral">void<sp/>TaQLDropTabNodeRep::save<sp/>(AipsIO&amp;<sp/>aio)<sp/>const</highlight></codeline>
<codeline lineno="2013"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="2014"><highlight class="stringliteral"><sp/><sp/>itsWith.saveNode(aio);</highlight></codeline>
<codeline lineno="2015"><highlight class="stringliteral"><sp/><sp/>itsTables.saveNode(aio);</highlight></codeline>
<codeline lineno="2016"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="2017"><highlight class="stringliteral">TaQLNode<sp/>TaQLDropTabNodeRep::restore<sp/>(AipsIO&amp;<sp/>aio)</highlight></codeline>
<codeline lineno="2018"><highlight class="stringliteral">{</highlight></codeline>
<codeline lineno="2019"><highlight class="stringliteral"><sp/><sp/>TaQLMultiNode<sp/>with<sp/><sp/><sp/>=<sp/>TaQLNode::restoreMultiNode<sp/>(aio);</highlight></codeline>
<codeline lineno="2020"><highlight class="stringliteral"><sp/><sp/>TaQLMultiNode<sp/>tables<sp/>=<sp/>TaQLNode::restoreMultiNode<sp/>(aio);</highlight></codeline>
<codeline lineno="2021"><highlight class="stringliteral"><sp/><sp/>return<sp/>new<sp/>TaQLDropTabNodeRep<sp/>(with,<sp/>tables);</highlight></codeline>
<codeline lineno="2022"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="2023"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2024"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2025"><highlight class="stringliteral">}<sp/>//#<sp/>NAMESPACE<sp/>CASACORE<sp/>-<sp/>END</highlight></codeline>
    </programlisting>
    <location file="tables/TaQL/TaQLNodeDer.cc"/>
  </compounddef>
</doxygen>
