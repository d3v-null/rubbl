<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="Slicer_8h" kind="file" language="C++">
    <compoundname>Slicer.h</compoundname>
    <includes refid="IPosition_8h" local="yes">IPosition.h</includes>
    <includedby refid="AxesMapping_8cc" local="yes">casa/Arrays/AxesMapping.cc</includedby>
    <includedby refid="ExtendSpecifier_8cc" local="yes">casa/Arrays/ExtendSpecifier.cc</includedby>
    <includedby refid="Slice_8cc" local="yes">casa/Arrays/Slice.cc</includedby>
    <includedby refid="Slicer_8cc" local="yes">casa/Arrays/Slicer.cc</includedby>
    <includedby refid="Arrays_8h" local="no">casa/Arrays.h</includedby>
    <includedby refid="HDF5DataSet_8h" local="no">casa/HDF5/HDF5DataSet.h</includedby>
    <includedby refid="CompressComplex_8cc" local="no">tables/DataMan/CompressComplex.cc</includedby>
    <includedby refid="CompressFloat_8cc" local="no">tables/DataMan/CompressFloat.cc</includedby>
    <includedby refid="ISMIndColumn_8cc" local="no">tables/DataMan/ISMIndColumn.cc</includedby>
    <includedby refid="MSMDirColumn_8cc" local="no">tables/DataMan/MSMDirColumn.cc</includedby>
    <includedby refid="MSMIndColumn_8cc" local="no">tables/DataMan/MSMIndColumn.cc</includedby>
    <includedby refid="SSMIndColumn_8cc" local="no">tables/DataMan/SSMIndColumn.cc</includedby>
    <includedby refid="StArrAipsIO_8cc" local="no">tables/DataMan/StArrAipsIO.cc</includedby>
    <includedby refid="StIndArray_8cc" local="no">tables/DataMan/StIndArray.cc</includedby>
    <includedby refid="StManColumn_8cc" local="no">tables/DataMan/StManColumn.cc</includedby>
    <includedby refid="TiledFileAccess_8cc" local="no">tables/DataMan/TiledFileAccess.cc</includedby>
    <includedby refid="TSMDataColumn_8cc" local="no">tables/DataMan/TSMDataColumn.cc</includedby>
    <includedby refid="ArrayColumnBase_8cc" local="no">tables/Tables/ArrayColumnBase.cc</includedby>
    <includedby refid="ArrayColumnFunc_8h" local="no">tables/Tables/ArrayColumnFunc.h</includedby>
    <includedby refid="TableProxy_8cc" local="no">tables/Tables/TableProxy.cc</includedby>
    <includedby refid="Tables_8h" local="no">tables/Tables.h</includedby>
    <includedby refid="ExprNodeArray_8cc" local="no">tables/TaQL/ExprNodeArray.cc</includedby>
    <includedby refid="ExprNodeArray_8h" local="no">tables/TaQL/ExprNodeArray.h</includedby>
    <includedby refid="ExprNodeSet_8cc" local="no">tables/TaQL/ExprNodeSet.cc</includedby>
    <includedby refid="ExprNodeSetElem_8cc" local="no">tables/TaQL/ExprNodeSetElem.cc</includedby>
    <incdepgraph>
      <node id="1">
        <label>casa/Arrays/Slicer.h</label>
        <link refid="Slicer_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>sys/types.h</label>
      </node>
      <node id="2">
        <label>IPosition.h</label>
        <link refid="IPosition_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>vector</label>
      </node>
      <node id="6">
        <label>cstddef</label>
      </node>
      <node id="3">
        <label>ArrayFwd.h</label>
        <link refid="ArrayFwd_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>memory</label>
      </node>
      <node id="7">
        <label>initializer_list</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="16">
        <label>tables/DataMan/SSMIndColumn.cc</label>
        <link refid="SSMIndColumn_8cc"/>
      </node>
      <node id="12">
        <label>tables/DataMan/CompressFloat.cc</label>
        <link refid="CompressFloat_8cc"/>
      </node>
      <node id="51">
        <label>tables/TaQL/ExprMathNodeArray.cc</label>
        <link refid="ExprMathNodeArray_8cc"/>
      </node>
      <node id="11">
        <label>tables/DataMan/CompressComplex.cc</label>
        <link refid="CompressComplex_8cc"/>
      </node>
      <node id="49">
        <label>tables/TaQL/ExprLogicNodeArray.cc</label>
        <link refid="ExprLogicNodeArray_8cc"/>
      </node>
      <node id="55">
        <label>tables/TaQL/ExprUDFNodeArray.h</label>
        <link refid="ExprUDFNodeArray_8h"/>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>tables/Tables.h</label>
        <link refid="Tables_8h"/>
      </node>
      <node id="57">
        <label>tables/TaQL/ExprUnitNode.h</label>
        <link refid="ExprUnitNode_8h"/>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>casa/Arrays.h</label>
        <link refid="Arrays_8h"/>
      </node>
      <node id="1">
        <label>casa/Arrays/Slicer.h</label>
        <link refid="Slicer_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>tables/TaQL/ExprGroupAggrFuncArray.cc</label>
        <link refid="ExprGroupAggrFuncArray_8cc"/>
      </node>
      <node id="18">
        <label>tables/DataMan/StIndArray.cc</label>
        <link refid="StIndArray_8cc"/>
      </node>
      <node id="29">
        <label>tables/TaQL/ExprDerNodeArray.h</label>
        <link refid="ExprDerNodeArray_8h"/>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>tables/TaQL/ExprConeNode.cc</label>
        <link refid="ExprConeNode_8cc"/>
      </node>
      <node id="30">
        <label>tables/TaQL/ExprDerNodeArray.cc</label>
        <link refid="ExprDerNodeArray_8cc"/>
      </node>
      <node id="26">
        <label>tables/TaQL/ExprNodeArray.cc</label>
        <link refid="ExprNodeArray_8cc"/>
      </node>
      <node id="3">
        <label>casa/Arrays/ExtendSpecifier.cc</label>
        <link refid="ExtendSpecifier_8cc"/>
      </node>
      <node id="33">
        <label>tables/TaQL/ExprNodeSet.cc</label>
        <link refid="ExprNodeSet_8cc"/>
      </node>
      <node id="36">
        <label>tables/TaQL/TableParseTableList.cc</label>
        <link refid="TableParseTableList_8cc"/>
      </node>
      <node id="61">
        <label>tables/TaQL/TableParseUpdate.cc</label>
        <link refid="TableParseUpdate_8cc"/>
      </node>
      <node id="46">
        <label>tables/TaQL/ExprGroupAggrFunc.cc</label>
        <link refid="ExprGroupAggrFunc_8cc"/>
      </node>
      <node id="13">
        <label>tables/DataMan/ISMIndColumn.cc</label>
        <link refid="ISMIndColumn_8cc"/>
      </node>
      <node id="48">
        <label>tables/TaQL/ExprLogicNodeArray.h</label>
        <link refid="ExprLogicNodeArray_8h"/>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>tables/TaQL/ExprFuncNode.cc</label>
        <link refid="ExprFuncNode_8cc"/>
      </node>
      <node id="44">
        <label>tables/TaQL/TableParseFunc.cc</label>
        <link refid="TableParseFunc_8cc"/>
      </node>
      <node id="54">
        <label>tables/TaQL/RecordExpr.cc</label>
        <link refid="RecordExpr_8cc"/>
      </node>
      <node id="24">
        <label>tables/Tables/TableProxy.cc</label>
        <link refid="TableProxy_8cc"/>
      </node>
      <node id="4">
        <label>casa/Arrays/Slice.cc</label>
        <link refid="Slice_8cc"/>
      </node>
      <node id="15">
        <label>tables/DataMan/MSMIndColumn.cc</label>
        <link refid="MSMIndColumn_8cc"/>
      </node>
      <node id="45">
        <label>tables/TaQL/ExprFuncNodeArray.cc</label>
        <link refid="ExprFuncNodeArray_8cc"/>
      </node>
      <node id="23">
        <label>tables/Tables/ArrayColumnFunc.h</label>
        <link refid="ArrayColumnFunc_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>tables/apps/taql.cc</label>
        <link refid="taql_8cc"/>
      </node>
      <node id="35">
        <label>tables/TaQL/TableParseQuery.cc</label>
        <link refid="TableParseQuery_8cc"/>
      </node>
      <node id="52">
        <label>tables/TaQL/ExprNodeRecord.h</label>
        <link refid="ExprNodeRecord_8h"/>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>tables/TaQL/ExprGroup.cc</label>
        <link refid="ExprGroup_8cc"/>
      </node>
      <node id="42">
        <label>tables/TaQL/ExprConeNode.h</label>
        <link refid="ExprConeNode_8h"/>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>casa/IO/MultiHDF5.cc</label>
        <link refid="MultiHDF5_8cc"/>
      </node>
      <node id="32">
        <label>tables/TaQL/ExprNodeRep.cc</label>
        <link refid="ExprNodeRep_8cc"/>
      </node>
      <node id="27">
        <label>tables/TaQL/ExprNodeArray.h</label>
        <link refid="ExprNodeArray_8h"/>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>tables/TaQL/ExprMathNode.cc</label>
        <link refid="ExprMathNode_8cc"/>
      </node>
      <node id="5">
        <label>casa/Arrays/Slicer.cc</label>
        <link refid="Slicer_8cc"/>
      </node>
      <node id="31">
        <label>tables/TaQL/ExprNode.cc</label>
        <link refid="ExprNode_8cc"/>
      </node>
      <node id="56">
        <label>tables/TaQL/ExprUDFNodeArray.cc</label>
        <link refid="ExprUDFNodeArray_8cc"/>
      </node>
      <node id="53">
        <label>tables/TaQL/ExprNodeRecord.cc</label>
        <link refid="ExprNodeRecord_8cc"/>
      </node>
      <node id="50">
        <label>tables/TaQL/ExprMathNodeArray.h</label>
        <link refid="ExprMathNodeArray_8h"/>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>tables/DataMan/StArrAipsIO.cc</label>
        <link refid="StArrAipsIO_8cc"/>
      </node>
      <node id="9">
        <label>casa/HDF5.h</label>
        <link refid="HDF5_8h"/>
      </node>
      <node id="7">
        <label>casa/HDF5/HDF5DataSet.h</label>
        <link refid="HDF5DataSet_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>tables/Tables/ArrayColumnBase.cc</label>
        <link refid="ArrayColumnBase_8cc"/>
      </node>
      <node id="34">
        <label>tables/TaQL/ExprNodeSetElem.cc</label>
        <link refid="ExprNodeSetElem_8cc"/>
      </node>
      <node id="2">
        <label>casa/Arrays/AxesMapping.cc</label>
        <link refid="AxesMapping_8cc"/>
      </node>
      <node id="60">
        <label>tables/TaQL/ExprUnitNode.cc</label>
        <link refid="ExprUnitNode_8cc"/>
      </node>
      <node id="37">
        <label>tables/TaQL/TableParseUtil.cc</label>
        <link refid="TableParseUtil_8cc"/>
      </node>
      <node id="8">
        <label>casa/HDF5/HDF5DataSet.cc</label>
        <link refid="HDF5DataSet_8cc"/>
      </node>
      <node id="21">
        <label>tables/DataMan/TSMDataColumn.cc</label>
        <link refid="TSMDataColumn_8cc"/>
      </node>
      <node id="19">
        <label>tables/DataMan/StManColumn.cc</label>
        <link refid="StManColumn_8cc"/>
      </node>
      <node id="14">
        <label>tables/DataMan/MSMDirColumn.cc</label>
        <link refid="MSMDirColumn_8cc"/>
      </node>
      <node id="39">
        <label>tables/TaQL/ExprAggrNodeArray.h</label>
        <link refid="ExprAggrNodeArray_8h"/>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>tables/DataMan/TiledFileAccess.cc</label>
        <link refid="TiledFileAccess_8cc"/>
      </node>
      <node id="40">
        <label>tables/TaQL/ExprAggrNodeArray.cc</label>
        <link refid="ExprAggrNodeArray_8cc"/>
      </node>
      <node id="38">
        <label>tables/TaQL/ExprFuncNodeArray.h</label>
        <link refid="ExprFuncNodeArray_8h"/>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classcasacore_1_1Slicer" prot="public">casacore::Slicer</innerclass>
    <innernamespace refid="namespacecasacore">casacore</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//#<sp/>Slicer.h:<sp/><sp/>specify<sp/>which<sp/>elements<sp/>to<sp/>extract<sp/>from<sp/>an<sp/>n-dimensional<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>Copyright<sp/>(C)<sp/>1994,1995,1997,1999</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>Associated<sp/>Universities,<sp/>Inc.<sp/>Washington<sp/>DC,<sp/>USA.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//#<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>This<sp/>library<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Library<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>2<sp/>of<sp/>the<sp/>License,<sp/>or<sp/>(at<sp/>your</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//#<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>This<sp/>library<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,<sp/>but<sp/>WITHOUT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of<sp/>MERCHANTABILITY<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the<sp/>GNU<sp/>Library<sp/>General<sp/>Public</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>License<sp/>for<sp/>more<sp/>details.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//#<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Library<sp/>General<sp/>Public<sp/>License</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>along<sp/>with<sp/>this<sp/>library;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software<sp/>Foundation,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>Inc.,<sp/>675<sp/>Massachusetts<sp/>Ave,<sp/>Cambridge,<sp/>MA<sp/>02139,<sp/>USA.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//#<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>Correspondence<sp/>concerning<sp/>AIPS++<sp/>should<sp/>be<sp/>addressed<sp/>as<sp/>follows:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Internet<sp/>email:<sp/>casa-feedback@nrao.edu.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Postal<sp/>address:<sp/>AIPS++<sp/>Project<sp/>Office</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>National<sp/>Radio<sp/>Astronomy<sp/>Observatory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>520<sp/>Edgemont<sp/>Road</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Charlottesville,<sp/>VA<sp/>22903-2475<sp/>USA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>CASA_SLICER_2_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CASA_SLICER_2_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>Includes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="IPosition_8h" kindref="compound">IPosition.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacecasacore" kindref="compound">casacore</ref><sp/>{<sp/></highlight><highlight class="comment">//#<sp/>NAMESPACE<sp/>CASACORE<sp/>-<sp/>BEGIN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>Forward<sp/>Declarations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Slice;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;summary&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Specify<sp/>which<sp/>elements<sp/>to<sp/>extract<sp/>from<sp/>an<sp/>n-dimensional<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;/summary&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;reviewed<sp/>reviewer=&quot;Paul<sp/>Shannon&quot;<sp/>date=&quot;1994/07/07&quot;<sp/>tests=&quot;tSlicer&quot;&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>The<sp/>review<sp/>and<sp/>modification<sp/>of<sp/>this<sp/>class<sp/>were<sp/>undertaken,<sp/>in<sp/>part,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>with<sp/>the<sp/>aim<sp/>of<sp/>making<sp/>this<sp/>class<sp/>header<sp/>an<sp/>example<sp/>--<sp/>this<sp/>is<sp/>what</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>the<sp/>Casacore<sp/>project<sp/>thinks<sp/>a<sp/>class<sp/>header<sp/>should<sp/>look<sp/>like.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;/reviewed&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;prerequisite&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>should<sp/>have<sp/>at<sp/>least<sp/>a<sp/>preliminary<sp/>understanding<sp/>of<sp/>these<sp/>classes:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>&lt;li&gt;<sp/>&lt;linkto<sp/>class=IPosition&gt;IPosition&lt;/linkto&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>&lt;li&gt;<sp/>&lt;linkto<sp/>class=Array&gt;Array&lt;/linkto&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>&lt;li&gt;<sp/>&lt;linkto<sp/>class=Slice&gt;Slice&lt;/linkto&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;/prerequisite&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;etymology&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>class<sp/>name<sp/>&quot;Slicer&quot;<sp/>may<sp/>be<sp/>thought<sp/>of<sp/>as<sp/>a<sp/>short<sp/>form<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="comment">//<sp/>of<sp/>&quot;n-Dimensional<sp/>Slice<sp/>Specifier.&quot;<sp/><sp/>Some<sp/>confusion<sp/>is<sp/>possible</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">//<sp/>between<sp/>class<sp/>&quot;Slice&quot;<sp/>and<sp/>this<sp/>class.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;/etymology&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;synopsis&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>you<sp/>need<sp/>to<sp/>extract<sp/>or<sp/>operate<sp/>upon<sp/>a<sp/>portion<sp/>of<sp/>an<sp/>array,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>Slicer<sp/>class<sp/>is<sp/>the<sp/>best<sp/>way<sp/>to<sp/>specify<sp/>the<sp/>subarray<sp/>you<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="comment">//<sp/>interested<sp/>in.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Slicer<sp/>has<sp/>many<sp/>constructors.<sp/><sp/>Of<sp/>these,<sp/>some<sp/>require<sp/>that<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="comment">//<sp/>programmer<sp/>supply<sp/>a<sp/>full<sp/>specification<sp/>of<sp/>the<sp/>array<sp/>elements<sp/>he</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="comment">//<sp/>wants<sp/>to<sp/>extract;<sp/><sp/>other<sp/>constructors<sp/>make<sp/>do<sp/>with<sp/>partial<sp/>information.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="comment">//<sp/>In<sp/>the<sp/>latter<sp/>case,<sp/>the<sp/>constructor<sp/>will<sp/>assume<sp/>sensible<sp/>default<sp/>values<sp/>or,<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="comment">//<sp/>when<sp/>directed,<sp/>infer<sp/>missing<sp/>information<sp/>from<sp/>the<sp/>array<sp/>that&apos;s<sp/>getting<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="comment">//<sp/>sliced<sp/>(hereafter,<sp/>the<sp/>&quot;source&quot;<sp/>array).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;h4&gt;<sp/>Constructing<sp/>With<sp/>Full<sp/>Information<sp/>&lt;/h4&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="comment">//<sp/>To<sp/>fully<sp/>specify<sp/>a<sp/>subarray,<sp/>you<sp/>must<sp/>supply<sp/>three<sp/>pieces<sp/>of<sp/>information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="comment">//<sp/>for<sp/>each<sp/>axis<sp/>of<sp/>the<sp/>subarray:<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="comment">//<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;ol&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>&lt;li&gt;<sp/>where<sp/>to<sp/>start</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>&lt;li&gt;<sp/>how<sp/>many<sp/>elements<sp/>to<sp/>extract</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>&lt;li&gt;<sp/>what<sp/>stride<sp/>(or<sp/>&quot;increment&quot;<sp/>or<sp/>&quot;interval&quot;)<sp/>to<sp/>use:<sp/><sp/>a<sp/>stride<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;n&quot;<sp/>means<sp/>pick<sp/>extract<sp/>only<sp/>every<sp/>&quot;nth&quot;<sp/>element<sp/>along<sp/>an<sp/>axis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;/ol&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>most<sp/>basic<sp/>constructor<sp/>for<sp/>Slicer<sp/>illustrates<sp/>this.<sp/><sp/>To<sp/>create</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="comment">//<sp/>an<sp/>Slicer<sp/>for<sp/>getting<sp/>selected<sp/>elements<sp/>from<sp/>a<sp/>3D<sp/>array:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;srcblock&gt;<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>IPosition<sp/>start<sp/>(3,0,0,0),<sp/>length<sp/>(3,10,10,10),<sp/>stride<sp/>(3,3,3,3);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Slicer<sp/>slicer<sp/>(start,<sp/>length,<sp/>stride);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>//<sp/>assume<sp/>proper<sp/>declarations,<sp/>and<sp/>meaningful<sp/>values<sp/>in<sp/>the<sp/>source<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>subArray<sp/>=<sp/>sourceArray<sp/>(slicer);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;/srcblock&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="comment">//<sp/>It<sp/>gets<sp/>elements<sp/>0,3,6,9,12,15,18,21,24,27<sp/>for<sp/>each<sp/>dimension.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;note<sp/>role=caution&gt;<sp/>If<sp/>you<sp/>wish<sp/>to<sp/>extract<sp/>elements<sp/>from<sp/>the<sp/>array<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="comment">//<sp/>at<sp/>intervals,<sp/>these<sp/>intervals<sp/>must<sp/>be<sp/>regular.<sp/><sp/><sp/>The<sp/>interval<sp/>is<sp/>one<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="comment">//<sp/>constant<sp/>integer<sp/>for<sp/>each<sp/>dimension<sp/>of<sp/>the<sp/>array:<sp/><sp/>it<sp/>cannot<sp/>be<sp/>a<sp/>function.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;/note&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="comment">//<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;note<sp/>role=caution&gt;<sp/>&quot;length&quot;,<sp/>the<sp/>second<sp/>parameter<sp/>to<sp/>the<sp/>Slicer<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="comment">//<sp/>constructor<sp/>above,<sp/>may<sp/>actually<sp/>be<sp/>used<sp/>in<sp/>two<sp/>ways.<sp/><sp/>In<sp/>normal<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(and<sp/>default)<sp/>use,<sp/>it<sp/>specifies<sp/>how<sp/>many<sp/>elements<sp/>to<sp/>select<sp/>from<sp/>the<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="comment">//<sp/>source.<sp/><sp/>In<sp/>the<sp/>alternative<sp/>use,<sp/>it<sp/>specifies<sp/>the<sp/>index<sp/>of<sp/>the<sp/>last<sp/>element</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>extract<sp/>from<sp/>the<sp/>source<sp/>array.<sp/><sp/>This<sp/>ambiguity<sp/>(does<sp/>&quot;end&quot;<sp/>mean<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;length&quot;<sp/>or<sp/>does<sp/>it<sp/>mean<sp/>&quot;last<sp/>index&quot;?)<sp/>is<sp/>handled<sp/>by<sp/>a<sp/>default<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="comment">//<sp/>fourth<sp/>parameter<sp/>to<sp/>the<sp/>constructor.<sp/><sp/>This<sp/>code<sp/>fragment<sp/>will</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="comment">//<sp/>extract<sp/>the<sp/>same<sp/>subarray<sp/>as<sp/>the<sp/>example<sp/>above:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;srcblock&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>IPosition<sp/>start<sp/>(3,0,0,0),<sp/>end<sp/>(3,27,27,27),<sp/>stride<sp/>(3,3,3,3);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Slicer<sp/>slicer<sp/>(start,<sp/>end,<sp/>stride,<sp/>Slicer::endIsLast);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>subArray<sp/>=<sp/>sourceArray<sp/>(slicer);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;/srcblock&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>in<sp/>this<sp/>example<sp/>end(3,28,29,28)<sp/>gives<sp/>the<sp/>same<sp/>result.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(We<sp/>use<sp/>&quot;end&quot;<sp/>as<sp/>the<sp/>name<sp/>of<sp/>the<sp/>formal<sp/>parameter<sp/>because<sp/>it<sp/>supports<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="comment">//<sp/>both<sp/>meanings<sp/>--<sp/>&quot;last<sp/>index&quot;<sp/>or<sp/>&quot;length.&quot;<sp/><sp/>You<sp/>may<sp/>wish<sp/>to<sp/>use<sp/>a<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clarifying<sp/>name<sp/>for<sp/>the<sp/>actual<sp/>parameter<sp/>in<sp/>your<sp/>code,<sp/>as<sp/>we<sp/>have<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="comment">//<sp/>above<sp/>when<sp/>we<sp/>used<sp/>&quot;length&quot;.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;/note&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Similar<sp/>to<sp/>Python<sp/>it<sp/>is<sp/>possible<sp/>to<sp/>address<sp/>the<sp/>start<sp/>and/or<sp/>end<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="comment">//<sp/>from<sp/>the<sp/>end<sp/>by<sp/>giving<sp/>a<sp/>negative<sp/>value<sp/>(-1<sp/>means<sp/>the<sp/>last<sp/>value).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="comment">//<sp/>However,<sp/>a<sp/>length<sp/>and<sp/>stride<sp/>cannot<sp/>be<sp/>negative.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unlike<sp/>Python<sp/>the<sp/>end<sp/>value<sp/>is<sp/>inclusive<sp/>(as<sp/>discussed<sp/>above).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="comment">//<sp/>For<sp/>example,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;srcblock&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>Slicer<sp/>slicer<sp/>(IPosition(1,-4),<sp/>IPosition(1,-2),<sp/>Slicer::endIsLast)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>Slicer<sp/>slicer<sp/>(IPosition(1,6),<sp/><sp/>IPosition(1,8),<sp/><sp/>Slicer::endIsLast)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;/srcblock&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Both<sp/>Slicers<sp/>give<sp/>the<sp/>same<sp/>result<sp/>when<sp/>used<sp/>on<sp/>a<sp/>Vector<sp/>with<sp/>length<sp/>10.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;h4&gt;<sp/>Constructing<sp/>with<sp/>Partial<sp/>Information<sp/>&lt;/h4&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="comment">//<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Some<sp/>of<sp/>the<sp/>constructors<sp/>don&apos;t<sp/>require<sp/>complete<sp/>information:<sp/><sp/>Slicer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="comment">//<sp/>either<sp/>calculates<sp/>sensible<sp/>default<sp/>values<sp/>or<sp/>deduces<sp/>them<sp/>from<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="comment">//<sp/>source<sp/>array.<sp/><sp/>If<sp/>you<sp/>do<sp/>not<sp/>specify<sp/>a<sp/>&quot;stride&quot;<sp/>argument,<sp/>for<sp/>example,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="comment">//<sp/>a<sp/>value<sp/>of<sp/>1<sp/>will<sp/>be<sp/>used<sp/>for<sp/>all<sp/>dimensions.<sp/><sp/>If<sp/>you<sp/>specify<sp/>a<sp/>&quot;start&quot;<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="comment">//<sp/>but<sp/>nothing<sp/>else,<sp/>a<sp/>stride<sp/>of<sp/>1,<sp/>and<sp/>(perhaps<sp/>against<sp/>expectation)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="comment">//<sp/>a<sp/>length<sp/>of<sp/>1<sp/>will<sp/>be<sp/>used.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>using<sp/>a<sp/>negative<sp/>start<sp/>or<sp/>end<sp/>is<sp/>also<sp/>partial<sp/>information.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>actual<sp/>array<sp/>shape<sp/>is<sp/>needed<sp/>to<sp/>derive<sp/>the<sp/>exact<sp/>start<sp/>or<sp/>end<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="comment">//<sp/>To<sp/>instruct<sp/>the<sp/>Slicer<sp/>to<sp/>get<sp/>otherwise<sp/>unspecified<sp/>information<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="comment">//<sp/>from<sp/>the<sp/>source<sp/>array,<sp/>you<sp/>can<sp/>create<sp/>an<sp/>IPosition<sp/>like<sp/><sp/>&quot;end&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="comment">//<sp/>as<sp/>shown<sp/>here:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;srcblock&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>IPosition<sp/>start<sp/>(3,0,0,0),<sp/>stride<sp/>(3,3,3,3);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>IPosition<sp/>end<sp/><sp/><sp/>(3,Slicer::MimicSource,<sp/>Slicer::MimicSource,<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Slicer::MimicSource);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Slicer<sp/>smartSlicer<sp/>(start,<sp/>end,<sp/>stride);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>//<sp/>assume<sp/>proper<sp/>declarations...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>subArray<sp/>=<sp/>sourceArray<sp/>(smartSlicer)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;/srcblock&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>you<sp/>are<sp/>a<sp/>library<sp/>programmer,<sp/>and<sp/>write<sp/>a<sp/>class<sp/>that<sp/>can<sp/>be<sp/>sliced</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="comment">//<sp/>by<sp/>the<sp/>Slicer<sp/>class,<sp/>you<sp/>need<sp/>to<sp/>understand<sp/>the<sp/>mechanism<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="comment">//<sp/>completing<sp/>the<sp/>information<sp/>which<sp/>the<sp/>application<sp/>programmer,<sp/>in<sp/>using</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="comment">//<sp/>your<sp/>class,<sp/>specified<sp/>incompletely.<sp/>(If<sp/>you<sp/>are<sp/>an<sp/>application</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="comment">//<sp/>programmer,<sp/>who<sp/>wants<sp/>to<sp/>slice<sp/>a<sp/>library<sp/>class,<sp/>this<sp/>explanation<sp/>will</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="comment">//<sp/>be<sp/>only<sp/>of<sp/>academic<sp/>interest.)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="comment">//<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="comment">//<sp/>When<sp/>the<sp/>source<sp/>array<sp/>(the<sp/>library<sp/>class<sp/>you<sp/>provide)<sp/>gets<sp/>the<sp/>Slicer<sp/>--</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="comment">//<sp/>which<sp/>typically<sp/>comes<sp/>when<sp/>the<sp/>source<sp/>array<sp/>is<sp/>asked<sp/>to<sp/>return<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="comment">//<sp/>reference<sp/>to<sp/>a<sp/>subarray<sp/>--<sp/>the<sp/>source<sp/>does<sp/>a<sp/>callback<sp/>to<sp/>the<sp/>Slicer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="comment">//<sp/>object.<sp/><sp/>The<sp/>source<sp/>array<sp/>passes<sp/>its<sp/>own<sp/>shape<sp/>as<sp/>one<sp/>of<sp/>the<sp/>arguments</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>the<sp/>Slicer<sp/>callback<sp/>and<sp/>asks<sp/>the<sp/>Slicer<sp/>to<sp/>fill<sp/>in<sp/>the<sp/>missing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="comment">//<sp/>values<sp/>from<sp/>that<sp/>shape.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="comment">//<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="comment">//<sp/>In<sp/>use,<sp/>and<sp/>with<sp/>an<sp/>imagined<sp/>class<sp/>&quot;MyVector&quot;,<sp/>code<sp/>would<sp/>look</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="comment">//<sp/>like<sp/>this:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;srcblock&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>//<sp/>first,<sp/>a<sp/>fragment<sp/>from<sp/>the<sp/>application<sp/>program:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>IPosition<sp/>start<sp/>(1,10),<sp/>end<sp/>(1,<sp/>Slicer::MimicSource);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Slicer<sp/>slicer<sp/>(start,<sp/>end);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>MyVector<sp/>&lt;int&gt;<sp/>v0<sp/>(100);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>MyVector<sp/>&lt;int&gt;<sp/>v1<sp/>=<sp/>v0<sp/>(slicer);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>//....</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>//<sp/>second,<sp/>a<sp/>fragment<sp/>from<sp/>a<sp/>constructor<sp/>of<sp/>the<sp/>library<sp/>class<sp/>&quot;MyVector&quot;:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>//<sp/>the<sp/>MyVector<sp/>class<sp/>will<sp/>construct<sp/>v1<sp/>as<sp/>a<sp/>reference<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>//<sp/>selected<sp/>elements<sp/>of<sp/>v0,<sp/>using<sp/>(among<sp/>other<sp/>things)<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>//<sp/>callback<sp/>to<sp/>the<sp/>slicer<sp/>it<sp/>was<sp/>passed<sp/>(above,<sp/>in<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>//<sp/>construction<sp/>of<sp/>v1.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>//<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>IPosition<sp/>start,<sp/>end,<sp/>stride;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>fullSliceInformation<sp/>=<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>slicer.inferShapeFromSource<sp/>(MyVector::shape(),<sp/>start,<sp/>end,<sp/>stride);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>//<sp/>now<sp/>the<sp/>MyVector<sp/>instance<sp/>knows<sp/>everything<sp/>it<sp/>needs<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>//<sp/>construct<sp/>the<sp/>instance.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;/srcblock&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Please<sp/>note<sp/>that<sp/>v1<sp/>will<sp/>have<sp/>a<sp/>length<sp/>of<sp/>90,<sp/>and<sp/>refer<sp/>to<sp/>elements</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="comment">//<sp/>10-99<sp/>of<sp/>v0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;note<sp/>role=warning&gt;<sp/>An<sp/>exception<sp/>will<sp/>be<sp/>thrown<sp/>if<sp/>the<sp/>positions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>defined<sp/>in<sp/>the<sp/>Slicer<sp/>exceed<sp/>the<sp/>source<sp/>array&apos;s<sp/>shape.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;/note&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;/synopsis&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;example&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Given<sp/>a<sp/>large<sp/>image,<sp/>4k<sp/>on<sp/>a<sp/>side,<sp/>extract<sp/>(by<sp/>sampling)<sp/>an<sp/>image</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="comment">//<sp/>1k<sp/>on<sp/>a<sp/>side,<sp/>but<sp/>covering<sp/>the<sp/>same<sp/>region<sp/>as<sp/>the<sp/>original.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;srcblock&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Image<sp/>&lt;float&gt;<sp/><sp/>image<sp/>(&quot;N5364.fits&quot;);<sp/><sp/><sp/>//<sp/>a<sp/>4-d<sp/>VLA<sp/>map,<sp/>4096<sp/>x<sp/>4096<sp/>x<sp/>3<sp/>x<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>IPosition<sp/>start<sp/>(4,0,0,0,0),<sp/>stride<sp/>(4,4,4,1,1);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>IPosition<sp/>end<sp/><sp/><sp/>(4,<sp/>Slicer::MimicSource,<sp/>Slicer::MimicSource,<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Slicer::MimicSource,<sp/>Slicer::MimicSource);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Slicer<sp/>smartSlicer<sp/>(start,<sp/>end,<sp/>stride);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>//<sp/>assume<sp/>proper<sp/>declarations...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Image<sp/>&lt;float&gt;<sp/>subImage<sp/>=<sp/>image<sp/>(smartSlicer);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;/srcblock&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;/example&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;motivation&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Slicer<sp/>is<sp/>particularly<sp/>convenient<sp/>for<sp/>designers<sp/>of<sp/>other<sp/>library</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="comment">//<sp/>classes:<sp/>Array<sp/>and<sp/>Image,<sp/>for<sp/>example.<sp/>(In<sp/>fact,<sp/>this<sp/>convenience<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="comment">//<sp/>was<sp/>the<sp/>original<sp/>motivation<sp/>for<sp/>the<sp/>class.)<sp/><sp/>The<sp/>benefit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="comment">//<sp/>is<sp/>this:<sp/><sp/>the<sp/>application<sp/>programmer,<sp/>who<sp/>needs<sp/>a<sp/>slice<sp/>of<sp/>an<sp/>Array,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="comment">//<sp/>may<sp/>provide<sp/>slicing<sp/>specifications<sp/>in<sp/>many<sp/>different<sp/>ways,<sp/>but<sp/>the<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Array<sp/>class<sp/>author<sp/>needs<sp/>to<sp/>provide<sp/>only<sp/>one<sp/>member<sp/>function<sp/>to<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="comment">//<sp/>return<sp/>the<sp/>slice.<sp/><sp/>The<sp/>Slicer<sp/>class,<sp/>in<sp/>effect,<sp/>and<sp/>with<sp/>its</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="comment">//<sp/>many<sp/>constructors,<sp/>provides<sp/>a<sp/>way<sp/>to<sp/>funnel<sp/>all<sp/>of<sp/>the<sp/>variety</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight><highlight class="comment">//<sp/>into<sp/>a<sp/>single<sp/>member<sp/>function<sp/>call<sp/>to<sp/>the<sp/>array<sp/>or<sp/>image<sp/>class.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="comment">//<sp/>For<sp/>example,<sp/>imagine<sp/>a<sp/>100<sp/>x<sp/>100<sp/>x<sp/>100<sp/>array<sp/>from<sp/>which<sp/>you<sp/>want<sp/>to<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="comment">//<sp/>extract<sp/>various<sp/>subarrays.<sp/><sp/>Here<sp/>are<sp/>some<sp/>of<sp/>the<sp/>ways<sp/>you<sp/>might</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="comment">//<sp/>specify<sp/>the<sp/>the<sp/>subarray<sp/>in<sp/>the<sp/>-absence-<sp/>of<sp/>Slicer.<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;srcblock&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>//<sp/>preliminaries:<sp/>create<sp/>a<sp/>cube<sp/>and<sp/>assign<sp/>values<sp/>to<sp/>all<sp/>elements<sp/>--</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>//<sp/><sp/>this<sp/>will<sp/>be<sp/>&quot;source&quot;<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Cube<sp/>&lt;int&gt;<sp/>bigCube<sp/>(IPosition<sp/>(3,<sp/>100,<sp/>100,<sp/>100));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>assignValues<sp/>(bigCube);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>//<sp/>declare<sp/>a<sp/>smaller<sp/>cube,<sp/>the<sp/>destination<sp/>array.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Cube<sp/>&lt;int&gt;<sp/>smallCube<sp/>(IPosition<sp/>(3,<sp/>10,<sp/>10,<sp/>10));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>//<sp/><sp/>example<sp/>1:<sp/>use<sp/>Slice<sp/>objects<sp/>to<sp/>extract<sp/>a<sp/>subcube<sp/>--<sp/>the<sp/>first</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>//<sp/><sp/><sp/>ten<sp/>elements<sp/>along<sp/>each<sp/>axis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Slice<sp/>xIndices<sp/>(0,10,1),<sp/>yIndices<sp/>(0,10,1),<sp/>zIndices<sp/>(0,10,1);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>smallCube<sp/>=<sp/>bigCube<sp/>(xIndices,<sp/>yIndices,<sp/>zIndices);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>//<sp/>example<sp/>2:<sp/>get<sp/>the<sp/>same<sp/>subcube<sp/>using<sp/>three<sp/>IPosition<sp/>arguments</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>IPosition<sp/>start<sp/>(3,0,0,0),<sp/>end<sp/>(3,10,10,10),<sp/>stride<sp/>(3,1,1,1);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>smallCube<sp/>=<sp/>bigCube<sp/>(start,<sp/>end,<sp/>stride);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>//<sp/>example<sp/>3:<sp/>use<sp/>2<sp/>IPositions,<sp/>letting<sp/>the<sp/>3rd<sp/>(stride)<sp/>default<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IPosition<sp/>(3,1,1,1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>smallCube<sp/>=<sp/>bigCube<sp/>(start,<sp/>end);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;/srcblock&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight><highlight class="comment">//<sp/>So<sp/>the<sp/>Cube<sp/>class<sp/>(together<sp/>with<sp/>its<sp/>base<sp/>class)<sp/>must<sp/>define<sp/>three<sp/>separate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="comment">//<sp/>member<sp/>functions<sp/>for<sp/>the<sp/>essentially<sp/>identical<sp/>operation<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="comment">//<sp/>extracting<sp/>a<sp/>subcube.<sp/><sp/>The<sp/>same<sp/>replication<sp/>is<sp/>also<sp/>required<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Image,<sp/>Array,<sp/>and<sp/>the<sp/>other<sp/>Array<sp/>subclasses<sp/>(Matrix<sp/>and<sp/>Vector).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>Slicer<sp/>class<sp/>collapses<sp/>all<sp/>of<sp/>this<sp/>into<sp/>a<sp/>single<sp/>member</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight><highlight class="comment">//<sp/>function<sp/>per<sp/>class:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;srcblock&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Slicer<sp/>slicer<sp/>=<sp/>(call<sp/>the<sp/>constructor<sp/>that<sp/>best<sp/>suits<sp/>your<sp/>problem)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>smallCube<sp/>=<sp/>bigCube<sp/>(slicer);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;/srcblock&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight><highlight class="comment">//<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Since<sp/>there<sp/>are<sp/>many<sp/>constructors<sp/>available<sp/>for<sp/>Slicer,<sp/>you</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight><highlight class="comment">//<sp/>can<sp/>still<sp/>specify<sp/>the<sp/>subarray<sp/>that<sp/>you<sp/>may<sp/>want<sp/>in<sp/>a<sp/>number<sp/>of<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight><highlight class="comment">//<sp/>different<sp/>ways,<sp/>by<sp/>constructing<sp/>the<sp/>Slicer<sp/>in<sp/>the<sp/>way<sp/>most<sp/>natural</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>your<sp/>circumstances.<sp/><sp/>You<sp/>then<sp/>pass<sp/>the<sp/>Slicer<sp/>to<sp/>the<sp/>array,<sp/>and<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>will<sp/>get<sp/>back<sp/>the<sp/>slice<sp/>you<sp/>want.<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>class<sp/>also<sp/>offers<sp/>the<sp/>application<sp/>programmer<sp/>considerable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="comment">//<sp/>flexibility<sp/>by<sp/>allowing<sp/>the<sp/>shape<sp/>of<sp/>the<sp/>source<sp/>array<sp/>to<sp/>determine</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight><highlight class="comment">//<sp/>some<sp/>of<sp/>the<sp/>slice<sp/>specification.<sp/><sp/>This<sp/>benefit<sp/>is<sp/>explained<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight><highlight class="comment">//<sp/>demonstrated<sp/>above.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;/motivation&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;todo<sp/>asof=&quot;1994/07/01&quot;&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>&lt;li&gt;<sp/>This<sp/>class,<sp/>and<sp/>the<sp/>TableArray,<sp/>Array<sp/>and<sp/>Image<sp/>classes,<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>could<sp/>allow<sp/>for<sp/>the<sp/>extraction<sp/>of<sp/>a<sp/>subarray<sp/>with<sp/>fewer<sp/>axes<sp/>than<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>source<sp/>array.<sp/><sp/>At<sp/>present,<sp/>for<sp/>example,<sp/>you<sp/>cannot,<sp/>directly<sp/>slice</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>a<sp/>matrix<sp/>from<sp/>a<sp/>cube.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;/todo&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286" refid="classcasacore_1_1Slicer" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcasacore_1_1Slicer" kindref="compound">Slicer</ref></highlight></codeline>
<codeline lineno="287"><highlight class="normal">{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Define<sp/>the<sp/>&quot;MimicSource&quot;<sp/>value<sp/>which<sp/>defines<sp/>the<sp/>open<sp/>start<sp/>or<sp/>end.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>value<sp/>should<sp/>be<sp/>different<sp/>from<sp/>MIN_INT<sp/>in<sp/>IPosition.h.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>It<sp/>should<sp/>also<sp/>not<sp/>be<sp/>the<sp/>lowest<sp/>possible<sp/>value,<sp/>since<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>will<sp/>probably<sp/>be<sp/>used<sp/>as<sp/>an<sp/>undefined<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>It<sp/>must<sp/>be<sp/>a<sp/>negative<sp/>number.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295" refid="classcasacore_1_1Slicer_1a43f8cf5de164407e56e5287a8ac8096ea5fa4635ffe964d41cc6b85511cf1e1ac" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{<ref refid="classcasacore_1_1Slicer_1a43f8cf5de164407e56e5287a8ac8096ea5fa4635ffe964d41cc6b85511cf1e1ac" kindref="member">MimicSource</ref>=<sp/>-2147483646};</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Define<sp/>the<sp/>possible<sp/>interpretations<sp/>of<sp/>the<sp/>end-value.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298" refid="classcasacore_1_1Slicer_1ace71c7757c3178383092f96abb130dff" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="classcasacore_1_1Slicer_1ace71c7757c3178383092f96abb130dff" kindref="member">LengthOrLast</ref><sp/>{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>end-values<sp/>given<sp/>in<sp/>the<sp/>constructor<sp/>define<sp/>the<sp/>lengths.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300" refid="classcasacore_1_1Slicer_1ace71c7757c3178383092f96abb130dffaf0a279489758b824c9e53174d0fa43e4" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classcasacore_1_1Slicer_1ace71c7757c3178383092f96abb130dffaf0a279489758b824c9e53174d0fa43e4" kindref="member">endIsLength</ref>,</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>end-values<sp/>given<sp/>in<sp/>the<sp/>constructor<sp/>define<sp/>the<sp/>trc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><ref refid="classcasacore_1_1Slicer_1ace71c7757c3178383092f96abb130dffa65c6983017a826e890b7d04b6bcd303a" kindref="member">endIsLast</ref></highlight></codeline>
<codeline lineno="303" refid="classcasacore_1_1Slicer_1ace71c7757c3178383092f96abb130dffa65c6983017a826e890b7d04b6bcd303a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Construct<sp/>a<sp/>1-dimensional<sp/>Slicer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Start<sp/>and<sp/>end<sp/>are<sp/>inferred<sp/>from<sp/>the<sp/>source;<sp/>stride=1.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&quot;endIsLength&quot;<sp/>and<sp/>&quot;endIsLast&quot;<sp/>are<sp/>identical<sp/>here,<sp/>so<sp/>there&apos;s</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>need<sp/>to<sp/>discriminate<sp/>between<sp/>them<sp/>by<sp/>using<sp/>a<sp/>default<sp/>parameter.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcasacore_1_1Slicer_1ac42f9a8c2f4e59f7bea70eb8291edacd" kindref="member">Slicer</ref>();</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>member<sp/>function<sp/>&lt;src&gt;inferShapeFromSource&lt;/src&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(invoked<sp/>as<sp/>a<sp/>callback<sp/>by<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>source<sp/>array)<sp/>will<sp/>use<sp/>the<sp/>shape<sp/>of<sp/>the<sp/>source<sp/>array<sp/>for<sp/>the<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>unspecified<sp/>values:<sp/><sp/>IPosition<sp/>elements<sp/>with<sp/>the<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>Slicer::MimicSource</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&lt;thrown&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>&lt;li&gt;<sp/>ArraySlicerError</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&lt;/thrown&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>Slicer<sp/>with<sp/>a<sp/>given<sp/>start,<sp/>end<sp/>(or<sp/>length),<sp/>and<sp/>stride.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>An<sp/>exception<sp/>will<sp/>be<sp/>thrown<sp/>if<sp/>a<sp/>negative<sp/>length<sp/>or<sp/>non-positive</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>stride<sp/>is<sp/>given<sp/>or<sp/>if<sp/>the<sp/>IPositions<sp/>start,<sp/>end,<sp/>and<sp/>stride</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>do<sp/>not<sp/>have<sp/>the<sp/>same<sp/>dimensionality.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>length<sp/>or<sp/>stride<sp/>is<sp/>not<sp/>given,<sp/>they<sp/>default<sp/>to<sp/>1.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&lt;br&gt;<sp/>It<sp/>is<sp/>possible<sp/>to<sp/>leave<sp/>values<sp/>in<sp/>start<sp/>and<sp/>end<sp/>undefined</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>by<sp/>giving<sp/>the<sp/>value<sp/>&lt;src&gt;MimicSource&lt;/src&gt;.<sp/>They<sp/>can<sp/>be<sp/>filled</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>later<sp/>with<sp/>the<sp/>actual<sp/>array<sp/>shape<sp/>using<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&lt;src&gt;inferShapeFromSource&lt;/src&gt;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&lt;group&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcasacore_1_1Slicer_1ac42f9a8c2f4e59f7bea70eb8291edacd" kindref="member">Slicer</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcasacore_1_1IPosition" kindref="compound">IPosition</ref>&amp;<sp/><ref refid="classcasacore_1_1Slicer_1a9a10c62448f3eedc99202afc62cfd55e" kindref="member">start</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcasacore_1_1IPosition" kindref="compound">IPosition</ref>&amp;<sp/><ref refid="classcasacore_1_1Slicer_1a41c75d6e6f1af66afd1914fede301bdd" kindref="member">end</ref>,<sp/></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcasacore_1_1IPosition" kindref="compound">IPosition</ref>&amp;<sp/><ref refid="classcasacore_1_1Slicer_1a61fb124788968fdd72c4197fce2a1e14" kindref="member">stride</ref>,<sp/></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcasacore_1_1Slicer_1ace71c7757c3178383092f96abb130dff" kindref="member">LengthOrLast</ref><sp/>endInterpretation<sp/>=<sp/><ref refid="classcasacore_1_1Slicer_1ace71c7757c3178383092f96abb130dffaf0a279489758b824c9e53174d0fa43e4" kindref="member">endIsLength</ref>);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcasacore_1_1Slicer_1ac42f9a8c2f4e59f7bea70eb8291edacd" kindref="member">Slicer</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcasacore_1_1IPosition" kindref="compound">IPosition</ref>&amp;<sp/><ref refid="classcasacore_1_1Slicer_1a9a10c62448f3eedc99202afc62cfd55e" kindref="member">start</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcasacore_1_1IPosition" kindref="compound">IPosition</ref>&amp;<sp/><ref refid="classcasacore_1_1Slicer_1a41c75d6e6f1af66afd1914fede301bdd" kindref="member">end</ref>,</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcasacore_1_1Slicer_1ace71c7757c3178383092f96abb130dff" kindref="member">LengthOrLast</ref><sp/>endInterpretation<sp/>=<sp/><ref refid="classcasacore_1_1Slicer_1ace71c7757c3178383092f96abb130dffaf0a279489758b824c9e53174d0fa43e4" kindref="member">endIsLength</ref>);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classcasacore_1_1Slicer_1ac42f9a8c2f4e59f7bea70eb8291edacd" kindref="member">Slicer</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcasacore_1_1IPosition" kindref="compound">IPosition</ref>&amp;<sp/><ref refid="classcasacore_1_1Slicer_1a9a10c62448f3eedc99202afc62cfd55e" kindref="member">start</ref>);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&lt;/group&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>Slicer<sp/>object<sp/>from<sp/>Slice<sp/>objects.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>a<sp/>Slice<sp/>object<sp/>one<sp/>defines<sp/>the<sp/>start,<sp/>length,<sp/>and<sp/>stride<sp/>for<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>one<sp/>axis.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>default<sp/>Slice<sp/>constructor<sp/>(called<sp/>with<sp/>no<sp/>arguments)<sp/>creates</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>Slice<sp/>with<sp/>start<sp/>and<sp/>length<sp/>equal<sp/>to<sp/>zero,<sp/>and<sp/>an<sp/>undefined<sp/>stride.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&lt;group&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>Slicer<sp/>for<sp/>a<sp/>1-dimensional<sp/>array.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcasacore_1_1Slicer_1ac42f9a8c2f4e59f7bea70eb8291edacd" kindref="member">Slicer</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcasacore_1_1Slice" kindref="compound">Slice</ref>&amp;<sp/>x,<sp/><ref refid="classcasacore_1_1Slicer_1ace71c7757c3178383092f96abb130dff" kindref="member">LengthOrLast</ref><sp/>endInterpretation<sp/>=<sp/><ref refid="classcasacore_1_1Slicer_1ace71c7757c3178383092f96abb130dffaf0a279489758b824c9e53174d0fa43e4" kindref="member">endIsLength</ref>);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>Slicer<sp/>for<sp/>a<sp/>2-dim<sp/>array.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcasacore_1_1Slicer_1ac42f9a8c2f4e59f7bea70eb8291edacd" kindref="member">Slicer</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcasacore_1_1Slice" kindref="compound">Slice</ref>&amp;<sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcasacore_1_1Slice" kindref="compound">Slice</ref>&amp;<sp/>y,<sp/></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcasacore_1_1Slicer_1ace71c7757c3178383092f96abb130dff" kindref="member">LengthOrLast</ref><sp/>endInterpretation<sp/>=<sp/><ref refid="classcasacore_1_1Slicer_1ace71c7757c3178383092f96abb130dffaf0a279489758b824c9e53174d0fa43e4" kindref="member">endIsLength</ref>);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>Slicer<sp/>for<sp/>a<sp/>3-dim<sp/>array.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcasacore_1_1Slicer_1ac42f9a8c2f4e59f7bea70eb8291edacd" kindref="member">Slicer</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcasacore_1_1Slice" kindref="compound">Slice</ref>&amp;<sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcasacore_1_1Slice" kindref="compound">Slice</ref>&amp;<sp/>y,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcasacore_1_1Slice" kindref="compound">Slice</ref>&amp;<sp/>z,</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcasacore_1_1Slicer_1ace71c7757c3178383092f96abb130dff" kindref="member">LengthOrLast</ref><sp/>endInterpretation<sp/>=<sp/><ref refid="classcasacore_1_1Slicer_1ace71c7757c3178383092f96abb130dffaf0a279489758b824c9e53174d0fa43e4" kindref="member">endIsLength</ref>);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&lt;/group&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Equality</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classcasacore_1_1Slicer_1ad0649db54c3cc342f44ae1d2c4fb0b29" kindref="member">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcasacore_1_1Slicer" kindref="compound">Slicer</ref>&amp;)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>the<sp/>number<sp/>of<sp/>dimensions<sp/>of<sp/>the<sp/>Slicer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classcasacore_1_1Slicer_1ae58490ebee46185eec07db5f63d9fb9e" kindref="member">ndim</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>function<sp/>checks<sp/>all<sp/>of<sp/>the<sp/>start,<sp/>length<sp/>(or<sp/>end),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>stride<sp/>IPositions,<sp/>and<sp/>fills<sp/>in<sp/>missing<sp/>values<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>getting<sp/>the<sp/>corresponding<sp/>values<sp/>from<sp/>the<sp/>shape<sp/>of<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>source<sp/>array.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>These<sp/>will<sp/>first<sp/>be<sp/>resized,<sp/>if<sp/>necessary.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If,<sp/>for<sp/>a<sp/>given<sp/>axis,<sp/>(end<sp/>&lt;<sp/>start)<sp/>,<sp/>it<sp/>means<sp/>that<sp/>a<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>length<sp/>of<sp/>zero<sp/>was<sp/>specified.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>An<sp/>exception<sp/>is<sp/>thrown<sp/>if<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>start,<sp/>end,<sp/>or<sp/>length<sp/>exceeds<sp/>the<sp/>array<sp/>shape<sp/>or<sp/>if<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>dimensionality<sp/>of<sp/>the<sp/>array<sp/>and<sp/>Slicer<sp/>do<sp/>not<sp/>conform.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&lt;thrown&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>&lt;li&gt;<sp/>ArraySlicerError</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&lt;/thrown&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcasacore_1_1IPosition" kindref="compound">IPosition</ref><sp/><ref refid="classcasacore_1_1Slicer_1af4f95650e0dbd61b91727c4b493a9b73" kindref="member">inferShapeFromSource</ref><sp/></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcasacore_1_1IPosition" kindref="compound">IPosition</ref>&amp;<sp/><ref refid="namespacecasacore_1a6c80d55c1617e8540e006c12e3dc990c" kindref="member">shape</ref>,<sp/><ref refid="classcasacore_1_1IPosition" kindref="compound">IPosition</ref>&amp;<sp/>startResult,</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcasacore_1_1IPosition" kindref="compound">IPosition</ref>&amp;<sp/>endResult,<sp/><ref refid="classcasacore_1_1IPosition" kindref="compound">IPosition</ref>&amp;<sp/>strideResult)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Report<sp/>the<sp/>defined<sp/>starting<sp/>position.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcasacore_1_1IPosition" kindref="compound">IPosition</ref>&amp;<sp/><ref refid="classcasacore_1_1Slicer_1a9a10c62448f3eedc99202afc62cfd55e" kindref="member">start</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Report<sp/>the<sp/>defined<sp/>ending<sp/>position.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcasacore_1_1IPosition" kindref="compound">IPosition</ref>&amp;<sp/><ref refid="classcasacore_1_1Slicer_1a41c75d6e6f1af66afd1914fede301bdd" kindref="member">end</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Report<sp/>the<sp/>defined<sp/>stride.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcasacore_1_1IPosition" kindref="compound">IPosition</ref>&amp;<sp/><ref refid="classcasacore_1_1Slicer_1a61fb124788968fdd72c4197fce2a1e14" kindref="member">stride</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Report<sp/>the<sp/>length<sp/>of<sp/>the<sp/>resulting<sp/>axes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcasacore_1_1IPosition" kindref="compound">IPosition</ref>&amp;<sp/><ref refid="classcasacore_1_1Slicer_1a0b08df7d6181a6850c34ece0a4375027" kindref="member">length</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Are<sp/>all<sp/>values<sp/>fixed<sp/>(i.e.,<sp/>no<sp/>MimicSource<sp/>given)?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classcasacore_1_1Slicer_1abd85c036101bdac4ba537fd6acc2b94b" kindref="member">isFixed</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>start<sp/>and<sp/>end<sp/>positions.<sp/>No<sp/>explicit<sp/>checking<sp/>is<sp/>done<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>input<sp/>parameters<sp/>make<sp/>sense,<sp/>so<sp/>you<sp/>must<sp/>be<sp/>certain<sp/>if<sp/>you</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>call<sp/>these.<sp/>These<sp/>are<sp/>useful<sp/>if<sp/>you<sp/>have<sp/>a<sp/>loop<sp/>with<sp/>many<sp/>iterations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>you<sp/>do<sp/>not<sp/>wish<sp/>the<sp/>overhead<sp/>of<sp/>creating<sp/>a<sp/>new<sp/>Slicer<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>each<sp/>iteration<sp/>if<sp/>the<sp/>only<sp/>thing<sp/>you<sp/>are<sp/>doing<sp/>is<sp/>adjusting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>start<sp/>and<sp/>end<sp/>positions.<sp/>Other<sp/>than<sp/>for<sp/>performance<sp/>reasons,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>these<sp/>methods<sp/>should<sp/>not<sp/>be<sp/>called<sp/>and<sp/>you<sp/>should<sp/>prefer<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>error<sp/>checking<sp/>provided<sp/>by<sp/>constructing<sp/>a<sp/>new<sp/>Slicer<sp/>object.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>the<sp/>length<sp/>is<sp/>not<sp/>updated,<sp/>so<sp/>in<sp/>principle<sp/>care<sp/>should</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>be<sp/>taken<sp/>that<sp/>the<sp/>length<sp/>does<sp/>not<sp/>change.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&lt;group&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404" refid="classcasacore_1_1Slicer_1af569de28ec46ee36e6e848f696da978c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcasacore_1_1Slicer_1af569de28ec46ee36e6e848f696da978c" kindref="member">setStart</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcasacore_1_1IPosition" kindref="compound">IPosition</ref>&amp;<sp/><ref refid="classcasacore_1_1Slicer_1a9a10c62448f3eedc99202afc62cfd55e" kindref="member">start</ref>)</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>start_p<sp/>=<sp/><ref refid="classcasacore_1_1Slicer_1a9a10c62448f3eedc99202afc62cfd55e" kindref="member">start</ref>;<sp/>}</highlight></codeline>
<codeline lineno="406" refid="classcasacore_1_1Slicer_1a37f7b15cdabbdf3e347cf67b5785125f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcasacore_1_1Slicer_1a37f7b15cdabbdf3e347cf67b5785125f" kindref="member">setEnd</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcasacore_1_1IPosition" kindref="compound">IPosition</ref>&amp;<sp/><ref refid="classcasacore_1_1Slicer_1a41c75d6e6f1af66afd1914fede301bdd" kindref="member">end</ref>)</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>end_p<sp/>=<sp/><ref refid="classcasacore_1_1Slicer_1a41c75d6e6f1af66afd1914fede301bdd" kindref="member">end</ref>;<sp/>}</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&lt;/group&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcasacore_1_1Slicer_1ace71c7757c3178383092f96abb130dff" kindref="member">LengthOrLast</ref><sp/>asEnd_p;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcasacore_1_1IPosition" kindref="compound">IPosition</ref><sp/><sp/><sp/><sp/>start_p;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcasacore_1_1IPosition" kindref="compound">IPosition</ref><sp/><sp/><sp/><sp/>end_p;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcasacore_1_1IPosition" kindref="compound">IPosition</ref><sp/><sp/><sp/><sp/>stride_p;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcasacore_1_1IPosition" kindref="compound">IPosition</ref><sp/><sp/><sp/><sp/>len_p;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Length<sp/>of<sp/>input</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fixed_p;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>MimicSource<sp/>used</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Define<sp/>a<sp/>private<sp/>constructor<sp/>taking<sp/>an<sp/>ssize_t.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>to<sp/>prevent<sp/>the<sp/>user<sp/>from<sp/>the<sp/>unexpected<sp/>and<sp/>meaningless</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Slicer<sp/>that<sp/>would<sp/>result<sp/>when<sp/>the<sp/>ssize_t<sp/>argument<sp/>is<sp/>promoted<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>an<sp/>IPosition.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Slicer<sp/>(ssize_t);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>the<sp/>given<sp/>start,<sp/>end/length<sp/>and<sp/>stride.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fill<sp/>in<sp/>the<sp/>length<sp/>or<sp/>end.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>It<sp/>also<sp/>calls<sp/>&lt;src&gt;fillFixed&lt;/src&gt;<sp/>to<sp/>fill<sp/>the<sp/>fixed<sp/>flag.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>fillEndLen();</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fill<sp/>in<sp/>start,<sp/>len<sp/>and<sp/>stride<sp/>from<sp/>a<sp/>Slice.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>fillSlice<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcasacore_1_1Slice" kindref="compound">Slice</ref>&amp;,<sp/>ssize_t&amp;<sp/><ref refid="classcasacore_1_1Slicer_1a9a10c62448f3eedc99202afc62cfd55e" kindref="member">start</ref>,<sp/>ssize_t&amp;<sp/><ref refid="classcasacore_1_1Slicer_1a0b08df7d6181a6850c34ece0a4375027" kindref="member">length</ref>,</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ssize_t&amp;<sp/><ref refid="classcasacore_1_1Slicer_1a61fb124788968fdd72c4197fce2a1e14" kindref="member">stride</ref>);</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fill<sp/>the<sp/>fixed<sp/>flag.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>fillFixed();</highlight></codeline>
<codeline lineno="436"><highlight class="normal">};</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;summary&gt;IO<sp/>functions<sp/>for<sp/>Slicer&apos;s&lt;/summary&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;group<sp/>name=&quot;Slicer<sp/>IO&quot;&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Print<sp/>the<sp/>contents<sp/>of<sp/>the<sp/>specified<sp/>Slicer<sp/>to<sp/>the<sp/>specified<sp/>stream.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal">std::ostream&amp;<sp/><ref refid="namespacecasacore_1a08cdb492fb27dc0681d28cbc2f188c52" kindref="member">operator &lt;&lt; </ref>(std::ostream&amp;<sp/>stream,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Slicer&amp;<sp/>slicer);</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;/group&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal">std::string<sp/><ref refid="namespacecasacore_1a7dca4cd157d0dcbdf6f665bb905f0369" kindref="member">to_string</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Slicer&amp;<sp/>slicer);</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447" refid="classcasacore_1_1Slicer_1ae58490ebee46185eec07db5f63d9fb9e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classcasacore_1_1Slicer_1ae58490ebee46185eec07db5f63d9fb9e" kindref="member">Slicer::ndim</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="448"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>start_p.<ref refid="classcasacore_1_1IPosition_1a7d1113af4a5f90758a992dd0127c650c" kindref="member">nelements</ref>();<sp/>}</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="450" refid="classcasacore_1_1Slicer_1a9a10c62448f3eedc99202afc62cfd55e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcasacore_1_1IPosition" kindref="compound">IPosition</ref>&amp;<sp/><ref refid="classcasacore_1_1Slicer_1a9a10c62448f3eedc99202afc62cfd55e" kindref="member">Slicer::start</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="451"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>start_p;<sp/>}</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="453" refid="classcasacore_1_1Slicer_1a41c75d6e6f1af66afd1914fede301bdd" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcasacore_1_1IPosition" kindref="compound">IPosition</ref>&amp;<sp/><ref refid="classcasacore_1_1Slicer_1a41c75d6e6f1af66afd1914fede301bdd" kindref="member">Slicer::end</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="454"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>end_p;<sp/>}</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="456" refid="classcasacore_1_1Slicer_1a61fb124788968fdd72c4197fce2a1e14" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcasacore_1_1IPosition" kindref="compound">IPosition</ref>&amp;<sp/><ref refid="classcasacore_1_1Slicer_1a61fb124788968fdd72c4197fce2a1e14" kindref="member">Slicer::stride</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="457"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stride_p;<sp/>}</highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight></codeline>
<codeline lineno="459" refid="classcasacore_1_1Slicer_1a0b08df7d6181a6850c34ece0a4375027" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcasacore_1_1IPosition" kindref="compound">IPosition</ref>&amp;<sp/><ref refid="classcasacore_1_1Slicer_1a0b08df7d6181a6850c34ece0a4375027" kindref="member">Slicer::length</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="460"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>len_p;<sp/>}</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462" refid="classcasacore_1_1Slicer_1abd85c036101bdac4ba537fd6acc2b94b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classcasacore_1_1Slicer_1abd85c036101bdac4ba537fd6acc2b94b" kindref="member">Slicer::isFixed</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="463"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fixed_p;<sp/>}</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal">}<sp/></highlight><highlight class="comment">//#<sp/>NAMESPACE<sp/>CASACORE<sp/>-<sp/>END</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="casa/Arrays/Slicer.h"/>
  </compounddef>
</doxygen>
