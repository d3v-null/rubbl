<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="MultiFile_8h" kind="file" language="C++">
    <compoundname>MultiFile.h</compoundname>
    <includes refid="aips_8h" local="no">casacore/casa/aips.h</includes>
    <includes refid="MultiFileBase_8h" local="no">casacore/casa/IO/MultiFileBase.h</includes>
    <includes local="no">memory</includes>
    <includedby refid="MultiFile_8cc" local="no">casa/IO/MultiFile.cc</includedby>
    <includedby refid="MultiFileBase_8cc" local="no">casa/IO/MultiFileBase.cc</includedby>
    <includedby refid="MultiHDF5_8h" local="no">casa/IO/MultiHDF5.h</includedby>
    <includedby refid="lsmf_8cc" local="no">tables/apps/lsmf.cc</includedby>
    <includedby refid="tomf_8cc" local="no">tables/apps/tomf.cc</includedby>
    <includedby refid="ColumnSet_8cc" local="no">tables/Tables/ColumnSet.cc</includedby>
    <incdepgraph>
      <node id="3">
        <label>casacore/casa/aipsenv.h</label>
        <link refid="aipsenv_8h"/>
      </node>
      <node id="7">
        <label>casacore/casa/IO/MultiFileBase.h</label>
        <link refid="MultiFileBase_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>casacore/casa/iostream.h</label>
        <link refid="iostream_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>casa/IO/MultiFile.h</label>
        <link refid="MultiFile_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>casacore/casa/iosfwd.h</label>
        <link refid="iosfwd_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>casacore/casa/aipstype.h</label>
        <link refid="aipstype_8h"/>
      </node>
      <node id="11">
        <label>casacore/casa/iosstrfwd.h</label>
        <link refid="iosstrfwd_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>string</label>
      </node>
      <node id="8">
        <label>casacore/casa/IO/ByteIO.h</label>
        <link refid="ByteIO_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>casacore/casa/aips.h</label>
        <link refid="aips_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>ostream</label>
      </node>
      <node id="20">
        <label>vector</label>
      </node>
      <node id="17">
        <label>sstream</label>
      </node>
      <node id="18">
        <label>casacore/casa/ostream.h</label>
        <link refid="ostream_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>iosfwd</label>
      </node>
      <node id="16">
        <label>iostream</label>
      </node>
      <node id="6">
        <label>casacore/casa/aipsdef.h</label>
        <link refid="aipsdef_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>casacore/casa/sstream.h</label>
        <link refid="sstream_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>casacore/casa/aipsxtype.h</label>
        <link refid="aipsxtype_8h"/>
      </node>
      <node id="9">
        <label>casacore/casa/BasicSL/String.h</label>
        <link refid="String_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="7">
        <label>tables/apps/tomf.cc</label>
        <link refid="tomf_8cc"/>
      </node>
      <node id="1">
        <label>casa/IO/MultiFile.h</label>
        <link refid="MultiFile_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>tables/Tables/ColumnSet.cc</label>
        <link refid="ColumnSet_8cc"/>
      </node>
      <node id="6">
        <label>tables/apps/lsmf.cc</label>
        <link refid="lsmf_8cc"/>
      </node>
      <node id="5">
        <label>casa/IO/MultiHDF5.cc</label>
        <link refid="MultiHDF5_8cc"/>
      </node>
      <node id="2">
        <label>casa/IO/MultiFile.cc</label>
        <link refid="MultiFile_8cc"/>
      </node>
      <node id="4">
        <label>casa/IO/MultiHDF5.h</label>
        <link refid="MultiHDF5_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>casa/IO/MultiFileBase.cc</label>
        <link refid="MultiFileBase_8cc"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classcasacore_1_1MultiFile" prot="public">casacore::MultiFile</innerclass>
    <innernamespace refid="namespacecasacore">casacore</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//#<sp/>MultiFile.h:<sp/>Class<sp/>to<sp/>combine<sp/>multiple<sp/>files<sp/>in<sp/>a<sp/>single<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>Copyright<sp/>(C)<sp/>2014</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>Associated<sp/>Universities,<sp/>Inc.<sp/>Washington<sp/>DC,<sp/>USA.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>This<sp/>library<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Library<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>2<sp/>of<sp/>the<sp/>License,<sp/>or<sp/>(at<sp/>your</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>This<sp/>library<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,<sp/>but<sp/>WITHOUT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of<sp/>MERCHANTABILITY<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the<sp/>GNU<sp/>Library<sp/>General<sp/>Public</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>License<sp/>for<sp/>more<sp/>details.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Library<sp/>General<sp/>Public<sp/>License</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>along<sp/>with<sp/>this<sp/>library;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software<sp/>Foundation,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>Inc.,<sp/>675<sp/>Massachusetts<sp/>Ave,<sp/>Cambridge,<sp/>MA<sp/>02139,<sp/>USA.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>Correspondence<sp/>concerning<sp/>AIPS++<sp/>should<sp/>be<sp/>addressed<sp/>as<sp/>follows:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Internet<sp/>email:<sp/>casa-feedback@nrao.edu.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Postal<sp/>address:<sp/>AIPS++<sp/>Project<sp/>Office</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>National<sp/>Radio<sp/>Astronomy<sp/>Observatory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>520<sp/>Edgemont<sp/>Road</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Charlottesville,<sp/>VA<sp/>22903-2475<sp/>USA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>CASA_MULTIFILE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CASA_MULTIFILE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>Includes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="aips_8h" kindref="compound">casacore/casa/aips.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="MultiFileBase_8h" kindref="compound">casacore/casa/IO/MultiFileBase.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacecasacore" kindref="compound">casacore</ref><sp/>{<sp/></highlight><highlight class="comment">//#<sp/>NAMESPACE<sp/>CASACORE<sp/>-<sp/>BEGIN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//#<sp/>Forward<sp/>declarations.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ByteIO;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">CanonicalIO;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">MemoryIO;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>&lt;summary&gt;<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Class<sp/>to<sp/>combine<sp/>multiple<sp/>files<sp/>in<sp/>a<sp/>single<sp/>one.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>&lt;/summary&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>&lt;use<sp/>visibility=export&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>&lt;reviewed<sp/>reviewer=&quot;&quot;<sp/>date=&quot;&quot;<sp/>tests=&quot;tMultiFile&quot;<sp/>demos=&quot;&quot;&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>&lt;/reviewed&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>&lt;synopsis&gt;<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>class<sp/>(derived<sp/>from<sp/>MultiFileBase)<sp/>is<sp/>a<sp/>container<sp/>file<sp/>holding</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>multiple<sp/>virtual<sp/>files<sp/>in<sp/>a<sp/>regular<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>It<sp/>is<sp/>primarily<sp/>meant<sp/>as<sp/>a<sp/>container<sp/>file<sp/>for<sp/>the<sp/>storage<sp/>manager<sp/>files</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>of<sp/>a<sp/>table<sp/>to<sp/>reduce<sp/>the<sp/>number<sp/>of<sp/>files<sp/>used<sp/>(especially<sp/>for<sp/>Lustre)<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>reduce<sp/>the<sp/>number<sp/>of<sp/>open<sp/>files<sp/>(especially<sp/>when<sp/>concatenating<sp/>tables).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>&lt;br&gt;<sp/>MultiFile<sp/>has<sp/>the<sp/>following<sp/>properties:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>&lt;ul&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>&lt;li&gt;<sp/>It<sp/>can<sp/>choose<sp/>an<sp/>IO<sp/>buffer<sp/>size<sp/>that<sp/>matches<sp/>the<sp/>file<sp/>system<sp/>well</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(e.g.,<sp/>to<sp/>support<sp/>a<sp/>large<sp/>buffer<sp/>size<sp/>on<sp/>ZFS<sp/>or<sp/>Lustre).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>&lt;li&gt;<sp/>O_DIRECT<sp/>(if<sp/>supported<sp/>by<sp/>the<sp/>OS)<sp/>can<sp/>be<sp/>used<sp/>to<sp/>tell<sp/>the<sp/>OS<sp/>kernel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>to<sp/>bypass<sp/>its<sp/>file<sp/>cache.<sp/>It<sp/>does<sp/>not<sp/>speed<sp/>up<sp/>the<sp/>I/O,<sp/>but<sp/>it<sp/>makes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>I/O<sp/>behaviour<sp/>more<sp/>predictable<sp/>which<sp/>a<sp/>real-time<sp/>system<sp/>might<sp/>need.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>&lt;li&gt;<sp/>Often<sp/>the<sp/>data<sp/>to<sp/>be<sp/>read<sp/>from<sp/>MultiFile<sp/>will<sp/>not<sp/>exactly<sp/>match<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>block<sp/>size<sp/>and<sp/>offset.<sp/>MultiFile<sp/>will<sp/>buffer<sp/>the<sp/>data<sp/>and<sp/>copy<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>part<sp/>that<sp/>is<sp/>needed<sp/>(similar<sp/>to<sp/>stdio).<sp/>However,<sp/>when<sp/>matching</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>block<sp/>size<sp/>and<sp/>offset<sp/>are<sp/>used,<sp/>data<sp/>will<sp/>directly<sp/>be<sp/>read<sp/>into<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>user&apos;s<sp/>buffer<sp/>to<sp/>achieve<sp/>zero-copy<sp/>behaviour.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>&lt;li&gt;<sp/>It<sp/>is<sp/>possible<sp/>to<sp/>nest<sp/>MultiFile&apos;s.<sp/>Thus<sp/>a<sp/>MultiFile<sp/>can<sp/>be<sp/>a<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>in<sp/>a<sp/>parent<sp/>MultiFile.<sp/>In<sp/>this<sp/>way<sp/>it<sp/>is<sp/>easily<sp/>possible<sp/>to<sp/>store</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>main<sp/>table<sp/>and<sp/>its<sp/>subtables<sp/>(such<sp/>as<sp/>an<sp/>MS)<sp/>in<sp/>a<sp/>single<sp/>file.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>&lt;li&gt;<sp/>Optionally<sp/>each<sp/>block<sp/>is<sp/>stored<sp/>with<sp/>a<sp/>32-bit<sp/>CRC<sp/>to<sp/>check<sp/>if<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/>in<sp/>a<sp/>block<sp/>are<sp/>correctly<sp/>read.<sp/>The<sp/>CRC<sp/>values<sp/>are<sp/>stored<sp/>as</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>part<sp/>of<sp/>the<sp/>header,<sp/>thus<sp/>not<sp/>in<sp/>each<sp/>individual<sp/>block.<sp/>This<sp/>is<sp/>done</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>to<sp/>make<sp/>the<sp/>zero-copy<sp/>behaviour<sp/>possible<sp/>(as<sp/>described<sp/>above).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>&lt;li&gt;<sp/>The<sp/>header<sp/>and<sp/>the<sp/>index<sp/>are<sp/>stored<sp/>in<sp/>the<sp/>first<sp/>block.<sp/>If<sp/>too<sp/>large,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>continuation<sp/>blocks<sp/>are<sp/>used.<sp/>There<sp/>are<sp/>two<sp/>sets<sp/>of<sp/>continuation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>blocks<sp/>between<sp/>which<sp/>is<sp/>alternated.<sp/>This<sp/>is<sp/>done<sp/>for<sp/>robustness</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>purposes;<sp/>there<sp/>is<sp/>always<sp/>a<sp/>valid<sp/>one<sp/>in<sp/>case<sp/>of<sp/>a<sp/>crash<sp/>in<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>middle<sp/>of<sp/>writing<sp/>the<sp/>continuation<sp/>blocks.<sp/>Note<sp/>that<sp/>the<sp/>first</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>header<sp/>block<sp/>is<sp/>written<sp/>after<sp/>the<sp/>continuation<sp/>blocks,<sp/>so<sp/>it<sp/>always</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>points<sp/>to<sp/>a<sp/>valid<sp/>set<sp/>of<sp/>continuation<sp/>blocks.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>&lt;/ul&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>SetupNewTable<sp/>constructor<sp/>has<sp/>a<sp/>StorageOption<sp/>argument<sp/>to<sp/>define</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>a<sp/>MultiFile<sp/>has<sp/>to<sp/>be<sp/>used<sp/>and<sp/>if<sp/>so,<sp/>the<sp/>buffer<sp/>size<sp/>to<sp/>use.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>It<sp/>is<sp/>also<sp/>possible<sp/>to<sp/>specify<sp/>that<sp/>through<sp/>aipsrc<sp/>variables.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>virtual<sp/>file<sp/>is<sp/>spread<sp/>over<sp/>multiple<sp/>(fixed<sp/>size)<sp/>data<sp/>blocks<sp/>in<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>MultiFile.<sp/>A<sp/>data<sp/>block<sp/>is<sp/>never<sp/>shared<sp/>by<sp/>multiple<sp/>files.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>For<sp/>each<sp/>virtual<sp/>file<sp/>MultiFile<sp/>keeps<sp/>a<sp/>MultiFileInfo<sp/>object<sp/>telling</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>file<sp/>size<sp/>and<sp/>the<sp/>block<sp/>numbers<sp/>used<sp/>for<sp/>the<sp/>file.<sp/>When<sp/>flushing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>MultiFile,<sp/>this<sp/>meta<sp/>info<sp/>is<sp/>written<sp/>into<sp/>the<sp/>header<sp/>block.<sp/>If<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>does<sp/>not<sp/>fit<sp/>in<sp/>the<sp/>header<sp/>block,<sp/>the<sp/>rest<sp/>is<sp/>written<sp/>in<sp/>continuation<sp/>blocks.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>On<sp/>open<sp/>and<sp/>resync,<sp/>it<sp/>is<sp/>read<sp/>back.<sp/>There<sp/>are<sp/>two<sp/>sets<sp/>of<sp/>continuation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>blocks<sp/>which<sp/>are<sp/>alternately<sp/>used<sp/>when<sp/>the<sp/>header<sp/>is<sp/>written.<sp/>This<sp/>is<sp/>done</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>have<sp/>a<sp/>valid<sp/>header<sp/>in<sp/>case<sp/>of<sp/>a<sp/>crash<sp/>in<sp/>the<sp/>middle<sp/>of<sp/>writing<sp/>the<sp/>header.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>virtual<sp/>file<sp/>is<sp/>represented<sp/>by<sp/>an<sp/>MFFileIO<sp/>object,<sp/>which<sp/>is<sp/>derived</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>from<sp/>ByteIO<sp/>and<sp/>as<sp/>such<sp/>part<sp/>of<sp/>the<sp/>casacore<sp/>IO<sp/>framework.<sp/>It<sp/>makes<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>possible<sp/>for<sp/>applications<sp/>to<sp/>access<sp/>a<sp/>virtual<sp/>file<sp/>in<sp/>the<sp/>same<sp/>way<sp/>as</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>regular<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>It<sp/>is<sp/>possible<sp/>to<sp/>delete<sp/>a<sp/>virtual<sp/>file.<sp/>Its<sp/>blocks<sp/>will<sp/>be<sp/>added<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>free<sp/>block<sp/>list<sp/>(which<sp/>is<sp/>also<sp/>stored<sp/>in<sp/>the<sp/>meta<sp/>info).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>MultiFile<sp/>is<sp/>truncated<sp/>when<sp/>blocks<sp/>are<sp/>deleted<sp/>at<sp/>the<sp/>end<sp/>of<sp/>the<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>&lt;/synopsis&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>&lt;example&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>principle<sp/>it<sp/>is<sp/>possible<sp/>to<sp/>use<sp/>the<sp/>MultiFile<sp/>functions<sp/>directly.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>However,<sp/>in<sp/>general<sp/>it<sp/>is<sp/>much<sp/>easier<sp/>to<sp/>use<sp/>an<sp/>MFFileIO<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>per<sp/>virtual<sp/>file<sp/>as<sp/>shown<sp/>below.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>&lt;srcblock&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>//<sp/>Create<sp/>a<sp/>new<sp/>MultiFile<sp/>using<sp/>a<sp/>block<sp/>size<sp/>of<sp/>1<sp/>MB.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>std::shared_ptr&lt;MultiFileBase&gt;<sp/>mfile</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(new<sp/>MultiFile(&quot;file.mf&quot;,<sp/>ByteIO::New,<sp/>1048576));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>//<sp/>Create<sp/>a<sp/>virtual<sp/>file<sp/>in<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>MFFileIO<sp/>mf1(mfile,<sp/>&quot;mf1&quot;,<sp/>ByteIO::New);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>//<sp/>Use<sp/>it<sp/>(for<sp/>example)<sp/>as<sp/>the<sp/>sink<sp/>of<sp/>AipsIO.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>AipsIO<sp/>stream<sp/>(&amp;mf1);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>//<sp/>Write<sp/>values.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>stream<sp/>&lt;&lt;<sp/>(Int)10;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>stream<sp/>&lt;&lt;<sp/>True;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>//<sp/>Seek<sp/>to<sp/>beginning<sp/>of<sp/>file<sp/>and<sp/>read<sp/>data<sp/>in.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>stream.setpos<sp/>(0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>Int<sp/>vali;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>Bool<sp/>valb;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>stream<sp/>&gt;&gt;<sp/>vali<sp/>&gt;&gt;<sp/>valb;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>&lt;/srcblock&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>&lt;/example&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>&lt;todo&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>&lt;li&gt;<sp/>MultiFile<sp/>can<sp/>be<sp/>optimized<sp/>how<sp/>cont.blocks<sp/>are<sp/>used.<sp/>In<sp/>case<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>file<sp/>truncation,<sp/>it<sp/>could<sp/>check<sp/>if<sp/>only<sp/>cont.blocks<sp/>are<sp/>present</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>after<sp/>the<sp/>blocks<sp/>to<sp/>be<sp/>removed.<sp/>In<sp/>such<sp/>a<sp/>case<sp/>they<sp/>can<sp/>be<sp/>moved</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>backwards.<sp/>Also<sp/>the<sp/>nr<sp/>of<sp/>cont.blocks<sp/>can<sp/>shrink.<sp/>In<sp/>such<sp/>a<sp/>case</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>unused<sp/>blocks<sp/>are<sp/>not<sp/>added<sp/>to<sp/>the<sp/>free<sp/>list.<sp/>Only<sp/>the<sp/>nr<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>actually<sp/>used<sp/>cont.blocks<sp/>is<sp/>decremented.<sp/>They<sp/>could<sp/>be<sp/>added<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>free<sp/>list<sp/>later.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>reason<sp/>for<sp/>above<sp/>is<sp/>that<sp/>the<sp/>free<sp/>list<sp/>is<sp/>written<sp/>into<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>header<sp/>blocks<sp/>before<sp/>the<sp/>required<sp/>nr<sp/>of<sp/>continuation<sp/>blocks<sp/>is<sp/>known.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>&lt;li&gt;<sp/>Keep<sp/>a<sp/>journal<sp/>file<sp/>telling<sp/>which<sp/>files<sp/>are<sp/>created<sp/>and<sp/>which</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>blocks<sp/>are<sp/>allocated<sp/>for<sp/>a<sp/>virtual<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>&lt;/todo&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146" refid="classcasacore_1_1MultiFile" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcasacore_1_1MultiFile" kindref="compound">MultiFile</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcasacore_1_1MultiFileBase" kindref="compound">MultiFileBase</ref></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Open<sp/>or<sp/>create<sp/>a<sp/>MultiFile<sp/>with<sp/>the<sp/>given<sp/>name.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Upon<sp/>creation<sp/>the<sp/>block<sp/>size<sp/>can<sp/>be<sp/>given.<sp/>If<sp/>0,<sp/>it<sp/>uses<sp/>the<sp/>block<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>of<sp/>the<sp/>file<sp/>system<sp/>the<sp/>file<sp/>is<sp/>on.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&lt;br&gt;If<sp/>useODirect=True,<sp/>the<sp/>O_DIRECT<sp/>flag<sp/>is<sp/>used<sp/>(if<sp/>supported).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>It<sp/>tells<sp/>the<sp/>kernel<sp/>to<sp/>bypass<sp/>its<sp/>file<sp/>cache<sp/>to<sp/>have<sp/>more<sp/>predictable</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>I/O<sp/>behaviour.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&lt;br&gt;If<sp/>useCRC=True,<sp/>32-bit<sp/>CRC<sp/>values<sp/>are<sp/>calculated<sp/>and<sp/>stored<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>each<sp/>data<sp/>block.<sp/>Note<sp/>that<sp/>useCRC<sp/>is<sp/>only<sp/>used<sp/>for<sp/>new<sp/>files.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classcasacore_1_1MultiFile_1a0fc5cb8675a54a7befb9b0b7e2b19919" kindref="member">MultiFile</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcasacore_1_1String" kindref="compound">String</ref>&amp;<sp/>name,<sp/><ref refid="classcasacore_1_1ByteIO_1afa01b2ceb18a6e7db1ef40ebcd7158df" kindref="member">ByteIO::OpenOption</ref>,<sp/><ref refid="namespacecasacore_1abb6e2c1bac472ca1ebadadf96cc8426f" kindref="member">Int</ref><sp/><ref refid="classcasacore_1_1MultiFileBase_1a17fcd5abdd2decdf4286f81aa47270d1" kindref="member">blockSize</ref>=0,</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacecasacore_1abd5691f9e13acc90d901e4007740ff98" kindref="member">Bool</ref><sp/><ref refid="classcasacore_1_1MultiFileBase_1a9c6b319b52ddb589cf314b5294642e14" kindref="member">useODirect</ref>=<ref refid="namespacecasacore_1a11ef6530f2dc946f54d220fe416bfd41" kindref="member">False</ref>,<sp/><ref refid="namespacecasacore_1abd5691f9e13acc90d901e4007740ff98" kindref="member">Bool</ref><sp/>useCRC=<ref refid="namespacecasacore_1a11ef6530f2dc946f54d220fe416bfd41" kindref="member">False</ref>);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Open<sp/>or<sp/>create<sp/>a<sp/>MultiFile<sp/>with<sp/>the<sp/>given<sp/>name<sp/>which<sp/>is<sp/>nested<sp/>in<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>given<sp/>parent.<sp/>Thus<sp/>data<sp/>are<sp/>read/written<sp/>in<sp/>the<sp/>parent<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Upon<sp/>creation<sp/>the<sp/>block<sp/>size<sp/>can<sp/>be<sp/>given.<sp/>If<sp/>0,<sp/>it<sp/>uses<sp/>the<sp/>block<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>of<sp/>the<sp/>parent.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classcasacore_1_1MultiFile_1a0fc5cb8675a54a7befb9b0b7e2b19919" kindref="member">MultiFile</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcasacore_1_1String" kindref="compound">String</ref>&amp;<sp/>name,</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;MultiFileBase&gt;&amp;<sp/>parent,</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcasacore_1_1ByteIO_1afa01b2ceb18a6e7db1ef40ebcd7158df" kindref="member">ByteIO::OpenOption</ref>,<sp/><ref refid="namespacecasacore_1abb6e2c1bac472ca1ebadadf96cc8426f" kindref="member">Int</ref><sp/><ref refid="classcasacore_1_1MultiFileBase_1a17fcd5abdd2decdf4286f81aa47270d1" kindref="member">blockSize</ref>=0);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>destructor<sp/>flushes<sp/>and<sp/>closes<sp/>the<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcasacore_1_1MultiFile_1a526b4964318002355da744986fbc2fdd" kindref="member">~MultiFile</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>constructor<sp/>and<sp/>assignment<sp/>not<sp/>possible.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172" refid="classcasacore_1_1MultiFile_1a837911c98b840b7014160a125626f814" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcasacore_1_1MultiFile_1a837911c98b840b7014160a125626f814" kindref="member">MultiFile</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcasacore_1_1MultiFile" kindref="compound">MultiFile</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="173" refid="classcasacore_1_1MultiFile_1a1ede8a2eb9e3df3fe89b687ded4abd7a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcasacore_1_1MultiFile" kindref="compound">MultiFile</ref>&amp;<sp/><ref refid="classcasacore_1_1MultiFile_1a1ede8a2eb9e3df3fe89b687ded4abd7a" kindref="member">operator= </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcasacore_1_1MultiFile" kindref="compound">MultiFile</ref>&amp;)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>a<sp/>nested<sp/>MultiFile.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;MultiFileBase&gt;<sp/><ref refid="classcasacore_1_1MultiFile_1a2e23868e7584209eaaac8e88d5e0caef" kindref="member">makeNested</ref></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;MultiFileBase&gt;&amp;<sp/>parent,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcasacore_1_1String" kindref="compound">String</ref>&amp;<sp/>name,</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="classcasacore_1_1ByteIO_1afa01b2ceb18a6e7db1ef40ebcd7158df" kindref="member">ByteIO::OpenOption</ref>,<sp/><ref refid="namespacecasacore_1abb6e2c1bac472ca1ebadadf96cc8426f" kindref="member">Int</ref><sp/><ref refid="classcasacore_1_1MultiFileBase_1a17fcd5abdd2decdf4286f81aa47270d1" kindref="member">blockSize</ref>)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reopen<sp/>the<sp/>underlying<sp/>file<sp/>for<sp/>read/write<sp/>access.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Nothing<sp/>will<sp/>be<sp/>done<sp/>if<sp/>the<sp/>file<sp/>is<sp/>writable<sp/>already.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Otherwise<sp/>it<sp/>will<sp/>be<sp/>reopened<sp/>and<sp/>an<sp/>exception<sp/>will<sp/>be<sp/>thrown</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>it<sp/>is<sp/>not<sp/>possible<sp/>to<sp/>reopen<sp/>it<sp/>for<sp/>read/write<sp/>access.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcasacore_1_1MultiFile_1a514468147b6976165d812d8656eb9827" kindref="member">reopenRW</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fsync<sp/>the<sp/>file<sp/>(i.e.,<sp/>force<sp/>the<sp/>data<sp/>to<sp/>be<sp/>physically<sp/>written).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcasacore_1_1MultiFile_1a0712101317e37a365da94c97e4224a52" kindref="member">fsync</ref>()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Show<sp/>some<sp/>info.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcasacore_1_1MultiFile_1a544e5534cad6337dfdf2f975a3003a3b" kindref="member">show</ref><sp/>(std::ostream&amp;)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compress<sp/>a<sp/>block<sp/>index<sp/>by<sp/>looking<sp/>for<sp/>subsequent<sp/>block<sp/>numbers.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::vector&lt;Int64&gt;<sp/><ref refid="classcasacore_1_1MultiFile_1a2bab34537534ec950f6c796a7adfee35" kindref="member">packIndex</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;Int64&gt;&amp;<sp/>blockNrs);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Decompress<sp/>a<sp/>block<sp/>index<sp/>by<sp/>inserting<sp/>subsequent<sp/>block<sp/>numbers.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::vector&lt;Int64&gt;<sp/><ref refid="classcasacore_1_1MultiFile_1a53c3d5405fbd402d2ed96563cd640eff" kindref="member">unpackIndex</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;Int64&gt;&amp;<sp/>blockNrs);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>the<sp/>MultiFile<sp/>object.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>init<sp/>(<ref refid="classcasacore_1_1ByteIO_1afa01b2ceb18a6e7db1ef40ebcd7158df" kindref="member">ByteIO::OpenOption</ref><sp/>option);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>the<sp/>file<sp/>info<sp/>for<sp/>the<sp/>new<sp/>version<sp/>2.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getInfoVersion2<sp/>(<ref refid="namespacecasacore_1a79c2dfec4363785472512dbf384675a1" kindref="member">Int64</ref><sp/>contBlockNr,<sp/><ref refid="classcasacore_1_1CanonicalIO" kindref="compound">CanonicalIO</ref>&amp;<sp/>aio);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Write<sp/>a<sp/>vector<sp/>of<sp/>Int64.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>writeVector<sp/>(<ref refid="classcasacore_1_1CanonicalIO" kindref="compound">CanonicalIO</ref>&amp;<sp/>cio,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;Int64&gt;&amp;<sp/>index);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>writeVector<sp/>(<ref refid="classcasacore_1_1CanonicalIO" kindref="compound">CanonicalIO</ref>&amp;<sp/>cio,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;uInt&gt;&amp;<sp/>index);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>a<sp/>vector<sp/>of<sp/>Int64.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>readVector<sp/>(<ref refid="classcasacore_1_1CanonicalIO" kindref="compound">CanonicalIO</ref>&amp;<sp/>cio,<sp/>std::vector&lt;Int64&gt;&amp;<sp/>index);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>readVector<sp/>(<ref refid="classcasacore_1_1CanonicalIO" kindref="compound">CanonicalIO</ref>&amp;<sp/>cio,<sp/>std::vector&lt;uInt&gt;&amp;<sp/>index);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Write<sp/>the<sp/>remainder<sp/>of<sp/>the<sp/>header<sp/>(in<sp/>case<sp/>exceeding<sp/>1<sp/>block).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&lt;src&gt;iobuf&lt;/src&gt;<sp/>should<sp/>be<sp/>large<sp/>enough</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>writeRemainder<sp/>(<ref refid="classcasacore_1_1MemoryIO" kindref="compound">MemoryIO</ref>&amp;<sp/>mio,<sp/><ref refid="classcasacore_1_1CanonicalIO" kindref="compound">CanonicalIO</ref>&amp;,<sp/><ref refid="classcasacore_1_1MultiFileBuffer" kindref="compound">MultiFileBuffer</ref>&amp;<sp/>mfbuf);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>the<sp/>remainder<sp/>of<sp/>the<sp/>header<sp/>into<sp/>the<sp/>buffer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>readRemainder<sp/>(<ref refid="namespacecasacore_1a79c2dfec4363785472512dbf384675a1" kindref="member">Int64</ref><sp/>headerSize,<sp/><ref refid="namespacecasacore_1a79c2dfec4363785472512dbf384675a1" kindref="member">Int64</ref><sp/>blockNr,<sp/>std::vector&lt;char&gt;&amp;<sp/>buf);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Truncate<sp/>the<sp/>file<sp/>if<sp/>blocks<sp/>are<sp/>freed<sp/>at<sp/>the<sp/>end.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>truncateIfNeeded();</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Header<sp/>writing<sp/>hooks<sp/>(meant<sp/>for<sp/>derived<sp/>test<sp/>classes).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>writeHeaderShow<sp/>(<ref refid="namespacecasacore_1a79c2dfec4363785472512dbf384675a1" kindref="member">Int64</ref><sp/>ncont,<sp/><ref refid="namespacecasacore_1a79c2dfec4363785472512dbf384675a1" kindref="member">Int64</ref><sp/>todo)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>writeHeaderTest();</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&lt;/group&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>the<sp/>class-specific<sp/>actions<sp/>on<sp/>opening<sp/>a<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>doOpenFile<sp/>(<ref refid="structcasacore_1_1MultiFileInfo" kindref="compound">MultiFileInfo</ref>&amp;)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>the<sp/>class-specific<sp/>actions<sp/>on<sp/>closing<sp/>a<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>doCloseFile<sp/>(<ref refid="structcasacore_1_1MultiFileInfo" kindref="compound">MultiFileInfo</ref>&amp;)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>the<sp/>class-specific<sp/>actions<sp/>on<sp/>adding<sp/>a<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>doAddFile<sp/>(<ref refid="structcasacore_1_1MultiFileInfo" kindref="compound">MultiFileInfo</ref>&amp;)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>the<sp/>class-specific<sp/>actions<sp/>on<sp/>deleting<sp/>a<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>doDeleteFile<sp/>(<ref refid="structcasacore_1_1MultiFileInfo" kindref="compound">MultiFileInfo</ref>&amp;)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Truncate<sp/>the<sp/>file<sp/>to<sp/>&lt;src&gt;nrblk&lt;/src&gt;<sp/>blocks.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>doTruncateFile<sp/>(<ref refid="structcasacore_1_1MultiFileInfo" kindref="compound">MultiFileInfo</ref>&amp;<sp/><ref refid="classcasacore_1_1MultiFileBase_1a95813902ea2ec421abd1dad97e5c1c71" kindref="member">info</ref>,<sp/><ref refid="namespacecasacore_1afbaa0f0eab7b3a56a4c320715f577d4f" kindref="member">uInt64</ref><sp/>nrblk)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Flush<sp/>the<sp/>file<sp/>itself.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>doFlushFile()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Flush<sp/>and<sp/>close<sp/>the<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>close()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Write<sp/>the<sp/>header<sp/>info.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>writeHeader()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>the<sp/>header<sp/>info.<sp/>If<sp/>always==False,<sp/>the<sp/>info<sp/>is<sp/>only<sp/>read<sp/>if<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>header<sp/>counter<sp/>has<sp/>changed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>readHeader<sp/>(<ref refid="namespacecasacore_1abd5691f9e13acc90d901e4007740ff98" kindref="member">Bool</ref><sp/>always=<ref refid="namespacecasacore_1ad5c850f9e177173e0f7d0ad57091501d" kindref="member">True</ref>)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Extend<sp/>the<sp/>virtual<sp/>file<sp/>to<sp/>fit<sp/>lastblk.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>extend<sp/>(<ref refid="structcasacore_1_1MultiFileInfo" kindref="compound">MultiFileInfo</ref>&amp;<sp/><ref refid="classcasacore_1_1MultiFileBase_1a95813902ea2ec421abd1dad97e5c1c71" kindref="member">info</ref>,<sp/><ref refid="namespacecasacore_1a79c2dfec4363785472512dbf384675a1" kindref="member">Int64</ref><sp/>lastblk)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Store<sp/>the<sp/>CRC<sp/>of<sp/>a<sp/>data<sp/>block<sp/>in<sp/>the<sp/>index.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcasacore_1_1MultiFile_1a67ed0d7d6db7ea13e01ab599ab3d7f1c" kindref="member">storeCRC</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>buffer,<sp/><ref refid="namespacecasacore_1a79c2dfec4363785472512dbf384675a1" kindref="member">Int64</ref><sp/>blknr);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>the<sp/>CRC<sp/>of<sp/>a<sp/>data<sp/>block<sp/>read.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcasacore_1_1MultiFile_1a492d8894419e0cc6f85ae27524393ef0" kindref="member">checkCRC</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>buffer,<sp/><ref refid="namespacecasacore_1a79c2dfec4363785472512dbf384675a1" kindref="member">Int64</ref><sp/>blknr)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>the<sp/>CRC<sp/>of<sp/>a<sp/>data<sp/>block.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacecasacore_1a5c559d8d8bf2ae7f67b439955d6be88a" kindref="member">uInt</ref><sp/><ref refid="classcasacore_1_1MultiFile_1ae375ed2348723ca0d35e66484075b78d" kindref="member">calcCRC</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>buffer,<sp/><ref refid="namespacecasacore_1a79c2dfec4363785472512dbf384675a1" kindref="member">Int64</ref><sp/>size)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Extend<sp/>the<sp/>virtual<sp/>file<sp/>to<sp/>fit<sp/>lastblk.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Optionally<sp/>the<sp/>free<sp/>blocks<sp/>are<sp/>not<sp/>used.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcasacore_1_1MultiFile_1abcdee58c2d5058ed7f2706e301caa5e0" kindref="member">extendVF</ref><sp/>(<ref refid="structcasacore_1_1MultiFileInfo" kindref="compound">MultiFileInfo</ref>&amp;<sp/><ref refid="classcasacore_1_1MultiFileBase_1a95813902ea2ec421abd1dad97e5c1c71" kindref="member">info</ref>,<sp/><ref refid="namespacecasacore_1a79c2dfec4363785472512dbf384675a1" kindref="member">Int64</ref><sp/>lastblk,<sp/><ref refid="namespacecasacore_1abd5691f9e13acc90d901e4007740ff98" kindref="member">Bool</ref><sp/>useFreeBlocks);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Write<sp/>a<sp/>data<sp/>block.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcasacore_1_1MultiFile_1a16230d72dc01767d3343482a83bd1be7" kindref="member">writeBlock</ref><sp/>(<ref refid="structcasacore_1_1MultiFileInfo" kindref="compound">MultiFileInfo</ref>&amp;<sp/><ref refid="classcasacore_1_1MultiFileBase_1a95813902ea2ec421abd1dad97e5c1c71" kindref="member">info</ref>,<sp/><ref refid="namespacecasacore_1a79c2dfec4363785472512dbf384675a1" kindref="member">Int64</ref><sp/>blknr,</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>buffer)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>a<sp/>data<sp/>block.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcasacore_1_1MultiFile_1a4730f7a974832a57a46e5f3139cc9820" kindref="member">readBlock</ref><sp/>(<ref refid="structcasacore_1_1MultiFileInfo" kindref="compound">MultiFileInfo</ref>&amp;<sp/><ref refid="classcasacore_1_1MultiFileBase_1a95813902ea2ec421abd1dad97e5c1c71" kindref="member">info</ref>,<sp/><ref refid="namespacecasacore_1a79c2dfec4363785472512dbf384675a1" kindref="member">Int64</ref><sp/>blknr,</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>buffer)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>the<sp/>version<sp/>1<sp/>header.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcasacore_1_1MultiFile_1a959157b9135db880ecbc6341159cad20" kindref="member">readHeaderVersion1</ref><sp/>(<ref refid="namespacecasacore_1a79c2dfec4363785472512dbf384675a1" kindref="member">Int64</ref><sp/>headerSize,<sp/>std::vector&lt;char&gt;&amp;<sp/>buf);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>the<sp/>version<sp/>2<sp/>and<sp/>higher<sp/>header.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcasacore_1_1MultiFile_1a998d1e7938c193e50c02d301bb9acbc1" kindref="member">readHeaderVersion2</ref><sp/>(std::vector&lt;char&gt;&amp;<sp/>buf);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//#<sp/>Data<sp/>members</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Define<sp/>two<sp/>continuation<sp/>sets<sp/>where<sp/>the<sp/>header<sp/>overflow<sp/>can<sp/>be<sp/>stored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266" refid="classcasacore_1_1MultiFile_1aca7006c7ca84ca3db01825c004762ab9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structcasacore_1_1MultiFileInfo" kindref="compound">MultiFileInfo</ref><sp/><ref refid="classcasacore_1_1MultiFile_1aca7006c7ca84ca3db01825c004762ab9" kindref="member">itsHdrCont</ref>[2];</highlight></codeline>
<codeline lineno="267" refid="classcasacore_1_1MultiFile_1a1684a8ea0e9f6bb5191665fbee261427" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacecasacore_1a5c559d8d8bf2ae7f67b439955d6be88a" kindref="member">uInt</ref><sp/><sp/><ref refid="classcasacore_1_1MultiFile_1a1684a8ea0e9f6bb5191665fbee261427" kindref="member">itsNrContUsed</ref>[2];<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>nr<sp/>of<sp/>cont.blocks<sp/>actually<sp/>used</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268" refid="classcasacore_1_1MultiFile_1a3c2c8b97e6fa965a79a5efc527ea495a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacecasacore_1a5c559d8d8bf2ae7f67b439955d6be88a" kindref="member">uInt</ref><sp/><sp/><ref refid="classcasacore_1_1MultiFile_1a3c2c8b97e6fa965a79a5efc527ea495a" kindref="member">itsHdrContInx</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Continuation<sp/>set<sp/>last<sp/>used<sp/>(0<sp/>or<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269" refid="classcasacore_1_1MultiFile_1a2848def2dc5e10da259b91932b7ba92f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacecasacore_1abd5691f9e13acc90d901e4007740ff98" kindref="member">Bool</ref><sp/><sp/><ref refid="classcasacore_1_1MultiFile_1a2848def2dc5e10da259b91932b7ba92f" kindref="member">itsUseCRC</ref>;</highlight></codeline>
<codeline lineno="270" refid="classcasacore_1_1MultiFile_1a5c73e8ed393cea4b02d609eb9464b90d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;uInt&gt;<sp/><ref refid="classcasacore_1_1MultiFile_1a5c73e8ed393cea4b02d609eb9464b90d" kindref="member">itsCRC</ref>;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>CRC<sp/>value<sp/>per<sp/>block<sp/>(empty<sp/>if<sp/>useCRC=False)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271" refid="classcasacore_1_1MultiFile_1a568612530abd417870b6ca5a1a955799" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::unique_ptr&lt;ByteIO&gt;<sp/><ref refid="classcasacore_1_1MultiFile_1a568612530abd417870b6ca5a1a955799" kindref="member">itsIO</ref>;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>regular<sp/>file<sp/>or<sp/>nested<sp/>MFFileIO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal">}<sp/></highlight><highlight class="comment">//#<sp/>NAMESPACE<sp/>CASACORE<sp/>-<sp/>END</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="casa/IO/MultiFile.h"/>
  </compounddef>
</doxygen>
