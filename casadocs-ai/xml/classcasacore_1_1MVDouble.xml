<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classcasacore_1_1MVDouble" kind="class" language="C++" prot="public">
    <compoundname>casacore::MVDouble</compoundname>
    <basecompoundref refid="classcasacore_1_1MeasValue" prot="public" virt="non-virtual">casacore::MeasValue</basecompoundref>
    <includes refid="MVDouble_8h" local="no">MVDouble.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classcasacore_1_1MVDouble_1a2a89b9b4588372a1fcafe73056a17ecc" prot="private" static="no" mutable="no">
        <type><ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref></type>
        <definition>Double casacore::MVDouble::val</definition>
        <argsstring></argsstring>
        <name>val</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVDouble.h" line="155" column="10" bodyfile="casa/Quanta/MVDouble.h" bodystart="155" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classcasacore_1_1MVDouble_1a02a50e169c254c3cb568b4fc2bfde194" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>casacore::MVDouble::MVDouble</definition>
        <argsstring>()</argsstring>
        <name>MVDouble</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVDouble.h" line="87" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVDouble_1a739993886573e7a4eee730742ed71245" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>casacore::MVDouble::MVDouble</definition>
        <argsstring>(const MVDouble &amp;other)</argsstring>
        <name>MVDouble</name>
        <param>
          <type>const <ref refid="classcasacore_1_1MVDouble" kindref="compound">MVDouble</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVDouble.h" line="89" column="3" bodyfile="casa/Quanta/MVDouble.cc" bodystart="41" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVDouble_1a2a6a5f6e5bb26aa36859de0a3cb64940" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classcasacore_1_1MVDouble" kindref="compound">MVDouble</ref> &amp;</type>
        <definition>MVDouble &amp; casacore::MVDouble::operator=</definition>
        <argsstring>(const MVDouble &amp;other)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classcasacore_1_1MVDouble" kindref="compound">MVDouble</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVDouble.h" line="91" column="12" bodyfile="casa/Quanta/MVDouble.cc" bodystart="80" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVDouble_1a085ec4dfd3c4600afa12f6a4e544bf13" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>casacore::MVDouble::MVDouble</definition>
        <argsstring>(Double d)</argsstring>
        <name>MVDouble</name>
        <param>
          <type><ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref></type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVDouble.h" line="93" column="3" bodyfile="casa/Quanta/MVDouble.cc" bodystart="38" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVDouble_1a0a3d0aa2ac78d4beb620defdbbe23f31" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>casacore::MVDouble::MVDouble</definition>
        <argsstring>(const Quantity &amp;other)</argsstring>
        <name>MVDouble</name>
        <param>
          <type>const <ref refid="namespacecasacore_1ad5429fefc00b65ab7ddb394a0e3fa410" kindref="member">Quantity</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVDouble.h" line="96" column="3" bodyfile="casa/Quanta/MVDouble.cc" bodystart="46" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVDouble_1a3cb04962e0e21d85b66f481626efba73" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>casacore::MVDouble::MVDouble</definition>
        <argsstring>(const Quantum&lt; Vector&lt; Double &gt; &gt; &amp;other)</argsstring>
        <name>MVDouble</name>
        <param>
          <type>const <ref refid="classcasacore_1_1Quantum" kindref="compound">Quantum</ref>&lt; <ref refid="classcasacore_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref> &gt; &gt; &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVDouble.h" line="97" column="3" bodyfile="casa/Quanta/MVDouble.cc" bodystart="50" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVDouble_1a40af0851399596c50d04796e9a21dbd0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>casacore::MVDouble::MVDouble</definition>
        <argsstring>(const Vector&lt; Double &gt; &amp;other)</argsstring>
        <name>MVDouble</name>
        <param>
          <type>const <ref refid="classcasacore_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref> &gt; &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVDouble.h" line="105" column="3" bodyfile="casa/Quanta/MVDouble.cc" bodystart="63" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVDouble_1a12da9dcfa22ffe641dc7c360c447f78a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>casacore::MVDouble::MVDouble</definition>
        <argsstring>(const Vector&lt; Quantity &gt; &amp;other)</argsstring>
        <name>MVDouble</name>
        <param>
          <type>const <ref refid="classcasacore_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespacecasacore_1ad5429fefc00b65ab7ddb394a0e3fa410" kindref="member">Quantity</ref> &gt; &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVDouble.h" line="106" column="3" bodyfile="casa/Quanta/MVDouble.cc" bodystart="74" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVDouble_1af1b161c0fb9ceb2999d4e7b2ff73647c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>casacore::MVDouble::~MVDouble</definition>
        <argsstring>()</argsstring>
        <name>~MVDouble</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVDouble.h" line="110" column="3" bodyfile="casa/Quanta/MVDouble.cc" bodystart="88" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVDouble_1aef91a8af331cacdd9045358e699adad4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>casacore::MVDouble::operator Double</definition>
        <argsstring>() const</argsstring>
        <name>operator Double</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVDouble.h" line="114" column="3" bodyfile="casa/Quanta/MVDouble.cc" bodystart="91" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVDouble_1ab42f633aed64bc6879535b3b023d756e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classcasacore_1_1MVDouble" kindref="compound">MVDouble</ref> &amp;</type>
        <definition>MVDouble &amp; casacore::MVDouble::operator+=</definition>
        <argsstring>(const MVDouble &amp;other)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const <ref refid="classcasacore_1_1MVDouble" kindref="compound">MVDouble</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVDouble.h" line="118" column="12" bodyfile="casa/Quanta/MVDouble.cc" bodystart="95" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVDouble_1a07dcc91ab2046e06ed91e32febf766a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classcasacore_1_1MVDouble" kindref="compound">MVDouble</ref> &amp;</type>
        <definition>MVDouble &amp; casacore::MVDouble::operator-=</definition>
        <argsstring>(const MVDouble &amp;other)</argsstring>
        <name>operator-=</name>
        <param>
          <type>const <ref refid="classcasacore_1_1MVDouble" kindref="compound">MVDouble</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVDouble.h" line="119" column="12" bodyfile="casa/Quanta/MVDouble.cc" bodystart="100" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVDouble_1aa65715887203eae73b577f410e5c8a60" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacecasacore_1abd5691f9e13acc90d901e4007740ff98" kindref="member">Bool</ref></type>
        <definition>Bool casacore::MVDouble::operator==</definition>
        <argsstring>(const MVDouble &amp;other) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classcasacore_1_1MVDouble" kindref="compound">MVDouble</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVDouble.h" line="123" column="8" bodyfile="casa/Quanta/MVDouble.cc" bodystart="105" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVDouble_1a151cf28e588c9706a2c81e5a436da907" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacecasacore_1abd5691f9e13acc90d901e4007740ff98" kindref="member">Bool</ref></type>
        <definition>Bool casacore::MVDouble::operator!=</definition>
        <argsstring>(const MVDouble &amp;other) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classcasacore_1_1MVDouble" kindref="compound">MVDouble</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVDouble.h" line="124" column="8" bodyfile="casa/Quanta/MVDouble.cc" bodystart="109" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVDouble_1a0e6a0765db822baba471b4e774ac04bf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacecasacore_1abd5691f9e13acc90d901e4007740ff98" kindref="member">Bool</ref></type>
        <definition>Bool casacore::MVDouble::near</definition>
        <argsstring>(const MVDouble &amp;other, Double tol=1e-13) const</argsstring>
        <name>near</name>
        <param>
          <type>const <ref refid="classcasacore_1_1MVDouble" kindref="compound">MVDouble</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <param>
          <type><ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref></type>
          <declname>tol</declname>
          <defval>1e-13</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVDouble.h" line="125" column="8" bodyfile="casa/Quanta/MVDouble.cc" bodystart="121" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVDouble_1af5dbb90ba4ed87db48c3e131ec84e8c6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacecasacore_1abd5691f9e13acc90d901e4007740ff98" kindref="member">Bool</ref></type>
        <definition>Bool casacore::MVDouble::nearAbs</definition>
        <argsstring>(const MVDouble &amp;other, Double tol=1e-13) const</argsstring>
        <name>nearAbs</name>
        <param>
          <type>const <ref refid="classcasacore_1_1MVDouble" kindref="compound">MVDouble</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <param>
          <type><ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref></type>
          <declname>tol</declname>
          <defval>1e-13</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVDouble.h" line="126" column="8" bodyfile="casa/Quanta/MVDouble.cc" bodystart="125" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVDouble_1a57e09917430832561b0e7347c43d1455" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void casacore::MVDouble::print</definition>
        <argsstring>(ostream &amp;os) const</argsstring>
        <name>print</name>
        <reimplements refid="classcasacore_1_1MeasValue_1a716675982631833dc629df28d442b044">print</reimplements>
        <param>
          <type>ostream &amp;</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVDouble.h" line="135" column="16" bodyfile="casa/Quanta/MVDouble.cc" bodystart="130" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVDouble_1a88eac55db5192936f8a733cc424ecf5a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classcasacore_1_1MeasValue" kindref="compound">MeasValue</ref> *</type>
        <definition>MeasValue * casacore::MVDouble::clone</definition>
        <argsstring>() const</argsstring>
        <name>clone</name>
        <reimplements refid="classcasacore_1_1MeasValue_1a5bba6fea0b17795f8653a130e0cfc224">clone</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVDouble.h" line="137" column="21" bodyfile="casa/Quanta/MVDouble.cc" bodystart="134" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVDouble_1a2ae95cecf73e34bbd27cf445064e3a98" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classcasacore_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref> &gt;</type>
        <definition>Vector&lt; Double &gt; casacore::MVDouble::getVector</definition>
        <argsstring>() const</argsstring>
        <name>getVector</name>
        <reimplements refid="classcasacore_1_1MeasValue_1aaca85a82a8f69baad3083dd105fc579f">getVector</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVDouble.h" line="140" column="18" bodyfile="casa/Quanta/MVDouble.cc" bodystart="138" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVDouble_1aa540754390879ef742707d2d1d1e3a30" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void casacore::MVDouble::putVector</definition>
        <argsstring>(const Vector&lt; Double &gt; &amp;in)</argsstring>
        <name>putVector</name>
        <reimplements refid="classcasacore_1_1MeasValue_1a12d50c3e5db0e002f6575f4972b16eae">putVector</reimplements>
        <param>
          <type>const <ref refid="classcasacore_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref> &gt; &amp;</type>
          <declname>in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVDouble.h" line="142" column="16" bodyfile="casa/Quanta/MVDouble.cc" bodystart="144" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVDouble_1a9e0ef017725b40efca09f0bc6c01dc2f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classcasacore_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classcasacore_1_1Quantum" kindref="compound">Quantum</ref>&lt; <ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref> &gt; &gt;</type>
        <definition>Vector&lt; Quantum&lt; Double &gt; &gt; casacore::MVDouble::getRecordValue</definition>
        <argsstring>() const</argsstring>
        <name>getRecordValue</name>
        <reimplements refid="classcasacore_1_1MeasValue_1ac7bacf620e474a54fd4184b83ad8c3b3">getRecordValue</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVDouble.h" line="147" column="18" bodyfile="casa/Quanta/MVDouble.cc" bodystart="152" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVDouble_1a23afa82d768fa9a017299a63b8be3840" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespacecasacore_1abd5691f9e13acc90d901e4007740ff98" kindref="member">Bool</ref></type>
        <definition>Bool casacore::MVDouble::putValue</definition>
        <argsstring>(const Vector&lt; Quantum&lt; Double &gt; &gt; &amp;in)</argsstring>
        <name>putValue</name>
        <reimplements refid="classcasacore_1_1MeasValue_1abdc9f23a6f2583e686952d982812da69">putValue</reimplements>
        <param>
          <type>const <ref refid="classcasacore_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classcasacore_1_1Quantum" kindref="compound">Quantum</ref>&lt; <ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref> &gt; &gt; &amp;</type>
          <declname>in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVDouble.h" line="150" column="16" bodyfile="casa/Quanta/MVDouble.cc" bodystart="158" bodyend="168"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classcasacore_1_1MVDouble_1ab030f16eeb13fc900796fb483453a98e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void casacore::MVDouble::assure</definition>
        <argsstring>(const MeasValue &amp;in)</argsstring>
        <name>assure</name>
        <param>
          <type>const <ref refid="classcasacore_1_1MeasValue" kindref="compound">MeasValue</ref> &amp;</type>
          <declname>in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVDouble.h" line="132" column="15" bodyfile="casa/Quanta/MVDouble.cc" bodystart="115" bodyend="119"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>casacore::MVDouble</label>
        <link refid="classcasacore_1_1MVDouble"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>casacore::MeasValue</label>
        <link refid="classcasacore_1_1MeasValue"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>casacore::MVDouble</label>
        <link refid="classcasacore_1_1MVDouble"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>casacore::MeasValue</label>
        <link refid="classcasacore_1_1MeasValue"/>
      </node>
    </collaborationgraph>
    <location file="casa/Quanta/MVDouble.h" line="81" column="1" bodyfile="casa/Quanta/MVDouble.h" bodystart="81" bodyend="156"/>
    <listofallmembers>
      <member refid="classcasacore_1_1MeasValue_1a350b5664f240c9054bf27b72e8d41d7a" prot="public" virt="virtual"><scope>casacore::MVDouble</scope><name>adjust</name></member>
      <member refid="classcasacore_1_1MeasValue_1a09f28dd3fff38b052f9b6638647eb41f" prot="public" virt="virtual"><scope>casacore::MVDouble</scope><name>adjust</name></member>
      <member refid="classcasacore_1_1MVDouble_1ab030f16eeb13fc900796fb483453a98e" prot="public" virt="non-virtual"><scope>casacore::MVDouble</scope><name>assure</name></member>
      <member refid="classcasacore_1_1MVDouble_1a88eac55db5192936f8a733cc424ecf5a" prot="public" virt="virtual"><scope>casacore::MVDouble</scope><name>clone</name></member>
      <member refid="classcasacore_1_1MeasValue_1ad7a17bbec23ae48f4dafa55dbaea9b66" prot="public" virt="non-virtual"><scope>casacore::MVDouble</scope><name>dummy_constr</name></member>
      <member refid="classcasacore_1_1MeasValue_1add17b17e91be8f0d36e718a93514eca1" prot="public" virt="non-virtual"><scope>casacore::MVDouble</scope><name>dummy_operator</name></member>
      <member refid="classcasacore_1_1MVDouble_1a9e0ef017725b40efca09f0bc6c01dc2f" prot="public" virt="virtual"><scope>casacore::MVDouble</scope><name>getRecordValue</name></member>
      <member refid="classcasacore_1_1MeasValue_1a401ff3a87fbaf2900d6c4bf6404ed531" prot="public" virt="virtual"><scope>casacore::MVDouble</scope><name>getTMRecordValue</name></member>
      <member refid="classcasacore_1_1MVDouble_1a2ae95cecf73e34bbd27cf445064e3a98" prot="public" virt="virtual"><scope>casacore::MVDouble</scope><name>getVector</name></member>
      <member refid="classcasacore_1_1MeasValue_1a05d77da82e54471f3ffc0d76133f94a2" prot="public" virt="virtual"><scope>casacore::MVDouble</scope><name>getXRecordValue</name></member>
      <member refid="classcasacore_1_1MVDouble_1a02a50e169c254c3cb568b4fc2bfde194" prot="public" virt="non-virtual"><scope>casacore::MVDouble</scope><name>MVDouble</name></member>
      <member refid="classcasacore_1_1MVDouble_1a739993886573e7a4eee730742ed71245" prot="public" virt="non-virtual"><scope>casacore::MVDouble</scope><name>MVDouble</name></member>
      <member refid="classcasacore_1_1MVDouble_1a085ec4dfd3c4600afa12f6a4e544bf13" prot="public" virt="non-virtual"><scope>casacore::MVDouble</scope><name>MVDouble</name></member>
      <member refid="classcasacore_1_1MVDouble_1a0a3d0aa2ac78d4beb620defdbbe23f31" prot="public" virt="non-virtual"><scope>casacore::MVDouble</scope><name>MVDouble</name></member>
      <member refid="classcasacore_1_1MVDouble_1a3cb04962e0e21d85b66f481626efba73" prot="public" virt="non-virtual"><scope>casacore::MVDouble</scope><name>MVDouble</name></member>
      <member refid="classcasacore_1_1MVDouble_1a40af0851399596c50d04796e9a21dbd0" prot="public" virt="non-virtual"><scope>casacore::MVDouble</scope><name>MVDouble</name></member>
      <member refid="classcasacore_1_1MVDouble_1a12da9dcfa22ffe641dc7c360c447f78a" prot="public" virt="non-virtual"><scope>casacore::MVDouble</scope><name>MVDouble</name></member>
      <member refid="classcasacore_1_1MVDouble_1a0e6a0765db822baba471b4e774ac04bf" prot="public" virt="non-virtual"><scope>casacore::MVDouble</scope><name>near</name></member>
      <member refid="classcasacore_1_1MVDouble_1af5dbb90ba4ed87db48c3e131ec84e8c6" prot="public" virt="non-virtual"><scope>casacore::MVDouble</scope><name>nearAbs</name></member>
      <member refid="classcasacore_1_1MVDouble_1aef91a8af331cacdd9045358e699adad4" prot="public" virt="non-virtual"><scope>casacore::MVDouble</scope><name>operator Double</name></member>
      <member refid="classcasacore_1_1MVDouble_1a151cf28e588c9706a2c81e5a436da907" prot="public" virt="non-virtual"><scope>casacore::MVDouble</scope><name>operator!=</name></member>
      <member refid="classcasacore_1_1MVDouble_1ab42f633aed64bc6879535b3b023d756e" prot="public" virt="non-virtual"><scope>casacore::MVDouble</scope><name>operator+=</name></member>
      <member refid="classcasacore_1_1MVDouble_1a07dcc91ab2046e06ed91e32febf766a6" prot="public" virt="non-virtual"><scope>casacore::MVDouble</scope><name>operator-=</name></member>
      <member refid="classcasacore_1_1MVDouble_1a2a6a5f6e5bb26aa36859de0a3cb64940" prot="public" virt="non-virtual"><scope>casacore::MVDouble</scope><name>operator=</name></member>
      <member refid="classcasacore_1_1MVDouble_1aa65715887203eae73b577f410e5c8a60" prot="public" virt="non-virtual"><scope>casacore::MVDouble</scope><name>operator==</name></member>
      <member refid="classcasacore_1_1MVDouble_1a57e09917430832561b0e7347c43d1455" prot="public" virt="virtual"><scope>casacore::MVDouble</scope><name>print</name></member>
      <member refid="classcasacore_1_1MVDouble_1a23afa82d768fa9a017299a63b8be3840" prot="public" virt="virtual"><scope>casacore::MVDouble</scope><name>putValue</name></member>
      <member refid="classcasacore_1_1MVDouble_1aa540754390879ef742707d2d1d1e3a30" prot="public" virt="virtual"><scope>casacore::MVDouble</scope><name>putVector</name></member>
      <member refid="classcasacore_1_1MeasValue_1a0559353e6ae41bb0b35ef95ff30428e7" prot="public" virt="virtual"><scope>casacore::MVDouble</scope><name>readjust</name></member>
      <member refid="classcasacore_1_1MVDouble_1a2a89b9b4588372a1fcafe73056a17ecc" prot="private" virt="non-virtual"><scope>casacore::MVDouble</scope><name>val</name></member>
      <member refid="classcasacore_1_1MeasValue_1a70316dc2a17d2d9471f858df3001817c" prot="public" virt="virtual"><scope>casacore::MVDouble</scope><name>~MeasValue</name></member>
      <member refid="classcasacore_1_1MVDouble_1af1b161c0fb9ceb2999d4e7b2ff73647c" prot="public" virt="non-virtual"><scope>casacore::MVDouble</scope><name>~MVDouble</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
