<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classcasacore_1_1Block" kind="class" language="C++" prot="public">
    <compoundname>casacore::Block</compoundname>
    <basecompoundref refid="classcasacore_1_1BlockTrace" prot="public" virt="non-virtual">casacore::BlockTrace</basecompoundref>
    <includes refid="Block_8h" local="no">Block.h</includes>
    <templateparamlist>
      <param>
        <type>class T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classcasacore_1_1Block_1a8b059766309a8e80b56cd8afc37883b7" prot="public" static="no">
        <type>T</type>
        <definition>typedef T casacore::Block&lt; T &gt;::value_type</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Containers/Block.h" line="631" column="29" bodyfile="casa/Containers/Block.h" bodystart="631" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classcasacore_1_1Block_1a1e3b61b92e3090211ab7ba61041fabf5" prot="public" static="no">
        <type>T *</type>
        <definition>typedef T* casacore::Block&lt; T &gt;::iterator</definition>
        <argsstring></argsstring>
        <name>iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Containers/Block.h" line="632" column="28" bodyfile="casa/Containers/Block.h" bodystart="632" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classcasacore_1_1Block_1aabee07d1f26dd42874d68c4ed6fe8631" prot="public" static="no">
        <type>const T *</type>
        <definition>typedef const T* casacore::Block&lt; T &gt;::const_iterator</definition>
        <argsstring></argsstring>
        <name>const_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Containers/Block.h" line="633" column="28" bodyfile="casa/Containers/Block.h" bodystart="633" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classcasacore_1_1Block_1add995d94674d5e93dca2d4a59249873e" prot="public" static="no">
        <type><ref refid="classcasacore_1_1Block_1a8b059766309a8e80b56cd8afc37883b7" kindref="member">value_type</ref> *</type>
        <definition>typedef value_type* casacore::Block&lt; T &gt;::pointer</definition>
        <argsstring></argsstring>
        <name>pointer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Containers/Block.h" line="634" column="28" bodyfile="casa/Containers/Block.h" bodystart="634" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classcasacore_1_1Block_1a75b9e8725e9bf365aaa116dc17033617" prot="public" static="no">
        <type>const <ref refid="classcasacore_1_1Block_1a8b059766309a8e80b56cd8afc37883b7" kindref="member">value_type</ref> *</type>
        <definition>typedef const value_type* casacore::Block&lt; T &gt;::const_pointer</definition>
        <argsstring></argsstring>
        <name>const_pointer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Containers/Block.h" line="635" column="28" bodyfile="casa/Containers/Block.h" bodystart="635" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classcasacore_1_1Block_1a93c7a11d0a253d3e24d80ca8b237a3ea" prot="public" static="no">
        <type><ref refid="classcasacore_1_1Block_1a8b059766309a8e80b56cd8afc37883b7" kindref="member">value_type</ref> &amp;</type>
        <definition>typedef value_type&amp; casacore::Block&lt; T &gt;::reference</definition>
        <argsstring></argsstring>
        <name>reference</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Containers/Block.h" line="636" column="28" bodyfile="casa/Containers/Block.h" bodystart="636" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classcasacore_1_1Block_1a7b93731cf214ab019e25a6ede6cfdb96" prot="public" static="no">
        <type>const <ref refid="classcasacore_1_1Block_1a8b059766309a8e80b56cd8afc37883b7" kindref="member">value_type</ref> &amp;</type>
        <definition>typedef const value_type&amp; casacore::Block&lt; T &gt;::const_reference</definition>
        <argsstring></argsstring>
        <name>const_reference</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Containers/Block.h" line="637" column="28" bodyfile="casa/Containers/Block.h" bodystart="637" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classcasacore_1_1Block_1a6220caa6137a16a4fd2f814c9ee28f4d" prot="public" static="no">
        <type>size_t</type>
        <definition>typedef size_t casacore::Block&lt; T &gt;::size_type</definition>
        <argsstring></argsstring>
        <name>size_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Containers/Block.h" line="638" column="29" bodyfile="casa/Containers/Block.h" bodystart="638" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classcasacore_1_1Block_1aed1679bbee2b7b1af9f648199b12bcc2" prot="public" static="no">
        <type>ptrdiff_t</type>
        <definition>typedef ptrdiff_t casacore::Block&lt; T &gt;::difference_type</definition>
        <argsstring></argsstring>
        <name>difference_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Containers/Block.h" line="639" column="29" bodyfile="casa/Containers/Block.h" bodystart="639" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classcasacore_1_1Block_1a1584e975b2e217614a86ddbfbdee793c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class Array&lt; T &gt;</definition>
        <argsstring></argsstring>
        <name>Array&lt; T &gt;</name>
        <param>
          <type><ref refid="classcasacore_1_1Array" kindref="compound">Array</ref>&lt; T &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Containers/Block.h" line="660" column="15" bodyfile="casa/Containers/Block.h" bodystart="668" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classcasacore_1_1Block_1a1e931bb573c26acb8963eb28bb6fc3cb" prot="private" static="no" mutable="no">
        <type>Allocator_private::BulkAllocator&lt; T &gt; *</type>
        <definition>Allocator_private::BulkAllocator&lt;T&gt;* casacore::Block&lt; T &gt;::allocator_p</definition>
        <argsstring></argsstring>
        <name>allocator_p</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Containers/Block.h" line="776" column="45" bodyfile="casa/Containers/Block.h" bodystart="776" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcasacore_1_1Block_1a0c0875ed9c6010001cb0c1194de299ce" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t casacore::Block&lt; T &gt;::capacity_p</definition>
        <argsstring></argsstring>
        <name>capacity_p</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Containers/Block.h" line="778" column="10" bodyfile="casa/Containers/Block.h" bodystart="778" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcasacore_1_1Block_1a1a52490376c0b068194519b88b5af310" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t casacore::Block&lt; T &gt;::used_p</definition>
        <argsstring></argsstring>
        <name>used_p</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Containers/Block.h" line="780" column="10" bodyfile="casa/Containers/Block.h" bodystart="780" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcasacore_1_1Block_1a141034c7471c322db88e809cdfe3ef59" prot="private" static="no" mutable="no">
        <type>T *</type>
        <definition>T* casacore::Block&lt; T &gt;::array</definition>
        <argsstring></argsstring>
        <name>array</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Containers/Block.h" line="782" column="5" bodyfile="casa/Containers/Block.h" bodystart="782" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcasacore_1_1Block_1a4de1604f6b598f16339aaf3be8052650" prot="private" static="no" mutable="no">
        <type><ref refid="namespacecasacore_1abd5691f9e13acc90d901e4007740ff98" kindref="member">Bool</ref></type>
        <definition>Bool casacore::Block&lt; T &gt;::destroyPointer</definition>
        <argsstring></argsstring>
        <name>destroyPointer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Containers/Block.h" line="784" column="8" bodyfile="casa/Containers/Block.h" bodystart="784" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcasacore_1_1Block_1aedbd06975fbd60205a5a05cd612906e4" prot="private" static="no" mutable="no">
        <type><ref refid="namespacecasacore_1abd5691f9e13acc90d901e4007740ff98" kindref="member">Bool</ref></type>
        <definition>Bool casacore::Block&lt; T &gt;::keep_allocator_p</definition>
        <argsstring></argsstring>
        <name>keep_allocator_p</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Containers/Block.h" line="786" column="8" bodyfile="casa/Containers/Block.h" bodystart="786" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classcasacore_1_1Block_1abe2f26b768833fd0c457cc713c72614f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>casacore::Block&lt; T &gt;::Block</definition>
        <argsstring>()</argsstring>
        <name>Block</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Containers/Block.h" line="203" column="3" bodyfile="casa/Containers/Block.h" bodystart="203" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1Block_1a7585c1195b6d7edeea96b83c7120e05f" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Allocator</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>casacore::Block&lt; T &gt;::Block</definition>
        <argsstring>(AllocSpec&lt; Allocator &gt; const &amp;)</argsstring>
        <name>Block</name>
        <param>
          <type><ref refid="structcasacore_1_1AllocSpec" kindref="compound">AllocSpec</ref>&lt; Allocator &gt; const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Containers/Block.h" line="210" column="12" bodyfile="casa/Containers/Block.h" bodystart="210" bodyend="213"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1Block_1ad7f1848e2777d459401679e8c93e1c07" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>casacore::Block&lt; T &gt;::Block</definition>
        <argsstring>(size_t n)</argsstring>
        <name>Block</name>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Containers/Block.h" line="218" column="12" bodyfile="casa/Containers/Block.h" bodystart="218" bodyend="222"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1Block_1ad39aa797cd33703fd617f93f4fbb30fc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Allocator</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>casacore::Block&lt; T &gt;::Block</definition>
        <argsstring>(size_t n, AllocSpec&lt; Allocator &gt; const &amp;)</argsstring>
        <name>Block</name>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type><ref refid="structcasacore_1_1AllocSpec" kindref="compound">AllocSpec</ref>&lt; Allocator &gt; const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Containers/Block.h" line="227" column="3" bodyfile="casa/Containers/Block.h" bodystart="227" bodyend="231"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1Block_1a9fdc2077ce27e1be573d3d1581533baf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>casacore::Block&lt; T &gt;::Block</definition>
        <argsstring>(size_t n, ArrayInitPolicy initPolicy)</argsstring>
        <name>Block</name>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type><ref refid="classcasacore_1_1ArrayInitPolicy" kindref="compound">ArrayInitPolicy</ref></type>
          <declname>initPolicy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Containers/Block.h" line="236" column="3" bodyfile="casa/Containers/Block.h" bodystart="236" bodyend="240"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1Block_1afc773a03e44fda5a52e89213da2854af" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Allocator</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>casacore::Block&lt; T &gt;::Block</definition>
        <argsstring>(size_t n, ArrayInitPolicy initPolicy, AllocSpec&lt; Allocator &gt; const &amp;)</argsstring>
        <name>Block</name>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type><ref refid="classcasacore_1_1ArrayInitPolicy" kindref="compound">ArrayInitPolicy</ref></type>
          <declname>initPolicy</declname>
        </param>
        <param>
          <type><ref refid="structcasacore_1_1AllocSpec" kindref="compound">AllocSpec</ref>&lt; Allocator &gt; const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Containers/Block.h" line="245" column="3" bodyfile="casa/Containers/Block.h" bodystart="245" bodyend="250"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1Block_1a0874db4aa939cce0104c2ec3360d24ce" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>casacore::Block&lt; T &gt;::Block</definition>
        <argsstring>(size_t n, T const &amp;val)</argsstring>
        <name>Block</name>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>T const &amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Containers/Block.h" line="255" column="3" bodyfile="casa/Containers/Block.h" bodystart="255" bodyend="265"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1Block_1a9ad15285c9d9e347cb836aaf0a8c6804" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Allocator</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>casacore::Block&lt; T &gt;::Block</definition>
        <argsstring>(size_t n, T const &amp;val, AllocSpec&lt; Allocator &gt; const &amp;)</argsstring>
        <name>Block</name>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>T const &amp;</type>
          <declname>val</declname>
        </param>
        <param>
          <type><ref refid="structcasacore_1_1AllocSpec" kindref="compound">AllocSpec</ref>&lt; Allocator &gt; const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Containers/Block.h" line="270" column="3" bodyfile="casa/Containers/Block.h" bodystart="270" bodyend="280"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1Block_1ae437cf45986bfe4727360a8e28e81ff8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>casacore::Block&lt; T &gt;::Block</definition>
        <argsstring>(size_t n, T *&amp;storagePointer, Bool takeOverStorage=True)</argsstring>
        <name>Block</name>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>T *&amp;</type>
          <declname>storagePointer</declname>
        </param>
        <param>
          <type><ref refid="namespacecasacore_1abd5691f9e13acc90d901e4007740ff98" kindref="member">Bool</ref></type>
          <declname>takeOverStorage</declname>
          <defval><ref refid="namespacecasacore_1ad5c850f9e177173e0f7d0ad57091501d" kindref="member">True</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Containers/Block.h" line="292" column="3" bodyfile="casa/Containers/Block.h" bodystart="292" bodyend="298"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1Block_1a3476d32560ff2184c9c0c92a55820b65" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Allocator</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>casacore::Block&lt; T &gt;::Block</definition>
        <argsstring>(size_t n, T *&amp;storagePointer, Bool takeOverStorage, AllocSpec&lt; Allocator &gt; const &amp;)</argsstring>
        <name>Block</name>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>T *&amp;</type>
          <declname>storagePointer</declname>
        </param>
        <param>
          <type><ref refid="namespacecasacore_1abd5691f9e13acc90d901e4007740ff98" kindref="member">Bool</ref></type>
          <declname>takeOverStorage</declname>
        </param>
        <param>
          <type><ref refid="structcasacore_1_1AllocSpec" kindref="compound">AllocSpec</ref>&lt; Allocator &gt; const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Containers/Block.h" line="305" column="3" bodyfile="casa/Containers/Block.h" bodystart="305" bodyend="312"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1Block_1af48d169550e695008656812e1ccd7a95" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>casacore::Block&lt; T &gt;::Block</definition>
        <argsstring>(const Block&lt; T &gt; &amp;other)</argsstring>
        <name>Block</name>
        <param>
          <type>const <ref refid="classcasacore_1_1Block" kindref="compound">Block</ref>&lt; T &gt; &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Containers/Block.h" line="315" column="3" bodyfile="casa/Containers/Block.h" bodystart="315" bodyend="328"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1Block_1a0ca2f7ee6b06429b7e22d11801559186" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcasacore_1_1Block" kindref="compound">Block</ref>&lt; T &gt; &amp;</type>
        <definition>Block&lt;T&gt;&amp; casacore::Block&lt; T &gt;::operator=</definition>
        <argsstring>(const Block&lt; T &gt; &amp;other)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classcasacore_1_1Block" kindref="compound">Block</ref>&lt; T &gt; &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Containers/Block.h" line="332" column="9" bodyfile="casa/Containers/Block.h" bodystart="332" bodyend="344"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1Block_1ab5647add0900adf1629adb97705fe1d0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>casacore::Block&lt; T &gt;::~Block</definition>
        <argsstring>()</argsstring>
        <name>~Block</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Containers/Block.h" line="347" column="3" bodyfile="casa/Containers/Block.h" bodystart="347" bodyend="349"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1Block_1a52bd68f92cd0530a6059956a3a5f89b6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void casacore::Block&lt; T &gt;::resize</definition>
        <argsstring>(size_t n, Bool forceSmaller=False, Bool copyElements=True)</argsstring>
        <name>resize</name>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type><ref refid="namespacecasacore_1abd5691f9e13acc90d901e4007740ff98" kindref="member">Bool</ref></type>
          <declname>forceSmaller</declname>
          <defval><ref refid="namespacecasacore_1a11ef6530f2dc946f54d220fe416bfd41" kindref="member">False</ref></defval>
        </param>
        <param>
          <type><ref refid="namespacecasacore_1abd5691f9e13acc90d901e4007740ff98" kindref="member">Bool</ref></type>
          <declname>copyElements</declname>
          <defval><ref refid="namespacecasacore_1ad5c850f9e177173e0f7d0ad57091501d" kindref="member">True</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Containers/Block.h" line="375" column="8" bodyfile="casa/Containers/Block.h" bodystart="375" bodyend="378"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1Block_1a9185287f3679982478043f0b0a808a0f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void casacore::Block&lt; T &gt;::resize</definition>
        <argsstring>(size_t n, Bool forceSmaller, Bool copyElements, ArrayInitPolicy initPolicy)</argsstring>
        <name>resize</name>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type><ref refid="namespacecasacore_1abd5691f9e13acc90d901e4007740ff98" kindref="member">Bool</ref></type>
          <declname>forceSmaller</declname>
        </param>
        <param>
          <type><ref refid="namespacecasacore_1abd5691f9e13acc90d901e4007740ff98" kindref="member">Bool</ref></type>
          <declname>copyElements</declname>
        </param>
        <param>
          <type><ref refid="classcasacore_1_1ArrayInitPolicy" kindref="compound">ArrayInitPolicy</ref></type>
          <declname>initPolicy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Containers/Block.h" line="379" column="8" bodyfile="casa/Containers/Block.h" bodystart="379" bodyend="429"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1Block_1a14a2e01b0a0875553f84e83bae4c5c55" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void casacore::Block&lt; T &gt;::remove</definition>
        <argsstring>(size_t whichOne, Bool forceSmaller=True)</argsstring>
        <name>remove</name>
        <param>
          <type>size_t</type>
          <declname>whichOne</declname>
        </param>
        <param>
          <type><ref refid="namespacecasacore_1abd5691f9e13acc90d901e4007740ff98" kindref="member">Bool</ref></type>
          <declname>forceSmaller</declname>
          <defval><ref refid="namespacecasacore_1ad5c850f9e177173e0f7d0ad57091501d" kindref="member">True</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Containers/Block.h" line="442" column="8" bodyfile="casa/Containers/Block.h" bodystart="442" bodyend="445"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1Block_1a5f426526bec0def7b765ff748d0a2001" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void casacore::Block&lt; T &gt;::remove</definition>
        <argsstring>(size_t whichOne, Bool forceSmaller, ArrayInitPolicy initPolicy)</argsstring>
        <name>remove</name>
        <param>
          <type>size_t</type>
          <declname>whichOne</declname>
        </param>
        <param>
          <type><ref refid="namespacecasacore_1abd5691f9e13acc90d901e4007740ff98" kindref="member">Bool</ref></type>
          <declname>forceSmaller</declname>
        </param>
        <param>
          <type><ref refid="classcasacore_1_1ArrayInitPolicy" kindref="compound">ArrayInitPolicy</ref></type>
          <declname>initPolicy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Containers/Block.h" line="446" column="8" bodyfile="casa/Containers/Block.h" bodystart="446" bodyend="500"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1Block_1a57b7efb2ac4631bad3ef8e066280615d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void casacore::Block&lt; T &gt;::prohibitChangingAllocator</definition>
        <argsstring>()</argsstring>
        <name>prohibitChangingAllocator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Containers/Block.h" line="505" column="8" bodyfile="casa/Containers/Block.h" bodystart="505" bodyend="507"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1Block_1a5992622199ad33dc886065b02c27f545" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void casacore::Block&lt; T &gt;::permitChangingAllocator</definition>
        <argsstring>()</argsstring>
        <name>permitChangingAllocator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Containers/Block.h" line="509" column="8" bodyfile="casa/Containers/Block.h" bodystart="509" bodyend="511"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1Block_1a9127cdcd3b8011670f3b13a7c67ce276" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void casacore::Block&lt; T &gt;::replaceStorage</definition>
        <argsstring>(size_t n, T *&amp;storagePointer, Bool takeOverStorage=True)</argsstring>
        <name>replaceStorage</name>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>T *&amp;</type>
          <declname>storagePointer</declname>
        </param>
        <param>
          <type><ref refid="namespacecasacore_1abd5691f9e13acc90d901e4007740ff98" kindref="member">Bool</ref></type>
          <declname>takeOverStorage</declname>
          <defval><ref refid="namespacecasacore_1ad5c850f9e177173e0f7d0ad57091501d" kindref="member">True</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Containers/Block.h" line="527" column="8" bodyfile="casa/Containers/Block.h" bodystart="527" bodyend="529"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1Block_1a1c9b5629dc2cf208af959eca75e9d192" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Allocator</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void casacore::Block&lt; T &gt;::replaceStorage</definition>
        <argsstring>(size_t n, T *&amp;storagePointer, Bool takeOverStorage, AllocSpec&lt; Allocator &gt; const &amp;)</argsstring>
        <name>replaceStorage</name>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>T *&amp;</type>
          <declname>storagePointer</declname>
        </param>
        <param>
          <type><ref refid="namespacecasacore_1abd5691f9e13acc90d901e4007740ff98" kindref="member">Bool</ref></type>
          <declname>takeOverStorage</declname>
        </param>
        <param>
          <type><ref refid="structcasacore_1_1AllocSpec" kindref="compound">AllocSpec</ref>&lt; Allocator &gt; const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Containers/Block.h" line="531" column="8" bodyfile="casa/Containers/Block.h" bodystart="531" bodyend="548"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1Block_1a871099ac8995a7a7b5871dd20aeea950" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T &amp;</type>
        <definition>T&amp; casacore::Block&lt; T &gt;::operator[]</definition>
        <argsstring>(size_t index)</argsstring>
        <name>operator[]</name>
        <param>
          <type>size_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Containers/Block.h" line="559" column="5" bodyfile="casa/Containers/Block.h" bodystart="559" bodyend="569"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1Block_1a7d9904534ae6dd7a20ade4e56b0fe730" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const T &amp;</type>
        <definition>const T&amp; casacore::Block&lt; T &gt;::operator[]</definition>
        <argsstring>(size_t index) const</argsstring>
        <name>operator[]</name>
        <param>
          <type>size_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Containers/Block.h" line="570" column="11" bodyfile="casa/Containers/Block.h" bodystart="570" bodyend="578"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1Block_1aec6cf9e71998d00c4db916f13089542f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcasacore_1_1Block" kindref="compound">Block</ref>&lt; T &gt; &amp;</type>
        <definition>Block&lt;T&gt;&amp; casacore::Block&lt; T &gt;::operator=</definition>
        <argsstring>(const T &amp;val)</argsstring>
        <name>operator=</name>
        <param>
          <type>const T &amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Containers/Block.h" line="583" column="9" bodyfile="casa/Containers/Block.h" bodystart="583" bodyend="584"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1Block_1a5887a759f42bece4dbf9fe78026e087a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void casacore::Block&lt; T &gt;::set</definition>
        <argsstring>(const T &amp;val)</argsstring>
        <name>set</name>
        <param>
          <type>const T &amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Containers/Block.h" line="585" column="8" bodyfile="casa/Containers/Block.h" bodystart="585" bodyend="585"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1Block_1ae5ab55fb556b58fdd8f858c08d1bdf4f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T *</type>
        <definition>T* casacore::Block&lt; T &gt;::storage</definition>
        <argsstring>()</argsstring>
        <name>storage</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Containers/Block.h" line="603" column="5" bodyfile="casa/Containers/Block.h" bodystart="603" bodyend="603"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1Block_1afe59ecbe9cd086f12e19badf115a569d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const T *</type>
        <definition>const T* casacore::Block&lt; T &gt;::storage</definition>
        <argsstring>() const</argsstring>
        <name>storage</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Containers/Block.h" line="604" column="11" bodyfile="casa/Containers/Block.h" bodystart="604" bodyend="604"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1Block_1ab3901656c7deb4bc137aaa5594e7f661" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t casacore::Block&lt; T &gt;::nelements</definition>
        <argsstring>() const</argsstring>
        <name>nelements</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Containers/Block.h" line="609" column="10" bodyfile="casa/Containers/Block.h" bodystart="609" bodyend="609"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1Block_1a4969c628ec83aa94b3723a8b8adf186c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t casacore::Block&lt; T &gt;::size</definition>
        <argsstring>() const</argsstring>
        <name>size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Containers/Block.h" line="610" column="10" bodyfile="casa/Containers/Block.h" bodystart="610" bodyend="610"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1Block_1abdd19c4dbe9bbc29ef3526458838b768" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t casacore::Block&lt; T &gt;::capacity</definition>
        <argsstring>() const</argsstring>
        <name>capacity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Containers/Block.h" line="615" column="10" bodyfile="casa/Containers/Block.h" bodystart="615" bodyend="615"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1Block_1a1300e750daf4f65f833c6c31a2148d51" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacecasacore_1abd5691f9e13acc90d901e4007740ff98" kindref="member">Bool</ref></type>
        <definition>Bool casacore::Block&lt; T &gt;::empty</definition>
        <argsstring>() const</argsstring>
        <name>empty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Containers/Block.h" line="618" column="8" bodyfile="casa/Containers/Block.h" bodystart="618" bodyend="618"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1Block_1a549f52a10a1f228df5d97dc8935ef6dc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcasacore_1_1Block_1a1e3b61b92e3090211ab7ba61041fabf5" kindref="member">iterator</ref></type>
        <definition>iterator casacore::Block&lt; T &gt;::begin</definition>
        <argsstring>()</argsstring>
        <name>begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Containers/Block.h" line="643" column="12" bodyfile="casa/Containers/Block.h" bodystart="643" bodyend="644"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1Block_1a1ecd66c978b4ae346d51310d6190e308" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcasacore_1_1Block_1aabee07d1f26dd42874d68c4ed6fe8631" kindref="member">const_iterator</ref></type>
        <definition>const_iterator casacore::Block&lt; T &gt;::begin</definition>
        <argsstring>() const</argsstring>
        <name>begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Containers/Block.h" line="645" column="18" bodyfile="casa/Containers/Block.h" bodystart="645" bodyend="646"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1Block_1ae01a9c3f4ea08849bdb37955b1c3a172" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcasacore_1_1Block_1a1e3b61b92e3090211ab7ba61041fabf5" kindref="member">iterator</ref></type>
        <definition>iterator casacore::Block&lt; T &gt;::end</definition>
        <argsstring>()</argsstring>
        <name>end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Containers/Block.h" line="647" column="12" bodyfile="casa/Containers/Block.h" bodystart="647" bodyend="648"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1Block_1ac605d79a95a4338a2ec3d563652060f8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcasacore_1_1Block_1aabee07d1f26dd42874d68c4ed6fe8631" kindref="member">const_iterator</ref></type>
        <definition>const_iterator casacore::Block&lt; T &gt;::end</definition>
        <argsstring>() const</argsstring>
        <name>end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Containers/Block.h" line="649" column="18" bodyfile="casa/Containers/Block.h" bodystart="649" bodyend="650"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1Block_1abcfe1dc5971ffad2a66b1a2567841cb2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void casacore::Block&lt; T &gt;::traceAlloc</definition>
        <argsstring>(const void *addr, size_t sz) const</argsstring>
        <name>traceAlloc</name>
        <param>
          <type>const void *</type>
          <declname>addr</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>sz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Containers/Block.h" line="654" column="15" bodyfile="casa/Containers/Block.h" bodystart="654" bodyend="659"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1Block_1a42d64f36b9214d26ddc31dff1a4702e4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void casacore::Block&lt; T &gt;::traceFree</definition>
        <argsstring>(const void *addr, size_t sz) const</argsstring>
        <name>traceFree</name>
        <param>
          <type>const void *</type>
          <declname>addr</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>sz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Containers/Block.h" line="660" column="15" bodyfile="casa/Containers/Block.h" bodystart="660" bodyend="665"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classcasacore_1_1Block_1a95b22fc5d06dec01367739b981471fb4" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>casacore::Block&lt; T &gt;::Block</definition>
        <argsstring>(size_t n, ArrayInitPolicy initPolicy, Allocator_private::BulkAllocator&lt; T &gt; *allocator)</argsstring>
        <name>Block</name>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type><ref refid="classcasacore_1_1ArrayInitPolicy" kindref="compound">ArrayInitPolicy</ref></type>
          <declname>initPolicy</declname>
        </param>
        <param>
          <type>Allocator_private::BulkAllocator&lt; T &gt; *</type>
          <declname>allocator</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Containers/Block.h" line="670" column="3" bodyfile="casa/Containers/Block.h" bodystart="670" bodyend="675"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1Block_1ab4586d7a3b08d70e5c9475e3af854dde" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>casacore::Block&lt; T &gt;::Block</definition>
        <argsstring>(size_t n, Allocator_private::AllocSpec&lt; T &gt; allocator)</argsstring>
        <name>Block</name>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>Allocator_private::AllocSpec&lt; T &gt;</type>
          <declname>allocator</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Containers/Block.h" line="676" column="3" bodyfile="casa/Containers/Block.h" bodystart="676" bodyend="680"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1Block_1a704df0aa3750c8521a969bd5169d83af" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>casacore::Block&lt; T &gt;::Block</definition>
        <argsstring>(size_t n, T *&amp;storagePointer, Bool takeOverStorage, Allocator_private::BulkAllocator&lt; T &gt; *allocator)</argsstring>
        <name>Block</name>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>T *&amp;</type>
          <declname>storagePointer</declname>
        </param>
        <param>
          <type><ref refid="namespacecasacore_1abd5691f9e13acc90d901e4007740ff98" kindref="member">Bool</ref></type>
          <declname>takeOverStorage</declname>
        </param>
        <param>
          <type>Allocator_private::BulkAllocator&lt; T &gt; *</type>
          <declname>allocator</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Containers/Block.h" line="681" column="3" bodyfile="casa/Containers/Block.h" bodystart="681" bodyend="688"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1Block_1af0539bacf90240cf8485d35606f0adeb" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void casacore::Block&lt; T &gt;::construct</definition>
        <argsstring>(size_t pos, size_t n, T const *src)</argsstring>
        <name>construct</name>
        <param>
          <type>size_t</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>T const *</type>
          <declname>src</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Containers/Block.h" line="689" column="8" bodyfile="casa/Containers/Block.h" bodystart="689" bodyend="691"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1Block_1ad4b11c24fba58c40271087c2aba7d061" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void casacore::Block&lt; T &gt;::construct</definition>
        <argsstring>(size_t pos, size_t n, T const &amp;initial_value)</argsstring>
        <name>construct</name>
        <param>
          <type>size_t</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>T const &amp;</type>
          <declname>initial_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Containers/Block.h" line="692" column="8" bodyfile="casa/Containers/Block.h" bodystart="692" bodyend="695"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1Block_1a41d8161012e803ebaf3d264336f32647" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void casacore::Block&lt; T &gt;::construct</definition>
        <argsstring>(size_t pos, size_type n)</argsstring>
        <name>construct</name>
        <param>
          <type>size_t</type>
          <declname>pos</declname>
        </param>
        <param>
          <type><ref refid="classcasacore_1_1Block_1a6220caa6137a16a4fd2f814c9ee28f4d" kindref="member">size_type</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Containers/Block.h" line="696" column="8" bodyfile="casa/Containers/Block.h" bodystart="696" bodyend="698"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1Block_1acf7fdeee20a122eb1895c1051e1c960d" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void casacore::Block&lt; T &gt;::destroy</definition>
        <argsstring>(size_t pos, size_type n)</argsstring>
        <name>destroy</name>
        <param>
          <type>size_t</type>
          <declname>pos</declname>
        </param>
        <param>
          <type><ref refid="classcasacore_1_1Block_1a6220caa6137a16a4fd2f814c9ee28f4d" kindref="member">size_type</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Containers/Block.h" line="699" column="8" bodyfile="casa/Containers/Block.h" bodystart="699" bodyend="701"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1Block_1a2d20c09fc06e26512699b80e8de44f75" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Allocator_private::BulkAllocator&lt; T &gt; *</type>
        <definition>Allocator_private::BulkAllocator&lt;T&gt;* casacore::Block&lt; T &gt;::get_allocator</definition>
        <argsstring>()</argsstring>
        <name>get_allocator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Containers/Block.h" line="702" column="36" bodyfile="casa/Containers/Block.h" bodystart="702" bodyend="704"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1Block_1a62874c95c5c2146332169e2da8a599b0" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void casacore::Block&lt; T &gt;::init</definition>
        <argsstring>(ArrayInitPolicy initPolicy)</argsstring>
        <name>init</name>
        <param>
          <type><ref refid="classcasacore_1_1ArrayInitPolicy" kindref="compound">ArrayInitPolicy</ref></type>
          <declname>initPolicy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Containers/Block.h" line="713" column="8" bodyfile="casa/Containers/Block.h" bodystart="713" bodyend="729"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1Block_1a811c45e9a659e0114af24dfa12d3d109" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void casacore::Block&lt; T &gt;::deinit</definition>
        <argsstring>()</argsstring>
        <name>deinit</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Containers/Block.h" line="731" column="8" bodyfile="casa/Containers/Block.h" bodystart="731" bodyend="736"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1Block_1a40f0df87e3d3a659f7a220197f5035f7" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void casacore::Block&lt; T &gt;::dealloc</definition>
        <argsstring>()</argsstring>
        <name>dealloc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Containers/Block.h" line="737" column="8" bodyfile="casa/Containers/Block.h" bodystart="737" bodyend="743"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1Block_1a4f415c3b4a656d20c50b6a9aa890c850" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Allocator</type>
          </param>
        </templateparamlist>
        <type><ref refid="namespacecasacore_1abd5691f9e13acc90d901e4007740ff98" kindref="member">Bool</ref></type>
        <definition>Bool casacore::Block&lt; T &gt;::isCompatibleAllocator</definition>
        <argsstring>()</argsstring>
        <name>isCompatibleAllocator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Containers/Block.h" line="753" column="8" bodyfile="casa/Containers/Block.h" bodystart="753" bodyend="758"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1Block_1ac32260b0e70c19b91d2fbee62a955247" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t casacore::Block&lt; T &gt;::get_size</definition>
        <argsstring>() const</argsstring>
        <name>get_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Containers/Block.h" line="761" column="10" bodyfile="casa/Containers/Block.h" bodystart="761" bodyend="761"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1Block_1ac6ab1b369880563a515cc49e805d9af3" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void casacore::Block&lt; T &gt;::set_size</definition>
        <argsstring>(size_t new_value)</argsstring>
        <name>set_size</name>
        <param>
          <type>size_t</type>
          <declname>new_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Containers/Block.h" line="763" column="8" bodyfile="casa/Containers/Block.h" bodystart="763" bodyend="766"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1Block_1af341c5d41054c5afd7d53a6ff3694c78" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t casacore::Block&lt; T &gt;::get_capacity</definition>
        <argsstring>() const</argsstring>
        <name>get_capacity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Containers/Block.h" line="768" column="10" bodyfile="casa/Containers/Block.h" bodystart="768" bodyend="768"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1Block_1aebe4ab55dcd9aa32ef162ef8bbd87eb8" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void casacore::Block&lt; T &gt;::set_capacity</definition>
        <argsstring>(size_t new_value)</argsstring>
        <name>set_capacity</name>
        <param>
          <type>size_t</type>
          <declname>new_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Containers/Block.h" line="770" column="8" bodyfile="casa/Containers/Block.h" bodystart="770" bodyend="773"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classcasacore_1_1Block_1a1ec95549ba4ebe9a48350a0e09cc0a15" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool casacore::Block&lt; T &gt;::init_anyway</definition>
        <argsstring>()</argsstring>
        <name>init_anyway</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Containers/Block.h" line="706" column="15" bodyfile="casa/Containers/Block.h" bodystart="706" bodyend="709"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1Block_1a23bf9656850d7018061d0b701cc6b688" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Allocator</type>
          </param>
        </templateparamlist>
        <type>Allocator_private::BulkAllocator&lt; typename Allocator::value_type &gt; *</type>
        <definition>static Allocator_private::BulkAllocator&lt; typename Allocator::value_type&gt;* casacore::Block&lt; T &gt;::get_allocator</definition>
        <argsstring>()</argsstring>
        <name>get_allocator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Containers/Block.h" line="747" column="2" bodyfile="casa/Containers/Block.h" bodystart="747" bodyend="750"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>casacore::BlockTrace</label>
        <link refid="classcasacore_1_1BlockTrace"/>
      </node>
      <node id="1">
        <label>casacore::Block&lt; T &gt;</label>
        <link refid="classcasacore_1_1Block"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>casacore::BlockTrace</label>
        <link refid="classcasacore_1_1BlockTrace"/>
      </node>
      <node id="1">
        <label>casacore::Block&lt; T &gt;</label>
        <link refid="classcasacore_1_1Block"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="casa/Containers/Block.h" line="197" column="11" bodyfile="casa/Containers/Block.h" bodystart="198" bodyend="787"/>
    <listofallmembers>
      <member refid="classcasacore_1_1Block_1a1e931bb573c26acb8963eb28bb6fc3cb" prot="private" virt="non-virtual"><scope>casacore::Block</scope><name>allocator_p</name></member>
      <member refid="classcasacore_1_1Block_1a141034c7471c322db88e809cdfe3ef59" prot="private" virt="non-virtual"><scope>casacore::Block</scope><name>array</name></member>
      <member refid="classcasacore_1_1Block_1a1584e975b2e217614a86ddbfbdee793c" prot="private" virt="non-virtual"><scope>casacore::Block</scope><name>Array&lt; T &gt;</name></member>
      <member refid="classcasacore_1_1Block_1a549f52a10a1f228df5d97dc8935ef6dc" prot="public" virt="non-virtual"><scope>casacore::Block</scope><name>begin</name></member>
      <member refid="classcasacore_1_1Block_1a1ecd66c978b4ae346d51310d6190e308" prot="public" virt="non-virtual"><scope>casacore::Block</scope><name>begin</name></member>
      <member refid="classcasacore_1_1Block_1abe2f26b768833fd0c457cc713c72614f" prot="public" virt="non-virtual"><scope>casacore::Block</scope><name>Block</name></member>
      <member refid="classcasacore_1_1Block_1a7585c1195b6d7edeea96b83c7120e05f" prot="public" virt="non-virtual"><scope>casacore::Block</scope><name>Block</name></member>
      <member refid="classcasacore_1_1Block_1ad7f1848e2777d459401679e8c93e1c07" prot="public" virt="non-virtual"><scope>casacore::Block</scope><name>Block</name></member>
      <member refid="classcasacore_1_1Block_1ad39aa797cd33703fd617f93f4fbb30fc" prot="public" virt="non-virtual"><scope>casacore::Block</scope><name>Block</name></member>
      <member refid="classcasacore_1_1Block_1a9fdc2077ce27e1be573d3d1581533baf" prot="public" virt="non-virtual"><scope>casacore::Block</scope><name>Block</name></member>
      <member refid="classcasacore_1_1Block_1afc773a03e44fda5a52e89213da2854af" prot="public" virt="non-virtual"><scope>casacore::Block</scope><name>Block</name></member>
      <member refid="classcasacore_1_1Block_1a0874db4aa939cce0104c2ec3360d24ce" prot="public" virt="non-virtual"><scope>casacore::Block</scope><name>Block</name></member>
      <member refid="classcasacore_1_1Block_1a9ad15285c9d9e347cb836aaf0a8c6804" prot="public" virt="non-virtual"><scope>casacore::Block</scope><name>Block</name></member>
      <member refid="classcasacore_1_1Block_1ae437cf45986bfe4727360a8e28e81ff8" prot="public" virt="non-virtual"><scope>casacore::Block</scope><name>Block</name></member>
      <member refid="classcasacore_1_1Block_1a3476d32560ff2184c9c0c92a55820b65" prot="public" virt="non-virtual"><scope>casacore::Block</scope><name>Block</name></member>
      <member refid="classcasacore_1_1Block_1af48d169550e695008656812e1ccd7a95" prot="public" virt="non-virtual"><scope>casacore::Block</scope><name>Block</name></member>
      <member refid="classcasacore_1_1Block_1a95b22fc5d06dec01367739b981471fb4" prot="private" virt="non-virtual"><scope>casacore::Block</scope><name>Block</name></member>
      <member refid="classcasacore_1_1Block_1ab4586d7a3b08d70e5c9475e3af854dde" prot="private" virt="non-virtual"><scope>casacore::Block</scope><name>Block</name></member>
      <member refid="classcasacore_1_1Block_1a704df0aa3750c8521a969bd5169d83af" prot="private" virt="non-virtual"><scope>casacore::Block</scope><name>Block</name></member>
      <member refid="classcasacore_1_1Block_1abdd19c4dbe9bbc29ef3526458838b768" prot="public" virt="non-virtual"><scope>casacore::Block</scope><name>capacity</name></member>
      <member refid="classcasacore_1_1Block_1a0c0875ed9c6010001cb0c1194de299ce" prot="private" virt="non-virtual"><scope>casacore::Block</scope><name>capacity_p</name></member>
      <member refid="classcasacore_1_1Block_1aabee07d1f26dd42874d68c4ed6fe8631" prot="public" virt="non-virtual"><scope>casacore::Block</scope><name>const_iterator</name></member>
      <member refid="classcasacore_1_1Block_1a75b9e8725e9bf365aaa116dc17033617" prot="public" virt="non-virtual"><scope>casacore::Block</scope><name>const_pointer</name></member>
      <member refid="classcasacore_1_1Block_1a7b93731cf214ab019e25a6ede6cfdb96" prot="public" virt="non-virtual"><scope>casacore::Block</scope><name>const_reference</name></member>
      <member refid="classcasacore_1_1Block_1af0539bacf90240cf8485d35606f0adeb" prot="private" virt="non-virtual"><scope>casacore::Block</scope><name>construct</name></member>
      <member refid="classcasacore_1_1Block_1ad4b11c24fba58c40271087c2aba7d061" prot="private" virt="non-virtual"><scope>casacore::Block</scope><name>construct</name></member>
      <member refid="classcasacore_1_1Block_1a41d8161012e803ebaf3d264336f32647" prot="private" virt="non-virtual"><scope>casacore::Block</scope><name>construct</name></member>
      <member refid="classcasacore_1_1Block_1a40f0df87e3d3a659f7a220197f5035f7" prot="private" virt="non-virtual"><scope>casacore::Block</scope><name>dealloc</name></member>
      <member refid="classcasacore_1_1Block_1a811c45e9a659e0114af24dfa12d3d109" prot="private" virt="non-virtual"><scope>casacore::Block</scope><name>deinit</name></member>
      <member refid="classcasacore_1_1Block_1acf7fdeee20a122eb1895c1051e1c960d" prot="private" virt="non-virtual"><scope>casacore::Block</scope><name>destroy</name></member>
      <member refid="classcasacore_1_1Block_1a4de1604f6b598f16339aaf3be8052650" prot="private" virt="non-virtual"><scope>casacore::Block</scope><name>destroyPointer</name></member>
      <member refid="classcasacore_1_1Block_1aed1679bbee2b7b1af9f648199b12bcc2" prot="public" virt="non-virtual"><scope>casacore::Block</scope><name>difference_type</name></member>
      <member refid="classcasacore_1_1BlockTrace_1a94c107042fc992c1fd44d0738f674f21" prot="protected" virt="non-virtual"><scope>casacore::Block</scope><name>doTraceAlloc</name></member>
      <member refid="classcasacore_1_1BlockTrace_1a23ed3e76217cccb58953eda91389bc5a" prot="protected" virt="non-virtual"><scope>casacore::Block</scope><name>doTraceFree</name></member>
      <member refid="classcasacore_1_1Block_1a1300e750daf4f65f833c6c31a2148d51" prot="public" virt="non-virtual"><scope>casacore::Block</scope><name>empty</name></member>
      <member refid="classcasacore_1_1Block_1ae01a9c3f4ea08849bdb37955b1c3a172" prot="public" virt="non-virtual"><scope>casacore::Block</scope><name>end</name></member>
      <member refid="classcasacore_1_1Block_1ac605d79a95a4338a2ec3d563652060f8" prot="public" virt="non-virtual"><scope>casacore::Block</scope><name>end</name></member>
      <member refid="classcasacore_1_1Block_1a2d20c09fc06e26512699b80e8de44f75" prot="private" virt="non-virtual"><scope>casacore::Block</scope><name>get_allocator</name></member>
      <member refid="classcasacore_1_1Block_1a23bf9656850d7018061d0b701cc6b688" prot="private" virt="non-virtual"><scope>casacore::Block</scope><name>get_allocator</name></member>
      <member refid="classcasacore_1_1Block_1af341c5d41054c5afd7d53a6ff3694c78" prot="private" virt="non-virtual"><scope>casacore::Block</scope><name>get_capacity</name></member>
      <member refid="classcasacore_1_1Block_1ac32260b0e70c19b91d2fbee62a955247" prot="private" virt="non-virtual"><scope>casacore::Block</scope><name>get_size</name></member>
      <member refid="classcasacore_1_1Block_1a62874c95c5c2146332169e2da8a599b0" prot="private" virt="non-virtual"><scope>casacore::Block</scope><name>init</name></member>
      <member refid="classcasacore_1_1Block_1a1ec95549ba4ebe9a48350a0e09cc0a15" prot="private" virt="non-virtual"><scope>casacore::Block</scope><name>init_anyway</name></member>
      <member refid="classcasacore_1_1Block_1a4f415c3b4a656d20c50b6a9aa890c850" prot="private" virt="non-virtual"><scope>casacore::Block</scope><name>isCompatibleAllocator</name></member>
      <member refid="classcasacore_1_1Block_1a1e3b61b92e3090211ab7ba61041fabf5" prot="public" virt="non-virtual"><scope>casacore::Block</scope><name>iterator</name></member>
      <member refid="classcasacore_1_1BlockTrace_1a4cf7dff334bf3a5f0421d860d881f6f5" prot="protected" virt="non-virtual"><scope>casacore::Block</scope><name>itsTraceSize</name></member>
      <member refid="classcasacore_1_1Block_1aedbd06975fbd60205a5a05cd612906e4" prot="private" virt="non-virtual"><scope>casacore::Block</scope><name>keep_allocator_p</name></member>
      <member refid="classcasacore_1_1Block_1ab3901656c7deb4bc137aaa5594e7f661" prot="public" virt="non-virtual"><scope>casacore::Block</scope><name>nelements</name></member>
      <member refid="classcasacore_1_1Block_1a0ca2f7ee6b06429b7e22d11801559186" prot="public" virt="non-virtual"><scope>casacore::Block</scope><name>operator=</name></member>
      <member refid="classcasacore_1_1Block_1aec6cf9e71998d00c4db916f13089542f" prot="public" virt="non-virtual"><scope>casacore::Block</scope><name>operator=</name></member>
      <member refid="classcasacore_1_1Block_1a871099ac8995a7a7b5871dd20aeea950" prot="public" virt="non-virtual"><scope>casacore::Block</scope><name>operator[]</name></member>
      <member refid="classcasacore_1_1Block_1a7d9904534ae6dd7a20ade4e56b0fe730" prot="public" virt="non-virtual"><scope>casacore::Block</scope><name>operator[]</name></member>
      <member refid="classcasacore_1_1Block_1a5992622199ad33dc886065b02c27f545" prot="public" virt="non-virtual"><scope>casacore::Block</scope><name>permitChangingAllocator</name></member>
      <member refid="classcasacore_1_1Block_1add995d94674d5e93dca2d4a59249873e" prot="public" virt="non-virtual"><scope>casacore::Block</scope><name>pointer</name></member>
      <member refid="classcasacore_1_1Block_1a57b7efb2ac4631bad3ef8e066280615d" prot="public" virt="non-virtual"><scope>casacore::Block</scope><name>prohibitChangingAllocator</name></member>
      <member refid="classcasacore_1_1Block_1a93c7a11d0a253d3e24d80ca8b237a3ea" prot="public" virt="non-virtual"><scope>casacore::Block</scope><name>reference</name></member>
      <member refid="classcasacore_1_1Block_1a14a2e01b0a0875553f84e83bae4c5c55" prot="public" virt="non-virtual"><scope>casacore::Block</scope><name>remove</name></member>
      <member refid="classcasacore_1_1Block_1a5f426526bec0def7b765ff748d0a2001" prot="public" virt="non-virtual"><scope>casacore::Block</scope><name>remove</name></member>
      <member refid="classcasacore_1_1Block_1a9127cdcd3b8011670f3b13a7c67ce276" prot="public" virt="non-virtual"><scope>casacore::Block</scope><name>replaceStorage</name></member>
      <member refid="classcasacore_1_1Block_1a1c9b5629dc2cf208af959eca75e9d192" prot="public" virt="non-virtual"><scope>casacore::Block</scope><name>replaceStorage</name></member>
      <member refid="classcasacore_1_1Block_1a52bd68f92cd0530a6059956a3a5f89b6" prot="public" virt="non-virtual"><scope>casacore::Block</scope><name>resize</name></member>
      <member refid="classcasacore_1_1Block_1a9185287f3679982478043f0b0a808a0f" prot="public" virt="non-virtual"><scope>casacore::Block</scope><name>resize</name></member>
      <member refid="classcasacore_1_1Block_1a5887a759f42bece4dbf9fe78026e087a" prot="public" virt="non-virtual"><scope>casacore::Block</scope><name>set</name></member>
      <member refid="classcasacore_1_1Block_1aebe4ab55dcd9aa32ef162ef8bbd87eb8" prot="private" virt="non-virtual"><scope>casacore::Block</scope><name>set_capacity</name></member>
      <member refid="classcasacore_1_1Block_1ac6ab1b369880563a515cc49e805d9af3" prot="private" virt="non-virtual"><scope>casacore::Block</scope><name>set_size</name></member>
      <member refid="classcasacore_1_1BlockTrace_1a6b8a121b96cd51b5393b36eab87db190" prot="public" virt="non-virtual"><scope>casacore::Block</scope><name>setTraceSize</name></member>
      <member refid="classcasacore_1_1Block_1a4969c628ec83aa94b3723a8b8adf186c" prot="public" virt="non-virtual"><scope>casacore::Block</scope><name>size</name></member>
      <member refid="classcasacore_1_1Block_1a6220caa6137a16a4fd2f814c9ee28f4d" prot="public" virt="non-virtual"><scope>casacore::Block</scope><name>size_type</name></member>
      <member refid="classcasacore_1_1Block_1ae5ab55fb556b58fdd8f858c08d1bdf4f" prot="public" virt="non-virtual"><scope>casacore::Block</scope><name>storage</name></member>
      <member refid="classcasacore_1_1Block_1afe59ecbe9cd086f12e19badf115a569d" prot="public" virt="non-virtual"><scope>casacore::Block</scope><name>storage</name></member>
      <member refid="classcasacore_1_1Block_1abcfe1dc5971ffad2a66b1a2567841cb2" prot="public" virt="non-virtual"><scope>casacore::Block</scope><name>traceAlloc</name></member>
      <member refid="classcasacore_1_1Block_1a42d64f36b9214d26ddc31dff1a4702e4" prot="public" virt="non-virtual"><scope>casacore::Block</scope><name>traceFree</name></member>
      <member refid="classcasacore_1_1Block_1a1a52490376c0b068194519b88b5af310" prot="private" virt="non-virtual"><scope>casacore::Block</scope><name>used_p</name></member>
      <member refid="classcasacore_1_1Block_1a8b059766309a8e80b56cd8afc37883b7" prot="public" virt="non-virtual"><scope>casacore::Block</scope><name>value_type</name></member>
      <member refid="classcasacore_1_1Block_1ab5647add0900adf1629adb97705fe1d0" prot="public" virt="non-virtual"><scope>casacore::Block</scope><name>~Block</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
