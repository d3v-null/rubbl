<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="namespaceanonymous__namespace_02testtimeblockencoder_8cc_03" kind="namespace" language="C++">
    <compoundname>anonymous_namespace{testtimeblockencoder.cc}</compoundname>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespaceanonymous__namespace_02testtimeblockencoder_8cc_03_1aa63ab0bcd133a2cdd05c322be1ac4cd7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::unique_ptr&lt; <ref refid="classTimeBlockEncoder" kindref="compound">TimeBlockEncoder</ref> &gt;</type>
        <definition>std::unique_ptr&lt;TimeBlockEncoder&gt; anonymous_namespace{testtimeblockencoder.cc}::CreateEncoder</definition>
        <argsstring>(Normalization blockNormalization, size_t nPol, size_t nChan)</argsstring>
        <name>CreateEncoder</name>
        <param>
          <type><ref refid="namespacedyscostman_1a0310ef73fb535ced1f64687d171da9a2" kindref="member">Normalization</ref></type>
          <declname>blockNormalization</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>nPol</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>nChan</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tables/Dysco/tests/testtimeblockencoder.cc" line="17" column="17" bodyfile="tables/Dysco/tests/testtimeblockencoder.cc" bodystart="17" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="namespaceanonymous__namespace_02testtimeblockencoder_8cc_03_1a663f281084eb39e585163330857368f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classTimeBlockBuffer" kindref="compound">TimeBlockBuffer</ref>&lt; std::complex&lt; float &gt; &gt;</type>
        <definition>TimeBlockBuffer&lt;std::complex&lt;float&gt; &gt; anonymous_namespace{testtimeblockencoder.cc}::Decode</definition>
        <argsstring>(Normalization blockNormalization, StochasticEncoder&lt; float &gt; &amp;gausEncoder, size_t nAnt, size_t nChan, size_t nPol, size_t nRow, const float *metaBuffer, const TimeBlockEncoder::symbol_t *symbolBuffer)</argsstring>
        <name>Decode</name>
        <param>
          <type><ref refid="namespacedyscostman_1a0310ef73fb535ced1f64687d171da9a2" kindref="member">Normalization</ref></type>
          <declname>blockNormalization</declname>
        </param>
        <param>
          <type><ref refid="classdyscostman_1_1StochasticEncoder" kindref="compound">StochasticEncoder</ref>&lt; float &gt; &amp;</type>
          <declname>gausEncoder</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>nAnt</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>nChan</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>nPol</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>nRow</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>metaBuffer</declname>
        </param>
        <param>
          <type>const <ref refid="classTimeBlockEncoder_1a862b6db652dffb0f26de18040cd17003" kindref="member">TimeBlockEncoder::symbol_t</ref> *</type>
          <declname>symbolBuffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tables/Dysco/tests/testtimeblockencoder.cc" line="33" column="17" bodyfile="tables/Dysco/tests/testtimeblockencoder.cc" bodystart="33" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="namespaceanonymous__namespace_02testtimeblockencoder_8cc_03_1a9d7eee1e4073f480f30e7d7213a9bf9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void anonymous_namespace{testtimeblockencoder.cc}::TestSimpleExample</definition>
        <argsstring>(Normalization blockNormalization)</argsstring>
        <name>TestSimpleExample</name>
        <param>
          <type><ref refid="namespacedyscostman_1a0310ef73fb535ced1f64687d171da9a2" kindref="member">Normalization</ref></type>
          <declname>blockNormalization</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tables/Dysco/tests/testtimeblockencoder.cc" line="52" column="6" bodyfile="tables/Dysco/tests/testtimeblockencoder.cc" bodystart="52" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="namespaceanonymous__namespace_02testtimeblockencoder_8cc_03_1af346325806ee62e631557df5b479bae4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void anonymous_namespace{testtimeblockencoder.cc}::TestTimeBlockEncoder</definition>
        <argsstring>(Normalization blockNormalization)</argsstring>
        <name>TestTimeBlockEncoder</name>
        <param>
          <type><ref refid="namespacedyscostman_1a0310ef73fb535ced1f64687d171da9a2" kindref="member">Normalization</ref></type>
          <declname>blockNormalization</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tables/Dysco/tests/testtimeblockencoder.cc" line="122" column="6" bodyfile="tables/Dysco/tests/testtimeblockencoder.cc" bodystart="122" bodyend="222"/>
      </memberdef>
      <memberdef kind="function" id="namespaceanonymous__namespace_02testtimeblockencoder_8cc_03_1a01441f220cf924dbf54c5ac6e7fa60f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classTimeBlockBuffer" kindref="compound">TimeBlockBuffer</ref>&lt; std::complex&lt; float &gt; &gt;</type>
        <definition>TimeBlockBuffer&lt;std::complex&lt;float&gt; &gt; anonymous_namespace{testtimeblockencoder.cc}::EncodeDecode</definition>
        <argsstring>(Normalization block_normalization, TimeBlockBuffer&lt; std::complex&lt; float &gt;&gt; &amp;buffer, size_t n_pol, size_t n_chan, size_t n_ant)</argsstring>
        <name>EncodeDecode</name>
        <param>
          <type><ref refid="namespacedyscostman_1a0310ef73fb535ced1f64687d171da9a2" kindref="member">Normalization</ref></type>
          <declname>block_normalization</declname>
        </param>
        <param>
          <type><ref refid="classTimeBlockBuffer" kindref="compound">TimeBlockBuffer</ref>&lt; std::complex&lt; float &gt;&gt; &amp;</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n_pol</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n_chan</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n_ant</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tables/Dysco/tests/testtimeblockencoder.cc" line="224" column="17" bodyfile="tables/Dysco/tests/testtimeblockencoder.cc" bodystart="224" bodyend="239"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="tables/Dysco/tests/testtimeblockencoder.cc" line="15" column="1"/>
  </compounddef>
</doxygen>
