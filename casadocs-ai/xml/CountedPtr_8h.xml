<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="CountedPtr_8h" kind="file" language="C++">
    <compoundname>CountedPtr.h</compoundname>
    <includes refid="aips_8h" local="no">casacore/casa/aips.h</includes>
    <includes local="no">memory</includes>
    <includes refid="CountedPtr_8tcc" local="no">casacore/casa/Utilities/CountedPtr.tcc</includes>
    <includedby refid="CountedPtr2_8cc" local="no">casa/Utilities/CountedPtr2.cc</includedby>
    <includedby refid="Utilities_8h" local="no">casa/Utilities.h</includedby>
    <incdepgraph>
      <node id="3">
        <label>casacore/casa/aipsenv.h</label>
        <link refid="aipsenv_8h"/>
      </node>
      <node id="8">
        <label>casacore/casa/Utilities/CountedPtr.tcc</label>
        <link refid="CountedPtr_8tcc"/>
      </node>
      <node id="4">
        <label>casacore/casa/aipstype.h</label>
        <link refid="aipstype_8h"/>
      </node>
      <node id="1">
        <label>casa/Utilities/CountedPtr.h</label>
        <link refid="CountedPtr_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>casacore/casa/aips.h</label>
        <link refid="aips_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>casacore/casa/aipsdef.h</label>
        <link refid="aipsdef_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>casacore/casa/aipsxtype.h</label>
        <link refid="aipsxtype_8h"/>
      </node>
      <node id="7">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>casa/Utilities.h</label>
        <link refid="Utilities_8h"/>
      </node>
      <node id="1">
        <label>casa/Utilities/CountedPtr.h</label>
        <link refid="CountedPtr_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>casa/Utilities/CountedPtr2.cc</label>
        <link refid="CountedPtr2_8cc"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classcasacore_1_1CountedPtr" prot="public">casacore::CountedPtr</innerclass>
    <innerclass refid="classcasacore_1_1CountedPtr_1_1Deleter" prot="protected">casacore::CountedPtr::Deleter</innerclass>
    <innernamespace refid="namespacecasacore">casacore</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="CountedPtr_8h_1ae3d1729de55e236a0ec3e8654cc4cc83" prot="public" static="no">
        <name>SHARED_PTR</name>
        <initializer>std::shared_ptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Utilities/CountedPtr.h" line="35" column="9" bodyfile="casa/Utilities/CountedPtr.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="CountedPtr_8h_1ab9e0b0a832d3afc04fdedd39c60d93c0" prot="public" static="no">
        <name>DYNAMIC_POINTER_CAST</name>
        <initializer>std::dynamic_pointer_cast</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Utilities/CountedPtr.h" line="36" column="9" bodyfile="casa/Utilities/CountedPtr.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="CountedPtr_8h_1a89ba88e6061cb844bc42e384b76b7a17" prot="public" static="no">
        <name>CONST_POINTER_CAST</name>
        <initializer>std::const_pointer_cast</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Utilities/CountedPtr.h" line="37" column="9" bodyfile="casa/Utilities/CountedPtr.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="CountedPtr_8h_1a97acacb7f238c6debd2c079b05e588ec" prot="public" static="no">
        <name>STATIC_POINTER_CAST</name>
        <initializer>std::static_pointer_cast</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Utilities/CountedPtr.h" line="38" column="9" bodyfile="casa/Utilities/CountedPtr.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//#<sp/>CountedPtr.h:<sp/>Referenced<sp/>counted<sp/>pointer<sp/>classes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>Copyright<sp/>(C)<sp/>1993,1994,1995,1996,1999,2001</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>Associated<sp/>Universities,<sp/>Inc.<sp/>Washington<sp/>DC,<sp/>USA.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>This<sp/>library<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Library<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>2<sp/>of<sp/>the<sp/>License,<sp/>or<sp/>(at<sp/>your</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>This<sp/>library<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,<sp/>but<sp/>WITHOUT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of<sp/>MERCHANTABILITY<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the<sp/>GNU<sp/>Library<sp/>General<sp/>Public</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>License<sp/>for<sp/>more<sp/>details.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Library<sp/>General<sp/>Public<sp/>License</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>along<sp/>with<sp/>this<sp/>library;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software<sp/>Foundation,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>Inc.,<sp/>675<sp/>Massachusetts<sp/>Ave,<sp/>Cambridge,<sp/>MA<sp/>02139,<sp/>USA.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>Correspondence<sp/>concerning<sp/>AIPS++<sp/>should<sp/>be<sp/>addressed<sp/>as<sp/>follows:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Internet<sp/>email:<sp/>casa-feedback@nrao.edu.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Postal<sp/>address:<sp/>AIPS++<sp/>Project<sp/>Office</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>National<sp/>Radio<sp/>Astronomy<sp/>Observatory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>520<sp/>Edgemont<sp/>Road</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Charlottesville,<sp/>VA<sp/>22903-2475<sp/>USA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>CASA_COUNTEDPTR_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CASA_COUNTEDPTR_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="aips_8h" kindref="compound">casacore/casa/aips.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>Define<sp/>the<sp/>old<sp/>names<sp/>for<sp/>backward<sp/>compatibility.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="CountedPtr_8h_1ae3d1729de55e236a0ec3e8654cc4cc83" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SHARED_PTR<sp/>std::shared_ptr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="CountedPtr_8h_1ab9e0b0a832d3afc04fdedd39c60d93c0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DYNAMIC_POINTER_CAST<sp/>std::dynamic_pointer_cast</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="CountedPtr_8h_1a89ba88e6061cb844bc42e384b76b7a17" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CONST_POINTER_CAST<sp/>std::const_pointer_cast</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="CountedPtr_8h_1a97acacb7f238c6debd2c079b05e588ec" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STATIC_POINTER_CAST<sp/>std::static_pointer_cast</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacecasacore" kindref="compound">casacore</ref><sp/>{<sp/></highlight><highlight class="comment">//#Begin<sp/>casa<sp/>namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;summary&gt;<sp/>act<sp/>on<sp/>dereference<sp/>error<sp/>&lt;/summary&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;synopsis&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Global<sp/>function<sp/>that<sp/>throws<sp/>an<sp/>exception.<sp/>It<sp/>is<sp/>called<sp/>by<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">//<sp/>member<sp/>functions<sp/>of<sp/>the<sp/>counted<sp/>pointer<sp/>classes<sp/>when<sp/>an</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">//<sp/>un-initialized<sp/>(null)<sp/>pointer<sp/>is<sp/>followed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;/synopsis&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;group<sp/>name=dereference_error&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacecasacore_1ac84d4b21b244b3b41ab103f46d34d9c4" kindref="member">throw_Null_CountedPtr_dereference_error</ref>();</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;/group&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;summary&gt;Referenced<sp/>counted<sp/>pointer<sp/>for<sp/>constant<sp/>data&lt;/summary&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;use<sp/>visibility=export&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;reviewed<sp/>reviewer=&quot;Friso<sp/>Olnon&quot;<sp/>date=&quot;1995/03/15&quot;<sp/>tests=&quot;tCountedPtr&quot;<sp/>demos=&quot;&quot;&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;etymology&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>class<sp/>is<sp/>&lt;em&gt;Counted&lt;/em&gt;<sp/>because<sp/>it<sp/>is<sp/>reference<sp/>counted.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;/etymology&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;synopsis&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>class<sp/>implements<sp/>a<sp/>reference<sp/>counting<sp/>mechanism.<sp/>It</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="comment">//<sp/>allows<sp/>&lt;src&gt;CountedPtr&lt;/src&gt;s<sp/>to<sp/>be<sp/>passed<sp/>around<sp/>freely,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="comment">//<sp/>incrementing<sp/>or<sp/>decrementing<sp/>the<sp/>reference<sp/>count<sp/>as<sp/>needed<sp/>when<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;src&gt;CountedPtr&lt;/src&gt;<sp/>is<sp/>assigned<sp/>to<sp/>another.<sp/>When<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="comment">//<sp/>reference<sp/>count<sp/>reaches<sp/>zero<sp/>the<sp/>internal<sp/>storage<sp/>is<sp/>deleted<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="comment">//<sp/>default,<sp/>but<sp/>this<sp/>behavior<sp/>can<sp/>be<sp/>overridden.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Internally<sp/>the<sp/>class<sp/>uses<sp/>std::shared_ptr<sp/>to<sp/>be<sp/>thread-safe.<sp/>Note<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="comment">//<sp/>tr1<sp/>is<sp/>used<sp/>if<sp/>the<sp/>compiler<sp/>does<sp/>not<sp/>support<sp/>C++11<sp/>yet.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;/synopsis&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;motivation&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Reference<sp/>counting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;/motivation&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>t&gt;</highlight></codeline>
<codeline lineno="80" refid="classcasacore_1_1CountedPtr" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcasacore_1_1CountedPtr" kindref="compound">CountedPtr</ref></highlight></codeline>
<codeline lineno="81"><highlight class="normal">{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Helper<sp/>class<sp/>to<sp/>make<sp/>deletion<sp/>of<sp/>object<sp/>optional.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="86" refid="classcasacore_1_1CountedPtr_1_1Deleter" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcasacore_1_1CountedPtr_1_1Deleter" kindref="compound">Deleter</ref><sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="88" refid="classcasacore_1_1CountedPtr_1_1Deleter_1a15b168a02c59f5cd8a2d01c88727d879" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcasacore_1_1CountedPtr_1_1Deleter_1a15b168a02c59f5cd8a2d01c88727d879" kindref="member">Deleter</ref><sp/>(<ref refid="namespacecasacore_1abd5691f9e13acc90d901e4007740ff98" kindref="member">Bool</ref><sp/>deleteIt)<sp/>:<sp/>reallyDeleteIt_p<sp/>(deleteIt)<sp/>{}</highlight></codeline>
<codeline lineno="89" refid="classcasacore_1_1CountedPtr_1_1Deleter_1abeda9d03317bddb310ea0f5709c21015" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcasacore_1_1CountedPtr_1_1Deleter_1abeda9d03317bddb310ea0f5709c21015" kindref="member">operator() </ref>(T<sp/>*<sp/>data)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(reallyDeleteIt_p)<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>data;}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacecasacore_1abd5691f9e13acc90d901e4007740ff98" kindref="member">Bool</ref><sp/>reallyDeleteIt_p;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>constructor<sp/>allows<sp/>for<sp/>the<sp/>creation<sp/>of<sp/>a<sp/>null</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&lt;src&gt;CountedPtr&lt;/src&gt;.<sp/>The<sp/>assignment<sp/>operator<sp/>can<sp/>be<sp/>used</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>assign<sp/>a<sp/>null<sp/>&lt;src&gt;CountedPtr&lt;/src&gt;<sp/>from<sp/>another</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pointer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104" refid="classcasacore_1_1CountedPtr_1ae25f8f624b087ca2cdfb800a5710880d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcasacore_1_1CountedPtr_1ae25f8f624b087ca2cdfb800a5710880d" kindref="member">CountedPtr</ref>()<sp/>:<sp/>pointerRep_p<sp/>()<sp/>{}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>constructor<sp/>sets<sp/>up<sp/>a<sp/>reference<sp/>count<sp/>for<sp/>the<sp/>&lt;src&gt;val&lt;/src&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pointer.<sp/><sp/>By<sp/>default,<sp/>the<sp/>data<sp/>pointed<sp/>to<sp/>by<sp/>&lt;src&gt;val&lt;/src&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>will<sp/>be<sp/>deleted<sp/>when<sp/>it<sp/>is<sp/>no<sp/>longer<sp/>referenced.<sp/>Passing<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&lt;src&gt;False&lt;/src&gt;<sp/>for<sp/>&lt;src&gt;delit&lt;/src&gt;<sp/>will<sp/>prevent<sp/>the<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>from<sp/>being<sp/>deleted<sp/>when<sp/>the<sp/>reference<sp/>count<sp/>reaches<sp/>zero.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&lt;note<sp/>role=warning&gt;<sp/>After<sp/>the<sp/>counted<sp/>pointer<sp/>is<sp/>initialized</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>value<sp/>should<sp/>no<sp/>longer<sp/>be<sp/>manipulated<sp/>by<sp/>the<sp/>raw<sp/>pointer<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>type<sp/>&lt;src&gt;t*&lt;/src&gt;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&lt;/note&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116" refid="classcasacore_1_1CountedPtr_1ad506f5e4b2c1de9b3a10c01214893046" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcasacore_1_1CountedPtr_1ad506f5e4b2c1de9b3a10c01214893046" kindref="member">CountedPtr</ref>(t<sp/>*val,<sp/><ref refid="namespacecasacore_1abd5691f9e13acc90d901e4007740ff98" kindref="member">Bool</ref><sp/>delit<sp/>=<sp/><ref refid="namespacecasacore_1ad5c850f9e177173e0f7d0ad57091501d" kindref="member">True</ref>)</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>pointerRep_p<sp/>(val,<sp/><ref refid="classcasacore_1_1CountedPtr_1_1Deleter" kindref="compound">Deleter</ref>&lt;t&gt;<sp/>(delit))</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>copy<sp/>constructor<sp/>allows<sp/>&lt;src&gt;CountedPtr&lt;/src&gt;s<sp/>to<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>initialized<sp/>from<sp/>other<sp/>&lt;src&gt;CountedPtr&lt;/src&gt;s<sp/>for<sp/>which<sp/>the<sp/>pointer<sp/>TP*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>convertible<sp/>to<sp/>T*.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TP&gt;</highlight></codeline>
<codeline lineno="124" refid="classcasacore_1_1CountedPtr_1acff3a5d6e03909200e02d8e932fcb96f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcasacore_1_1CountedPtr_1acff3a5d6e03909200e02d8e932fcb96f" kindref="member">CountedPtr</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcasacore_1_1CountedPtr" kindref="compound">CountedPtr&lt;TP&gt;</ref>&amp;<sp/>that)</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>pointerRep_p(that.pointerRep_p)</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>from<sp/>a<sp/>shared_ptr.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129" refid="classcasacore_1_1CountedPtr_1a688e62492f088642bd173ef9a72056bb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcasacore_1_1CountedPtr_1a688e62492f088642bd173ef9a72056bb" kindref="member">CountedPtr</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;t&gt;&amp;<sp/>rep)</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>pointerRep_p<sp/>(rep)</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>destructor<sp/>only<sp/>deletes<sp/>the<sp/>really<sp/>stored<sp/>data<sp/>when<sp/>it<sp/>was</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>initialized<sp/>as<sp/>deletable<sp/>and<sp/>the<sp/>reference<sp/>count<sp/>is<sp/>zero.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135" refid="classcasacore_1_1CountedPtr_1a522c3399bc65de2ec036b17dad69da0a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcasacore_1_1CountedPtr_1a522c3399bc65de2ec036b17dad69da0a" kindref="member">~CountedPtr</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>assignment<sp/>operator<sp/>allows<sp/>&lt;src&gt;CountedPtr&lt;/src&gt;s<sp/>to<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>copied<sp/>from<sp/>other<sp/>&lt;src&gt;CountedPtr&lt;/src&gt;s<sp/>for<sp/>which<sp/>the<sp/>pointer<sp/>TP*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>convertible<sp/>to<sp/>t*.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TP&gt;</highlight></codeline>
<codeline lineno="141" refid="classcasacore_1_1CountedPtr_1a61fce22355210abca93c2cee06386f73" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcasacore_1_1CountedPtr" kindref="compound">CountedPtr&lt;t&gt;</ref>&amp;<sp/><ref refid="classcasacore_1_1CountedPtr_1a61fce22355210abca93c2cee06386f73" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcasacore_1_1CountedPtr" kindref="compound">CountedPtr&lt;TP&gt;</ref>&amp;<sp/>that)</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pointerRep_p<sp/>=<sp/>that.pointerRep_p;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reset<sp/>the<sp/>pointer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&lt;group&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149" refid="classcasacore_1_1CountedPtr_1a83da9c576cb31cc807bcb0c19c19ae67" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcasacore_1_1CountedPtr_1a83da9c576cb31cc807bcb0c19c19ae67" kindref="member">reset</ref><sp/>(t<sp/>*val,<sp/><ref refid="namespacecasacore_1abd5691f9e13acc90d901e4007740ff98" kindref="member">Bool</ref><sp/>delit=<ref refid="namespacecasacore_1ad5c850f9e177173e0f7d0ad57091501d" kindref="member">True</ref>)</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>pointerRep_p<sp/>=<sp/>PointerRep<sp/>(val,<sp/><ref refid="classcasacore_1_1CountedPtr_1_1Deleter" kindref="compound">Deleter&lt;t&gt;</ref>(delit));<sp/>}</highlight></codeline>
<codeline lineno="151" refid="classcasacore_1_1CountedPtr_1a724877539ad6f0b84abb142daf2629d1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcasacore_1_1CountedPtr_1a724877539ad6f0b84abb142daf2629d1" kindref="member">reset</ref>()</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>pointerRep_p.reset();<sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&lt;/group&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>&lt;src&gt;CountedPtr&lt;/src&gt;<sp/>indirection<sp/>operator<sp/>simply</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>returns<sp/>a<sp/>reference<sp/>to<sp/>the<sp/>value<sp/>being<sp/>protected.<sp/>If<sp/>the<sp/>pointer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>un-initialized<sp/>(null),<sp/>an<sp/>exception<sp/>will<sp/>be<sp/>thrown.<sp/>The<sp/>member</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&lt;linkto<sp/>class=&quot;CountedPtr:null()const&quot;&gt;null&lt;/linkto&gt;()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>can<sp/>be<sp/>used<sp/>to<sp/>catch<sp/>such<sp/>a<sp/>condition<sp/>in<sp/>time.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&lt;note<sp/>role=tip&gt;<sp/>The<sp/>address<sp/>of<sp/>the<sp/>reference<sp/>returned<sp/>should</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>be<sp/>stored<sp/>for<sp/>later<sp/>use.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&lt;/note&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164" refid="classcasacore_1_1CountedPtr_1a1339d76d1864295dc55c994733766a7f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>&amp;<ref refid="classcasacore_1_1CountedPtr_1a1339d76d1864295dc55c994733766a7f" kindref="member">operator*</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">null</highlight><highlight class="normal">()){</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacecasacore_1ac84d4b21b244b3b41ab103f46d34d9c4" kindref="member">throw_Null_CountedPtr_dereference_error</ref>();</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pointerRep_p.operator*<sp/>();</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>dereferencing<sp/>operator<sp/>behaves<sp/>as<sp/>expected;<sp/>it<sp/>returns<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pointer<sp/>to<sp/>the<sp/>value<sp/>being<sp/>protected,<sp/>and<sp/>then<sp/>its<sp/>dereferencing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>operator<sp/>will<sp/>be<sp/>invoked<sp/>as<sp/>appropriate.<sp/>If<sp/>the<sp/>pointer<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>un-initialized<sp/>(null),<sp/>an<sp/>exception<sp/>will<sp/>be<sp/>thrown.<sp/>The<sp/>member</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&lt;linkto<sp/>class=&quot;CountedPtr:null()const&quot;&gt;null&lt;/linkto&gt;()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>can<sp/>be<sp/>used<sp/>to<sp/>catch<sp/>such<sp/>a<sp/>condition<sp/>in<sp/>time.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178" refid="classcasacore_1_1CountedPtr_1a6f9718d1f26938fb5df8c53fb4f71c39" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>*<ref refid="classcasacore_1_1CountedPtr_1a6f9718d1f26938fb5df8c53fb4f71c39" kindref="member">operator-&gt;</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classcasacore_1_1CountedPtr_1aa0c0517a97cd089c440cafa4243baf85" kindref="member">get</ref><sp/>();</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>underlying<sp/>pointer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183" refid="classcasacore_1_1CountedPtr_1aa0c0517a97cd089c440cafa4243baf85" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>t*<sp/><ref refid="classcasacore_1_1CountedPtr_1aa0c0517a97cd089c440cafa4243baf85" kindref="member">get</ref><sp/>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pointerRep_p.get();</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Equality<sp/>operator<sp/>which<sp/>checks<sp/>to<sp/>see<sp/>if<sp/>two</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&lt;src&gt;CountedPtr&lt;/src&gt;s<sp/>are<sp/>pointing<sp/>at<sp/>the<sp/>same<sp/>thing.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189" refid="classcasacore_1_1CountedPtr_1a4359c1414d3cb7d252205681b3c30cd8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacecasacore_1abd5691f9e13acc90d901e4007740ff98" kindref="member">Bool</ref><sp/><ref refid="classcasacore_1_1CountedPtr_1a4359c1414d3cb7d252205681b3c30cd8" kindref="member">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcasacore_1_1CountedPtr" kindref="compound">CountedPtr&lt;t&gt;</ref><sp/>&amp;other)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="classcasacore_1_1CountedPtr_1aa0c0517a97cd089c440cafa4243baf85" kindref="member">get</ref>()<sp/>==<sp/>other.<ref refid="classcasacore_1_1CountedPtr_1aa0c0517a97cd089c440cafa4243baf85" kindref="member">get</ref>());</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//#<sp/>Note:<sp/>use<sp/>of<sp/>const<sp/>void*<sp/>gives<sp/>ambiguius<sp/>overload<sp/>error.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193" refid="classcasacore_1_1CountedPtr_1aaa0b1473f7812aeff1229d4812a8a058" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacecasacore_1abd5691f9e13acc90d901e4007740ff98" kindref="member">Bool</ref><sp/><ref refid="classcasacore_1_1CountedPtr_1aaa0b1473f7812aeff1229d4812a8a058" kindref="member">operator==</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ptr)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(ptr<sp/>==<sp/>0<sp/><sp/>&amp;&amp;<sp/><sp/><ref refid="classcasacore_1_1CountedPtr_1aa0c0517a97cd089c440cafa4243baf85" kindref="member">get</ref>()<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Non-equality<sp/>operator<sp/>which<sp/>checks<sp/>to<sp/>see<sp/>if<sp/>two</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&lt;src&gt;CountedPtr&lt;/src&gt;s<sp/>are<sp/>not<sp/>pointing<sp/>at<sp/>the<sp/>same<sp/>thing.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199" refid="classcasacore_1_1CountedPtr_1ac31da1f17576d7211bba90934583940a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacecasacore_1abd5691f9e13acc90d901e4007740ff98" kindref="member">Bool</ref><sp/><ref refid="classcasacore_1_1CountedPtr_1ac31da1f17576d7211bba90934583940a" kindref="member">operator!=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcasacore_1_1CountedPtr" kindref="compound">CountedPtr&lt;t&gt;</ref><sp/>&amp;other)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="classcasacore_1_1CountedPtr_1aa0c0517a97cd089c440cafa4243baf85" kindref="member">get</ref>()<sp/>!=<sp/>other.<ref refid="classcasacore_1_1CountedPtr_1aa0c0517a97cd089c440cafa4243baf85" kindref="member">get</ref>()<sp/><sp/>?<sp/><ref refid="namespacecasacore_1ad5c850f9e177173e0f7d0ad57091501d" kindref="member">True</ref><sp/>:<sp/><ref refid="namespacecasacore_1a11ef6530f2dc946f54d220fe416bfd41" kindref="member">False</ref>);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//#<sp/>Note:<sp/>use<sp/>of<sp/>const<sp/>void*<sp/>gives<sp/>ambiguius<sp/>overload<sp/>error.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203" refid="classcasacore_1_1CountedPtr_1aa12ae0ff0d2630732c5859f50221cb35" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacecasacore_1abd5691f9e13acc90d901e4007740ff98" kindref="member">Bool</ref><sp/><ref refid="classcasacore_1_1CountedPtr_1aa12ae0ff0d2630732c5859f50221cb35" kindref="member">operator!=</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ptr)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(ptr<sp/>!=<sp/>0<sp/><sp/>||<sp/><sp/><ref refid="classcasacore_1_1CountedPtr_1aa0c0517a97cd089c440cafa4243baf85" kindref="member">get</ref>()<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>assignment<sp/>operator<sp/>allows<sp/>the<sp/>object<sp/>to<sp/>which<sp/>the<sp/>current</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&lt;src&gt;CountedPtr&lt;/src&gt;<sp/>points<sp/>to<sp/>be<sp/>changed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcasacore_1_1CountedPtr" kindref="compound">CountedPtr&lt;t&gt;</ref><sp/>&amp;</highlight></codeline>
<codeline lineno="210" refid="classcasacore_1_1CountedPtr_1a5251faa80a3ddc8985e1dd049b1d1fd3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcasacore_1_1CountedPtr_1a5251faa80a3ddc8985e1dd049b1d1fd3" kindref="member">operator=</ref>(t<sp/>*v)</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pointerRep_p<sp/>=<sp/>PointerRep<sp/>(v);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Cast<sp/>functions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&lt;group&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="219" refid="classcasacore_1_1CountedPtr_1a5f3aa1c28302008d78a1fc5a449a8646" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcasacore_1_1CountedPtr" kindref="compound">CountedPtr&lt;U&gt;</ref><sp/><ref refid="classcasacore_1_1CountedPtr_1a5f3aa1c28302008d78a1fc5a449a8646" kindref="member">static_ptr_cast</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="220"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classcasacore_1_1CountedPtr" kindref="compound">CountedPtr&lt;U&gt;</ref><sp/>(std::static_pointer_cast&lt;U&gt;<sp/>(pointerRep_p));<sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="222" refid="classcasacore_1_1CountedPtr_1acb9852fed64591f4a8940c1edefa1e8f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcasacore_1_1CountedPtr" kindref="compound">CountedPtr&lt;U&gt;</ref><sp/><ref refid="classcasacore_1_1CountedPtr_1acb9852fed64591f4a8940c1edefa1e8f" kindref="member">const_ptr_cast</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="223"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classcasacore_1_1CountedPtr" kindref="compound">CountedPtr&lt;U&gt;</ref><sp/>(std::const_pointer_cast&lt;U&gt;<sp/>(pointerRep_p));<sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="225" refid="classcasacore_1_1CountedPtr_1a5780d22851559f3ed2ccd468ab1daad9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcasacore_1_1CountedPtr" kindref="compound">CountedPtr&lt;U&gt;</ref><sp/><ref refid="classcasacore_1_1CountedPtr_1a5780d22851559f3ed2ccd468ab1daad9" kindref="member">dynamic_ptr_cast</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="226"><highlight class="keyword"><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classcasacore_1_1CountedPtr" kindref="compound">CountedPtr&lt;U&gt;</ref><sp/>(std::dynamic_pointer_cast&lt;U&gt;<sp/>(pointerRep_p));<sp/>}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&lt;/group&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Sometimes<sp/>it<sp/>is<sp/>useful<sp/>to<sp/>know<sp/>if<sp/>there<sp/>is<sp/>more<sp/>than<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>reference<sp/>made.<sp/>This<sp/>is<sp/>a<sp/>way<sp/>of<sp/>getting<sp/>that.<sp/>Of<sp/>course<sp/>the<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>of<sp/>these<sp/>classes<sp/>is<sp/>that<sp/>this<sp/>information<sp/>is<sp/>normally<sp/>not<sp/>required.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232" refid="classcasacore_1_1CountedPtr_1ae99b2ff1fbba1211d44eb5967f112d13" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacecasacore_1a5c559d8d8bf2ae7f67b439955d6be88a" kindref="member">uInt</ref><sp/><ref refid="classcasacore_1_1CountedPtr_1ae99b2ff1fbba1211d44eb5967f112d13" kindref="member">nrefs</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="233"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pointerRep_p.use_count();<sp/>}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>to<sp/>see<sp/>if<sp/>this<sp/>&lt;src&gt;CountedPtr&lt;/src&gt;<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>un-initialized,<sp/>null.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237" refid="classcasacore_1_1CountedPtr_1a930f81ef614ab3d721750c0e10671ec1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacecasacore_1abd5691f9e13acc90d901e4007740ff98" kindref="member">Bool</ref><sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classcasacore_1_1CountedPtr_1aa0c0517a97cd089c440cafa4243baf85" kindref="member">get</ref>()<sp/>==<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>if<sp/>it<sp/>contains<sp/>a<sp/>valid<sp/>pointer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241" refid="classcasacore_1_1CountedPtr_1af8079b1a7bbcab38304f727bbdd91a94" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/>bool()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="242"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classcasacore_1_1CountedPtr_1aa0c0517a97cd089c440cafa4243baf85" kindref="member">get</ref>()<sp/>!=<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>all<sp/>types<sp/>of<sp/>CountedPtr<sp/>a<sp/>friend<sp/>for<sp/>the<sp/>templated<sp/>operator=.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246" refid="classcasacore_1_1CountedPtr_1ae7db19162dcfa97421b8b546221a8fa0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>TP&gt;<sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcasacore_1_1CountedPtr" kindref="compound">CountedPtr</ref>;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;t&gt;<sp/>PointerRep;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>PointerRep<sp/>pointerRep_p;</highlight></codeline>
<codeline lineno="251"><highlight class="normal">};</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>shared_ptr<sp/>is<sp/>used<sp/>as<sp/>implementation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254" refid="namespacecasacore_1a9cf064b7edb50832b5dcdaef6c3d1815" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="namespacecasacore_1abd5691f9e13acc90d901e4007740ff98" kindref="member">Bool</ref><sp/><ref refid="namespacecasacore_1a9cf064b7edb50832b5dcdaef6c3d1815" kindref="member">countedPtrShared</ref>()</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacecasacore_1ad5c850f9e177173e0f7d0ad57091501d" kindref="member">True</ref>;<sp/>}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Cast<sp/>the<sp/>CountedPtr<sp/>from<sp/>one<sp/>pointer<sp/>type<sp/>to<sp/>another.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="259" refid="namespacecasacore_1a9bf88d4a429837d71fcf3ace661e557c" refkind="member"><highlight class="normal"><ref refid="classcasacore_1_1CountedPtr" kindref="compound">CountedPtr&lt;T&gt;</ref><sp/><ref refid="namespacecasacore_1a9bf88d4a429837d71fcf3ace661e557c" kindref="member">static_pointer_cast</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcasacore_1_1CountedPtr" kindref="compound">CountedPtr&lt;U&gt;</ref>&amp;<sp/>that)</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>that.template<sp/>static_ptr_cast&lt;T&gt;();<sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="262" refid="namespacecasacore_1a6029bc2c761285cfebf268fc7d218440" refkind="member"><highlight class="normal"><ref refid="classcasacore_1_1CountedPtr" kindref="compound">CountedPtr&lt;T&gt;</ref><sp/><ref refid="namespacecasacore_1a6029bc2c761285cfebf268fc7d218440" kindref="member">const_pointer_cast</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcasacore_1_1CountedPtr" kindref="compound">CountedPtr&lt;U&gt;</ref>&amp;<sp/>that)</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>that.template<sp/>const_ptr_cast&lt;T&gt;();<sp/>}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="265" refid="namespacecasacore_1a9d88f085c387d32d93151e7f79963b84" refkind="member"><highlight class="normal"><ref refid="classcasacore_1_1CountedPtr" kindref="compound">CountedPtr&lt;T&gt;</ref><sp/><ref refid="namespacecasacore_1a9d88f085c387d32d93151e7f79963b84" kindref="member">dynamic_pointer_cast</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcasacore_1_1CountedPtr" kindref="compound">CountedPtr&lt;U&gt;</ref>&amp;<sp/>that)</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>that.template<sp/>dynamic_ptr_cast&lt;T&gt;();<sp/>}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal">}<sp/></highlight><highlight class="comment">//#End<sp/>casa<sp/>namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>CASACORE_NO_AUTO_TEMPLATES</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="CountedPtr_8tcc" kindref="compound">casacore/casa/Utilities/CountedPtr.tcc</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//#<sp/>CASACORE_NO_AUTO_TEMPLATES</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="casa/Utilities/CountedPtr.h"/>
  </compounddef>
</doxygen>
