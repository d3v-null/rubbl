<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="Array_8tcc" kind="file" language="C++">
    <compoundname>Array.tcc</compoundname>
    <includedby refid="Array_8h" local="yes">casa/Arrays/Array.h</includedby>
    <invincdepgraph>
      <node id="321">
        <label>tables/Tables/TVecScaCol.h</label>
        <link refid="TVecScaCol_8h"/>
      </node>
      <node id="263">
        <label>tables/Tables/RowCopier.cc</label>
        <link refid="RowCopier_8cc"/>
      </node>
      <node id="352">
        <label>tables/Dysco/dyscostman.cc</label>
        <link refid="dyscostman_8cc"/>
      </node>
      <node id="306">
        <label>tables/Tables/TableLocker.cc</label>
        <link refid="TableLocker_8cc"/>
      </node>
      <node id="287">
        <label>tables/DataMan/SSMIndColumn.cc</label>
        <link refid="SSMIndColumn_8cc"/>
      </node>
      <node id="275">
        <label>tables/apps/showtablelock.cc</label>
        <link refid="showtablelock_8cc"/>
      </node>
      <node id="131">
        <label>tables/TaQL/TaQLShow.cc</label>
        <link refid="TaQLShow_8cc"/>
      </node>
      <node id="71">
        <label>casa/Arrays/MatrixMath.h</label>
        <link refid="MatrixMath_8h"/>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>tables/DataMan/CompressFloat.cc</label>
        <link refid="CompressFloat_8cc"/>
      </node>
      <node id="317">
        <label>tables/Tables/TVec.h</label>
        <link refid="TVec_8h"/>
        <childnode refid="318" relation="include">
        </childnode>
        <childnode refid="321" relation="include">
        </childnode>
        <childnode refid="322" relation="include">
        </childnode>
      </node>
      <node id="271">
        <label>tables/Tables/ConcatRows.cc</label>
        <link refid="ConcatRows_8cc"/>
      </node>
      <node id="260">
        <label>tables/Tables/RefColumn.cc</label>
        <link refid="RefColumn_8cc"/>
      </node>
      <node id="195">
        <label>casa/Quanta/MVRadialVelocity.h</label>
        <link refid="MVRadialVelocity_8h"/>
        <childnode refid="189" relation="include">
        </childnode>
      </node>
      <node id="191">
        <label>casa/Quanta/MVBaseline.h</label>
        <link refid="MVBaseline_8h"/>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="105">
        <label>tables/TaQL/ExprGroupAggrFunc.h</label>
        <link refid="ExprGroupAggrFunc_8h"/>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="106" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="107" relation="include">
        </childnode>
      </node>
      <node id="207">
        <label>tables/DataMan/TSMOption.cc</label>
        <link refid="TSMOption_8cc"/>
      </node>
      <node id="133">
        <label>tables/TaQL/ExprLogicNode.h</label>
        <link refid="ExprLogicNode_8h"/>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
      </node>
      <node id="130">
        <label>tables/TaQL/TaQLResult.cc</label>
        <link refid="TaQLResult_8cc"/>
      </node>
      <node id="78">
        <label>tables/TaQL/ExprDerNode.h</label>
        <link refid="ExprDerNode_8h"/>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
      </node>
      <node id="231">
        <label>tables/DataMan/TiledCellStMan.cc</label>
        <link refid="TiledCellStMan_8cc"/>
      </node>
      <node id="19">
        <label>tables/TaQL/ExprMathNodeArray.cc</label>
        <link refid="ExprMathNodeArray_8cc"/>
      </node>
      <node id="10">
        <label>tables/DataMan/CompressComplex.cc</label>
        <link refid="CompressComplex_8cc"/>
      </node>
      <node id="82">
        <label>tables/TaQL/ExprLogicNode.cc</label>
        <link refid="ExprLogicNode_8cc"/>
      </node>
      <node id="177">
        <label>tables/DataMan/TiledStMan.cc</label>
        <link refid="TiledStMan_8cc"/>
      </node>
      <node id="28">
        <label>tables/TaQL/ExprLogicNodeArray.cc</label>
        <link refid="ExprLogicNodeArray_8cc"/>
      </node>
      <node id="273">
        <label>tables/Tables/ScaRecordColData.cc</label>
        <link refid="ScaRecordColData_8cc"/>
      </node>
      <node id="141">
        <label>tables/TaQL/ExprUDFNodeArray.h</label>
        <link refid="ExprUDFNodeArray_8h"/>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="110" relation="include">
        </childnode>
      </node>
      <node id="221">
        <label>tables/DataMan/DataManInfo.cc</label>
        <link refid="DataManInfo_8cc"/>
      </node>
      <node id="290">
        <label>tables/DataMan/TiledDataStManAccessor.cc</label>
        <link refid="TiledDataStManAccessor_8cc"/>
      </node>
      <node id="129">
        <label>tables/Tables.h</label>
        <link refid="Tables_8h"/>
      </node>
      <node id="142">
        <label>tables/TaQL/ExprUnitNode.h</label>
        <link refid="ExprUnitNode_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="135" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
      </node>
      <node id="209">
        <label>tables/Tables/StorageOption.cc</label>
        <link refid="StorageOption_8cc"/>
      </node>
      <node id="6">
        <label>casa/Arrays/ArrayIter.h</label>
        <link refid="ArrayIter_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="104">
        <label>tables/TaQL/ExprGroup.h</label>
        <link refid="ExprGroup_8h"/>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="105" relation="include">
        </childnode>
        <childnode refid="108" relation="include">
        </childnode>
        <childnode refid="109" relation="include">
        </childnode>
        <childnode refid="110" relation="include">
        </childnode>
        <childnode refid="111" relation="include">
        </childnode>
        <childnode refid="113" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
      </node>
      <node id="369">
        <label>tables/Tables/ConcatColumn.h</label>
        <link refid="ConcatColumn_8h"/>
        <childnode refid="367" relation="include">
        </childnode>
        <childnode refid="253" relation="include">
        </childnode>
        <childnode refid="370" relation="include">
        </childnode>
        <childnode refid="255" relation="include">
        </childnode>
      </node>
      <node id="341">
        <label>casa/Json/JsonKVMap.cc</label>
        <link refid="JsonKVMap_8cc"/>
      </node>
      <node id="186">
        <label>casa/Quanta/MVTime.cc</label>
        <link refid="MVTime_8cc"/>
      </node>
      <node id="160">
        <label>tables/DataMan/TSMCubeMMap.cc</label>
        <link refid="TSMCubeMMap_8cc"/>
      </node>
      <node id="215">
        <label>casa/System/Choice.cc</label>
        <link refid="Choice_8cc"/>
      </node>
      <node id="211">
        <label>tables/Tables/TableTrace.cc</label>
        <link refid="TableTrace_8cc"/>
      </node>
      <node id="155">
        <label>casa/Arrays/ArrayUtil.h</label>
        <link refid="ArrayUtil_8h"/>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="156" relation="include">
        </childnode>
        <childnode refid="157" relation="include">
        </childnode>
        <childnode refid="158" relation="include">
        </childnode>
        <childnode refid="159" relation="include">
        </childnode>
        <childnode refid="160" relation="include">
        </childnode>
        <childnode refid="161" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="162" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>casa/Quanta/MVBaseline.cc</label>
        <link refid="MVBaseline_8cc"/>
      </node>
      <node id="338">
        <label>casa/HDF5/HDF5Record.cc</label>
        <link refid="HDF5Record_8cc"/>
      </node>
      <node id="22">
        <label>casa/Arrays/Array2Math.cc</label>
        <link refid="Array2Math_8cc"/>
      </node>
      <node id="355">
        <label>tables/Dysco/dyscodatacolumn.h</label>
        <link refid="dyscodatacolumn_8h"/>
        <childnode refid="356" relation="include">
        </childnode>
        <childnode refid="352" relation="include">
        </childnode>
      </node>
      <node id="218">
        <label>casa/Utilities/Precision.h</label>
        <link refid="Precision_8h"/>
        <childnode refid="219" relation="include">
        </childnode>
      </node>
      <node id="262">
        <label>tables/Tables/BaseTabIter.cc</label>
        <link refid="BaseTabIter_8cc"/>
      </node>
      <node id="108">
        <label>tables/TaQL/ExprGroupAggrFuncArray.h</label>
        <link refid="ExprGroupAggrFuncArray_8h"/>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="106" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>casa/Quanta/MVDirection.cc</label>
        <link refid="MVDirection_8cc"/>
      </node>
      <node id="176">
        <label>tables/DataMan/StManAipsIO.cc</label>
        <link refid="StManAipsIO_8cc"/>
      </node>
      <node id="25">
        <label>casa/Arrays/ArrayPartMath.h</label>
        <link refid="ArrayPartMath_8h"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="217">
        <label>casa/Utilities/MUString.cc</label>
        <link refid="MUString_8cc"/>
      </node>
      <node id="302">
        <label>tables/Tables/TableIterProxy.h</label>
        <link refid="TableIterProxy_8h"/>
        <childnode refid="303" relation="include">
        </childnode>
      </node>
      <node id="187">
        <label>casa/Quanta/MVFrequency.h</label>
        <link refid="MVFrequency_8h"/>
        <childnode refid="188" relation="include">
        </childnode>
        <childnode refid="189" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>casa/Arrays.h</label>
        <link refid="Arrays_8h"/>
      </node>
      <node id="397">
        <label>tables/TaQL/MArray.h</label>
        <link refid="MArray_8h"/>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="118" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="109">
        <label>tables/TaQL/ExprUDFNode.cc</label>
        <link refid="ExprUDFNode_8cc"/>
      </node>
      <node id="152">
        <label>tables/TaQL/UDFBase.cc</label>
        <link refid="UDFBase_8cc"/>
      </node>
      <node id="310">
        <label>tables/Tables/TableRecordRep.cc</label>
        <link refid="TableRecordRep_8cc"/>
      </node>
      <node id="96">
        <label>tables/TaQL/TaQLNodeHandler.h</label>
        <link refid="TaQLNodeHandler_8h"/>
        <childnode refid="97" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>tables/TaQL/ExprGroupAggrFuncArray.cc</label>
        <link refid="ExprGroupAggrFuncArray_8cc"/>
      </node>
      <node id="254">
        <label>tables/Tables/ConcatTable.h</label>
        <link refid="ConcatTable_8h"/>
        <childnode refid="253" relation="include">
        </childnode>
        <childnode refid="255" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="256" relation="include">
        </childnode>
      </node>
      <node id="172">
        <label>casa/IO/BucketFile.cc</label>
        <link refid="BucketFile_8cc"/>
      </node>
      <node id="278">
        <label>tables/DataMan/BitFlagsEngine.cc</label>
        <link refid="BitFlagsEngine_8cc"/>
      </node>
      <node id="395">
        <label>tables/DataMan/StIndArray.cc</label>
        <link refid="StIndArray_8cc"/>
      </node>
      <node id="258">
        <label>tables/Tables/MemoryTable.cc</label>
        <link refid="MemoryTable_8cc"/>
      </node>
      <node id="346">
        <label>tables/DataMan/TiledFileAccess.h</label>
        <link refid="TiledFileAccess_8h"/>
        <childnode refid="343" relation="include">
        </childnode>
      </node>
      <node id="293">
        <label>tables/Tables/BaseTabIter.h</label>
        <link refid="BaseTabIter_8h"/>
        <childnode refid="262" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="294" relation="include">
        </childnode>
      </node>
      <node id="143">
        <label>tables/TaQL/ExprNodeSetElem.h</label>
        <link refid="ExprNodeSetElem_8h"/>
        <childnode refid="144" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>casa/Containers/Record2Interface.cc</label>
        <link refid="Record2Interface_8cc"/>
      </node>
      <node id="334">
        <label>casa/Containers.h</label>
        <link refid="Containers_8h"/>
      </node>
      <node id="180">
        <label>casa/Quanta/MVDoppler.h</label>
        <link refid="MVDoppler_8h"/>
        <childnode refid="181" relation="include">
        </childnode>
      </node>
      <node id="146">
        <label>tables/TaQL/ExprNodeSetOpt.h</label>
        <link refid="ExprNodeSetOpt_8h"/>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="145" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
      </node>
      <node id="375">
        <label>tables/Tables/ScaRecordColData.h</label>
        <link refid="ScaRecordColData_8h"/>
        <childnode refid="273" relation="include">
        </childnode>
        <childnode refid="376" relation="include">
        </childnode>
      </node>
      <node id="335">
        <label>casa/Utilities/CASATask.h</label>
        <link refid="CASATask_8h"/>
      </node>
      <node id="137">
        <label>tables/TaQL/ExprDerNodeArray.h</label>
        <link refid="ExprDerNodeArray_8h"/>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
      </node>
      <node id="79">
        <label>tables/TaQL/ExprConeNode.cc</label>
        <link refid="ExprConeNode_8cc"/>
      </node>
      <node id="205">
        <label>casa/System/AppInfo.cc</label>
        <link refid="AppInfo_8cc"/>
      </node>
      <node id="393">
        <label>tables/DataMan/SSMStringHandler.h</label>
        <link refid="SSMStringHandler_8h"/>
        <childnode refid="175" relation="include">
        </childnode>
        <childnode refid="227" relation="include">
        </childnode>
        <childnode refid="392" relation="include">
        </childnode>
        <childnode refid="288" relation="include">
        </childnode>
        <childnode refid="230" relation="include">
        </childnode>
      </node>
      <node id="67">
        <label>casa/Arrays/MaskArrMath.h</label>
        <link refid="MaskArrMath_8h"/>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="70">
        <label>casa/Arrays/Matrix_tmpl.cc</label>
        <link refid="Matrix__tmpl_8cc"/>
      </node>
      <node id="245">
        <label>tables/Tables/TableRow.cc</label>
        <link refid="TableRow_8cc"/>
      </node>
      <node id="189">
        <label>casa/Quanta/MVRadialVelocity.cc</label>
        <link refid="MVRadialVelocity_8cc"/>
      </node>
      <node id="51">
        <label>tables/TaQL/ExprDerNodeArray.cc</label>
        <link refid="ExprDerNodeArray_8cc"/>
      </node>
      <node id="80">
        <label>tables/TaQL/ExprDerNode.cc</label>
        <link refid="ExprDerNode_8cc"/>
      </node>
      <node id="20">
        <label>tables/TaQL/ExprNodeArray.cc</label>
        <link refid="ExprNodeArray_8cc"/>
      </node>
      <node id="367">
        <label>tables/Tables/BaseColDesc.cc</label>
        <link refid="BaseColDesc_8cc"/>
      </node>
      <node id="311">
        <label>tables/Tables/TableRow.h</label>
        <link refid="TableRow_8h"/>
        <childnode refid="223" relation="include">
        </childnode>
        <childnode refid="245" relation="include">
        </childnode>
        <childnode refid="312" relation="include">
        </childnode>
        <childnode refid="129" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>casa/Quanta/MVEarthMagnetic.cc</label>
        <link refid="MVEarthMagnetic_8cc"/>
      </node>
      <node id="120">
        <label>tables/TaQL/RecordExpr.h</label>
        <link refid="RecordExpr_8h"/>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
      </node>
      <node id="282">
        <label>tables/DataMan/ForwardCol.h</label>
        <link refid="ForwardCol_8h"/>
        <childnode refid="280" relation="include">
        </childnode>
        <childnode refid="281" relation="include">
        </childnode>
        <childnode refid="283" relation="include">
        </childnode>
        <childnode refid="285" relation="include">
        </childnode>
      </node>
      <node id="84">
        <label>tables/TaQL/ExprNodeSet.cc</label>
        <link refid="ExprNodeSet_8cc"/>
      </node>
      <node id="236">
        <label>tables/DataMan/TSMIdColumn.cc</label>
        <link refid="TSMIdColumn_8cc"/>
      </node>
      <node id="201">
        <label>casa/System/AipsrcBool.cc</label>
        <link refid="AipsrcBool_8cc"/>
      </node>
      <node id="162">
        <label>tables/TaQL/MArrayUtil.h</label>
        <link refid="MArrayUtil_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="145">
        <label>tables/TaQL/ExprNodeSetOpt.cc</label>
        <link refid="ExprNodeSetOpt_8cc"/>
      </node>
      <node id="234">
        <label>tables/DataMan/TiledShapeStMan.cc</label>
        <link refid="TiledShapeStMan_8cc"/>
      </node>
      <node id="239">
        <label>tables/LogTables/TableLogSink.cc</label>
        <link refid="TableLogSink_8cc"/>
      </node>
      <node id="216">
        <label>casa/System/PGPlotter.cc</label>
        <link refid="PGPlotter_8cc"/>
      </node>
      <node id="212">
        <label>casa/System/AipsrcVector.h</label>
        <link refid="AipsrcVector_8h"/>
        <childnode refid="213" relation="include">
        </childnode>
        <childnode refid="214" relation="include">
        </childnode>
        <childnode refid="205" relation="include">
        </childnode>
        <childnode refid="206" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>casa/Arrays/ArrayAccessor.h</label>
        <link refid="ArrayAccessor_8h"/>
      </node>
      <node id="261">
        <label>tables/Tables/RefTable.h</label>
        <link refid="RefTable_8h"/>
        <childnode refid="262" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="260" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="256" relation="include">
        </childnode>
      </node>
      <node id="329">
        <label>casa/Containers/RecordInterface.h</label>
        <link refid="RecordInterface_8h"/>
        <childnode refid="330" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="360" relation="include">
        </childnode>
        <childnode refid="328" relation="include">
        </childnode>
        <childnode refid="363" relation="include">
        </childnode>
        <childnode refid="196" relation="include">
        </childnode>
        <childnode refid="365" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="120" relation="include">
        </childnode>
      </node>
      <node id="364">
        <label>tables/Tables/TableRecordRep.h</label>
        <link refid="TableRecordRep_8h"/>
        <childnode refid="365" relation="include">
        </childnode>
        <childnode refid="310" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>casa/Arrays/Array.h</label>
        <link refid="Array_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="154" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="326" relation="include">
        </childnode>
        <childnode refid="328" relation="include">
        </childnode>
        <childnode refid="329" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="379" relation="include">
        </childnode>
        <childnode refid="342" relation="include">
        </childnode>
        <childnode refid="380" relation="include">
        </childnode>
        <childnode refid="382" relation="include">
        </childnode>
        <childnode refid="266" relation="include">
        </childnode>
        <childnode refid="278" relation="include">
        </childnode>
        <childnode refid="383" relation="include">
        </childnode>
        <childnode refid="384" relation="include">
        </childnode>
        <childnode refid="225" relation="include">
        </childnode>
        <childnode refid="385" relation="include">
        </childnode>
        <childnode refid="386" relation="include">
        </childnode>
        <childnode refid="387" relation="include">
        </childnode>
        <childnode refid="391" relation="include">
        </childnode>
        <childnode refid="227" relation="include">
        </childnode>
        <childnode refid="392" relation="include">
        </childnode>
        <childnode refid="287" relation="include">
        </childnode>
        <childnode refid="288" relation="include">
        </childnode>
        <childnode refid="393" relation="include">
        </childnode>
        <childnode refid="390" relation="include">
        </childnode>
        <childnode refid="394" relation="include">
        </childnode>
        <childnode refid="395" relation="include">
        </childnode>
        <childnode refid="336" relation="include">
        </childnode>
        <childnode refid="300" relation="include">
        </childnode>
        <childnode refid="310" relation="include">
        </childnode>
        <childnode refid="129" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="137" relation="include">
        </childnode>
        <childnode refid="138" relation="include">
        </childnode>
        <childnode refid="139" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="396" relation="include">
        </childnode>
        <childnode refid="314" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="183">
        <label>casa/Quanta/MVDouble.cc</label>
        <link refid="MVDouble_8cc"/>
      </node>
      <node id="158">
        <label>tables/DataMan/TSMCube.cc</label>
        <link refid="TSMCube_8cc"/>
      </node>
      <node id="348">
        <label>tables/DataMan/TSMCubeMMap.h</label>
        <link refid="TSMCubeMMap_8h"/>
        <childnode refid="177" relation="include">
        </childnode>
        <childnode refid="160" relation="include">
        </childnode>
      </node>
      <node id="113">
        <label>tables/TaQL/TableParseGroupby.h</label>
        <link refid="TableParseGroupby_8h"/>
        <childnode refid="107" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="114" relation="include">
        </childnode>
        <childnode refid="112" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>tables/Tables/RowNumbers.cc</label>
        <link refid="RowNumbers_8cc"/>
      </node>
      <node id="92">
        <label>tables/TaQL/TableParseJoin.h</label>
        <link refid="TableParseJoin_8h"/>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
      </node>
      <node id="87">
        <label>tables/TaQL/RecordGram.cc</label>
        <link refid="RecordGram_8cc"/>
      </node>
      <node id="184">
        <label>casa/Quanta/MVEpoch.h</label>
        <link refid="MVEpoch_8h"/>
        <childnode refid="185" relation="include">
        </childnode>
        <childnode refid="186" relation="include">
        </childnode>
      </node>
      <node id="265">
        <label>tables/Tables/RefRows.h</label>
        <link refid="RefRows_8h"/>
        <childnode refid="266" relation="include">
        </childnode>
        <childnode refid="269" relation="include">
        </childnode>
        <childnode refid="225" relation="include">
        </childnode>
        <childnode refid="226" relation="include">
        </childnode>
        <childnode refid="227" relation="include">
        </childnode>
        <childnode refid="176" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="235" relation="include">
        </childnode>
        <childnode refid="247" relation="include">
        </childnode>
        <childnode refid="270" relation="include">
        </childnode>
        <childnode refid="260" relation="include">
        </childnode>
        <childnode refid="272" relation="include">
        </childnode>
        <childnode refid="273" relation="include">
        </childnode>
        <childnode refid="211" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>tables/Tables/PlainColumn.cc</label>
        <link refid="PlainColumn_8cc"/>
      </node>
      <node id="121">
        <label>tables/TaQL/TableParseProject.h</label>
        <link refid="TableParseProject_8h"/>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
      </node>
      <node id="122">
        <label>tables/TaQL/TableParseSortKey.h</label>
        <link refid="TableParseSortKey_8h"/>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="114" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>tables/DataMan/VirtualTaQLColumn.cc</label>
        <link refid="VirtualTaQLColumn_8cc"/>
      </node>
      <node id="55">
        <label>tables/TaQL/TableExprData.cc</label>
        <link refid="TableExprData_8cc"/>
      </node>
      <node id="326">
        <label>casa/Containers/RecordFieldWriter.h</label>
        <link refid="RecordFieldWriter_8h"/>
        <childnode refid="327" relation="include">
        </childnode>
      </node>
      <node id="372">
        <label>tables/Tables/ArrColData.h</label>
        <link refid="ArrColData_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="373" relation="include">
        </childnode>
      </node>
      <node id="150">
        <label>tables/TaQL/TableParseTableList.h</label>
        <link refid="TableParseTableList_8h"/>
        <childnode refid="121" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
      </node>
      <node id="383">
        <label>tables/DataMan/CompressComplex.h</label>
        <link refid="CompressComplex_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="280" relation="include">
        </childnode>
        <childnode refid="285" relation="include">
        </childnode>
      </node>
      <node id="174">
        <label>tables/DataMan/ISMBase.cc</label>
        <link refid="ISMBase_8cc"/>
      </node>
      <node id="190">
        <label>casa/Quanta/MVPosition.h</label>
        <link refid="MVPosition_8h"/>
        <childnode refid="191" relation="include">
        </childnode>
        <childnode refid="192" relation="include">
        </childnode>
        <childnode refid="193" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="194" relation="include">
        </childnode>
        <childnode refid="127" relation="include">
        </childnode>
      </node>
      <node id="229">
        <label>tables/DataMan/SSMIndex.cc</label>
        <link refid="SSMIndex_8cc"/>
      </node>
      <node id="88">
        <label>tables/TaQL/TableParseTableList.cc</label>
        <link refid="TableParseTableList_8cc"/>
      </node>
      <node id="15">
        <label>tables/TaQL/MArrayMath.h</label>
        <link refid="MArrayMath_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="69">
        <label>casa/Arrays/Matrix.h</label>
        <link refid="Matrix_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="153" relation="include">
        </childnode>
      </node>
      <node id="99">
        <label>tables/TaQL/TaQLJoin.cc</label>
        <link refid="TaQLJoin_8cc"/>
      </node>
      <node id="112">
        <label>tables/TaQL/TableParseUpdate.cc</label>
        <link refid="TableParseUpdate_8cc"/>
      </node>
      <node id="81">
        <label>tables/TaQL/ExprGroupAggrFunc.cc</label>
        <link refid="ExprGroupAggrFunc_8cc"/>
      </node>
      <node id="181">
        <label>casa/Quanta/MVDoppler.cc</label>
        <link refid="MVDoppler_8cc"/>
      </node>
      <node id="385">
        <label>tables/DataMan/ISMIndColumn.cc</label>
        <link refid="ISMIndColumn_8cc"/>
      </node>
      <node id="167">
        <label>casa/Containers/RecordRep.cc</label>
        <link refid="RecordRep_8cc"/>
      </node>
      <node id="57">
        <label>casa/Arrays/ArrayStr.h</label>
        <link refid="ArrayStr_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="219">
        <label>casa/Utilities/Precision.cc</label>
        <link refid="Precision_8cc"/>
      </node>
      <node id="58">
        <label>casa/Arrays/ArrayUtil2.cc</label>
        <link refid="ArrayUtil2_8cc"/>
      </node>
      <node id="164">
        <label>casa/Arrays/Vector_tmpl.cc</label>
        <link refid="Vector__tmpl_8cc"/>
      </node>
      <node id="124">
        <label>tables/TaQL/TaQLResult.h</label>
        <link refid="TaQLResult_8h"/>
        <childnode refid="125" relation="include">
        </childnode>
        <childnode refid="130" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>casa/Arrays/Array_tmpl.cc</label>
        <link refid="Array__tmpl_8cc"/>
      </node>
      <node id="259">
        <label>tables/Tables/NullTable.cc</label>
        <link refid="NullTable_8cc"/>
      </node>
      <node id="368">
        <label>tables/Tables/ColumnDesc.cc</label>
        <link refid="ColumnDesc_8cc"/>
      </node>
      <node id="242">
        <label>tables/LogTables/TableLogSink.h</label>
        <link refid="TableLogSink_8h"/>
        <childnode refid="243" relation="include">
        </childnode>
        <childnode refid="239" relation="include">
        </childnode>
      </node>
      <node id="392">
        <label>tables/DataMan/SSMDirColumn.cc</label>
        <link refid="SSMDirColumn_8cc"/>
      </node>
      <node id="138">
        <label>tables/TaQL/ExprLogicNodeArray.h</label>
        <link refid="ExprLogicNodeArray_8h"/>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
      </node>
      <node id="337">
        <label>casa/HDF5/HDF5Record.h</label>
        <link refid="HDF5Record_8h"/>
        <childnode refid="338" relation="include">
        </childnode>
        <childnode refid="339" relation="include">
        </childnode>
        <childnode refid="340" relation="include">
        </childnode>
      </node>
      <node id="224">
        <label>tables/Tables/TableCopy.h</label>
        <link refid="TableCopy_8h"/>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="223" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="129" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
      <node id="74">
        <label>casa/System/PGPlotterNull.cc</label>
        <link refid="PGPlotterNull_8cc"/>
      </node>
      <node id="16">
        <label>tables/TaQL/ExprFuncNode.cc</label>
        <link refid="ExprFuncNode_8cc"/>
      </node>
      <node id="179">
        <label>casa/Quanta/MeasValue.cc</label>
        <link refid="MeasValue_8cc"/>
      </node>
      <node id="288">
        <label>tables/DataMan/SSMIndStringColumn.cc</label>
        <link refid="SSMIndStringColumn_8cc"/>
      </node>
      <node id="354">
        <label>tables/Dysco/threadeddyscocolumn.h</label>
        <link refid="threadeddyscocolumn_8h"/>
        <childnode refid="355" relation="include">
        </childnode>
        <childnode refid="357" relation="include">
        </childnode>
        <childnode refid="359" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>casa/Arrays/Array2.cc</label>
        <link refid="Array2_8cc"/>
      </node>
      <node id="154">
        <label>casa/Arrays/Vector.h</label>
        <link refid="Vector_8h"/>
        <childnode refid="155" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="163" relation="include">
        </childnode>
        <childnode refid="164" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="165" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="166" relation="include">
        </childnode>
        <childnode refid="167" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="168" relation="include">
        </childnode>
        <childnode refid="169" relation="include">
        </childnode>
        <childnode refid="170" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="171" relation="include">
        </childnode>
        <childnode refid="156" relation="include">
        </childnode>
        <childnode refid="178" relation="include">
        </childnode>
        <childnode refid="179" relation="include">
        </childnode>
        <childnode refid="180" relation="include">
        </childnode>
        <childnode refid="182" relation="include">
        </childnode>
        <childnode refid="184" relation="include">
        </childnode>
        <childnode refid="187" relation="include">
        </childnode>
        <childnode refid="190" relation="include">
        </childnode>
        <childnode refid="189" relation="include">
        </childnode>
        <childnode refid="195" relation="include">
        </childnode>
        <childnode refid="196" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="197" relation="include">
        </childnode>
        <childnode refid="198" relation="include">
        </childnode>
        <childnode refid="213" relation="include">
        </childnode>
        <childnode refid="214" relation="include">
        </childnode>
        <childnode refid="205" relation="include">
        </childnode>
        <childnode refid="215" relation="include">
        </childnode>
        <childnode refid="216" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="217" relation="include">
        </childnode>
        <childnode refid="218" relation="include">
        </childnode>
        <childnode refid="220" relation="include">
        </childnode>
        <childnode refid="127" relation="include">
        </childnode>
        <childnode refid="221" relation="include">
        </childnode>
        <childnode refid="222" relation="include">
        </childnode>
        <childnode refid="225" relation="include">
        </childnode>
        <childnode refid="226" relation="include">
        </childnode>
        <childnode refid="227" relation="include">
        </childnode>
        <childnode refid="228" relation="include">
        </childnode>
        <childnode refid="230" relation="include">
        </childnode>
        <childnode refid="176" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="231" relation="include">
        </childnode>
        <childnode refid="232" relation="include">
        </childnode>
        <childnode refid="233" relation="include">
        </childnode>
        <childnode refid="234" relation="include">
        </childnode>
        <childnode refid="177" relation="include">
        </childnode>
        <childnode refid="235" relation="include">
        </childnode>
        <childnode refid="236" relation="include">
        </childnode>
        <childnode refid="237" relation="include">
        </childnode>
        <childnode refid="238" relation="include">
        </childnode>
        <childnode refid="239" relation="include">
        </childnode>
        <childnode refid="240" relation="include">
        </childnode>
        <childnode refid="246" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="249" relation="include">
        </childnode>
        <childnode refid="250" relation="include">
        </childnode>
        <childnode refid="252" relation="include">
        </childnode>
        <childnode refid="253" relation="include">
        </childnode>
        <childnode refid="254" relation="include">
        </childnode>
        <childnode refid="257" relation="include">
        </childnode>
        <childnode refid="259" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="161" relation="include">
        </childnode>
        <childnode refid="260" relation="include">
        </childnode>
        <childnode refid="261" relation="include">
        </childnode>
        <childnode refid="263" relation="include">
        </childnode>
        <childnode refid="264" relation="include">
        </childnode>
        <childnode refid="273" relation="include">
        </childnode>
        <childnode refid="296" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="299" relation="include">
        </childnode>
        <childnode refid="223" relation="include">
        </childnode>
        <childnode refid="224" relation="include">
        </childnode>
        <childnode refid="316" relation="include">
        </childnode>
        <childnode refid="303" relation="include">
        </childnode>
        <childnode refid="302" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="307" relation="include">
        </childnode>
        <childnode refid="245" relation="include">
        </childnode>
        <childnode refid="308" relation="include">
        </childnode>
        <childnode refid="317" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="323" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="325" relation="include">
        </childnode>
      </node>
      <node id="107">
        <label>tables/TaQL/TableParseGroupby.cc</label>
        <link refid="TableParseGroupby_8cc"/>
      </node>
      <node id="91">
        <label>tables/TaQL/TableParseFunc.cc</label>
        <link refid="TableParseFunc_8cc"/>
      </node>
      <node id="26">
        <label>casa/Arrays/ArrayPartMath.cc</label>
        <link refid="ArrayPartMath_8cc"/>
      </node>
      <node id="86">
        <label>tables/TaQL/RecordExpr.cc</label>
        <link refid="RecordExpr_8cc"/>
      </node>
      <node id="50">
        <label>tables/Tables/TableProxy.cc</label>
        <link refid="TableProxy_8cc"/>
      </node>
      <node id="347">
        <label>tables/DataMan/TSMCubeBuff.h</label>
        <link refid="TSMCubeBuff_8h"/>
        <childnode refid="177" relation="include">
        </childnode>
        <childnode refid="159" relation="include">
        </childnode>
      </node>
      <node id="220">
        <label>casa/Utilities/Sort.cc</label>
        <link refid="Sort_8cc"/>
      </node>
      <node id="312">
        <label>tables/Tables/TableRowProxy.h</label>
        <link refid="TableRowProxy_8h"/>
        <childnode refid="308" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>casa/Quanta/MVuvw.cc</label>
        <link refid="MVuvw_8cc"/>
      </node>
      <node id="163">
        <label>casa/Arrays/Slice.cc</label>
        <link refid="Slice_8cc"/>
      </node>
      <node id="156">
        <label>casa/OS/Path.cc</label>
        <link refid="Path_8cc"/>
      </node>
      <node id="387">
        <label>tables/DataMan/MSMDirColumn.h</label>
        <link refid="MSMDirColumn_8h"/>
        <childnode refid="388" relation="include">
        </childnode>
        <childnode refid="386" relation="include">
        </childnode>
        <childnode refid="389" relation="include">
        </childnode>
      </node>
      <node id="391">
        <label>tables/DataMan/MSMIndColumn.cc</label>
        <link refid="MSMIndColumn_8cc"/>
      </node>
      <node id="324">
        <label>tables/TaQL/ExprRange.cc</label>
        <link refid="ExprRange_8cc"/>
      </node>
      <node id="66">
        <label>casa/Arrays/MaskArrLogi.h</label>
        <link refid="MaskArrLogi_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="73">
        <label>casa/Quanta/RotMatrix.cc</label>
        <link refid="RotMatrix_8cc"/>
      </node>
      <node id="252">
        <label>tables/Tables/ColumnsIndexArray.h</label>
        <link refid="ColumnsIndexArray_8h"/>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="251" relation="include">
        </childnode>
        <childnode refid="129" relation="include">
        </childnode>
      </node>
      <node id="225">
        <label>tables/DataMan/ISMColumn.cc</label>
        <link refid="ISMColumn_8cc"/>
      </node>
      <node id="296">
        <label>tables/Tables/SetupNewTab.cc</label>
        <link refid="SetupNewTab_8cc"/>
      </node>
      <node id="171">
        <label>casa/OS/DOos.h</label>
        <link refid="DOos_8h"/>
        <childnode refid="172" relation="include">
        </childnode>
        <childnode refid="173" relation="include">
        </childnode>
        <childnode refid="174" relation="include">
        </childnode>
        <childnode refid="175" relation="include">
        </childnode>
        <childnode refid="176" relation="include">
        </childnode>
        <childnode refid="177" relation="include">
        </childnode>
      </node>
      <node id="75">
        <label>casa/Utilities/StringDistance.h</label>
        <link refid="StringDistance_8h"/>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>tables/TaQL/ExprFuncNodeArray.cc</label>
        <link refid="ExprFuncNodeArray_8cc"/>
      </node>
      <node id="203">
        <label>casa/System/AppInfo.h</label>
        <link refid="AppInfo_8h"/>
        <childnode refid="204" relation="include">
        </childnode>
        <childnode refid="205" relation="include">
        </childnode>
        <childnode refid="206" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>casa/Arrays/Cube.h</label>
        <link refid="Cube_8h"/>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="284">
        <label>tables/DataMan/ForwardColRow.cc</label>
        <link refid="ForwardColRow_8cc"/>
      </node>
      <node id="248">
        <label>tables/Tables/ArrayColumnFunc.h</label>
        <link refid="ArrayColumnFunc_8h"/>
        <childnode refid="247" relation="include">
        </childnode>
      </node>
      <node id="77">
        <label>tables/TaQL/ExprNodeRep.h</label>
        <link refid="ExprNodeRep_8h"/>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="100" relation="include">
        </childnode>
        <childnode refid="133" relation="include">
        </childnode>
        <childnode refid="134" relation="include">
        </childnode>
        <childnode refid="118" relation="include">
        </childnode>
        <childnode refid="136" relation="include">
        </childnode>
        <childnode refid="140" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="143" relation="include">
        </childnode>
        <childnode refid="146" relation="include">
        </childnode>
        <childnode refid="147" relation="include">
        </childnode>
        <childnode refid="149" relation="include">
        </childnode>
        <childnode refid="142" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
        <childnode refid="150" relation="include">
        </childnode>
        <childnode refid="151" relation="include">
        </childnode>
      </node>
      <node id="389">
        <label>tables/DataMan/StArrAipsIO.h</label>
        <link refid="StArrAipsIO_8h"/>
        <childnode refid="390" relation="include">
        </childnode>
        <childnode refid="176" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>casa/Quanta/QMath2.cc</label>
        <link refid="QMath2_8cc"/>
      </node>
      <node id="325">
        <label>tables/TaQL/TaQLShow.h</label>
        <link refid="TaQLShow_8h"/>
        <childnode refid="98" relation="include">
        </childnode>
        <childnode refid="131" relation="include">
        </childnode>
      </node>
      <node id="159">
        <label>tables/DataMan/TSMCubeBuff.cc</label>
        <link refid="TSMCubeBuff_8cc"/>
      </node>
      <node id="250">
        <label>tables/Tables/ColumnsIndex.h</label>
        <link refid="ColumnsIndex_8h"/>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="251" relation="include">
        </childnode>
        <childnode refid="129" relation="include">
        </childnode>
      </node>
      <node id="378">
        <label>tables/Tables/TableInfo.cc</label>
        <link refid="TableInfo_8cc"/>
      </node>
      <node id="309">
        <label>tables/Tables/TableRecord.cc</label>
        <link refid="TableRecord_8cc"/>
      </node>
      <node id="305">
        <label>tables/Tables/TableLocker.h</label>
        <link refid="TableLocker_8h"/>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="223" relation="include">
        </childnode>
        <childnode refid="306" relation="include">
        </childnode>
      </node>
      <node id="90">
        <label>tables/TaQL/TaQLJoin.h</label>
        <link refid="TaQLJoin_8h"/>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
      </node>
      <node id="32">
        <label>casa/Containers/ValueHolder.cc</label>
        <link refid="ValueHolder_8cc"/>
      </node>
      <node id="208">
        <label>tables/Tables/PlainTable.cc</label>
        <link refid="PlainTable_8cc"/>
      </node>
      <node id="149">
        <label>tables/TaQL/ExprUDFNode.h</label>
        <link refid="ExprUDFNode_8h"/>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="109" relation="include">
        </childnode>
      </node>
      <node id="350">
        <label>tables/DataMan/TSMColumn.cc</label>
        <link refid="TSMColumn_8cc"/>
      </node>
      <node id="144">
        <label>tables/TaQL/ExprNodeSet.h</label>
        <link refid="ExprNodeSet_8h"/>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="145" relation="include">
        </childnode>
        <childnode refid="109" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="132" relation="include">
        </childnode>
        <childnode refid="107" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="112" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="131" relation="include">
        </childnode>
        <childnode refid="128" relation="include">
        </childnode>
      </node>
      <node id="356">
        <label>tables/Dysco/dyscodatacolumn.cc</label>
        <link refid="dyscodatacolumn_8cc"/>
      </node>
      <node id="297">
        <label>tables/Tables/SetupNewTab.h</label>
        <link refid="SetupNewTab_8h"/>
        <childnode refid="280" relation="include">
        </childnode>
        <childnode refid="281" relation="include">
        </childnode>
        <childnode refid="284" relation="include">
        </childnode>
        <childnode refid="241" relation="include">
        </childnode>
        <childnode refid="239" relation="include">
        </childnode>
        <childnode refid="249" relation="include">
        </childnode>
        <childnode refid="258" relation="include">
        </childnode>
        <childnode refid="208" relation="include">
        </childnode>
        <childnode refid="161" relation="include">
        </childnode>
        <childnode refid="296" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="223" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="256" relation="include">
        </childnode>
        <childnode refid="129" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>casa/Arrays/ArrayMath.h</label>
        <link refid="ArrayMath_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
      <node id="323">
        <label>tables/TaQL/ExprRange.h</label>
        <link refid="ExprRange_8h"/>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="118" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="324" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
      <node id="147">
        <label>tables/TaQL/ExprNodeUtil.h</label>
        <link refid="ExprNodeUtil_8h"/>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="106" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="148" relation="include">
        </childnode>
        <childnode refid="107" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
      <node id="301">
        <label>tables/Tables/TableIter.h</label>
        <link refid="TableIter_8h"/>
        <childnode refid="262" relation="include">
        </childnode>
        <childnode refid="294" relation="include">
        </childnode>
        <childnode refid="302" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
      <node id="65">
        <label>casa/Arrays/MaskLogiArr.h</label>
        <link refid="MaskLogiArr_8h"/>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>casa/Arrays/ArrayOpsDiffShapes.cc</label>
        <link refid="ArrayOpsDiffShapes_8cc"/>
      </node>
      <node id="198">
        <label>casa/System/Aipsrc.h</label>
        <link refid="Aipsrc_8h"/>
        <childnode refid="199" relation="include">
        </childnode>
        <childnode refid="197" relation="include">
        </childnode>
        <childnode refid="200" relation="include">
        </childnode>
        <childnode refid="212" relation="include">
        </childnode>
        <childnode refid="205" relation="include">
        </childnode>
        <childnode refid="206" relation="include">
        </childnode>
      </node>
      <node id="277">
        <label>tables/DataMan/Adios2StManImpl.h</label>
        <link refid="Adios2StManImpl_8h"/>
        <childnode refid="267" relation="include">
        </childnode>
        <childnode refid="266" relation="include">
        </childnode>
      </node>
      <node id="148">
        <label>tables/TaQL/ExprNodeUtil.cc</label>
        <link refid="ExprNodeUtil_8cc"/>
      </node>
      <node id="286">
        <label>tables/DataMan/IncrStManAccessor.cc</label>
        <link refid="IncrStManAccessor_8cc"/>
      </node>
      <node id="300">
        <label>tables/Tables/TableColumn.cc</label>
        <link refid="TableColumn_8cc"/>
      </node>
      <node id="358">
        <label>tables/Dysco/dyscoweightcolumn.cc</label>
        <link refid="dyscoweightcolumn_8cc"/>
      </node>
      <node id="226">
        <label>tables/DataMan/MSMColumn.cc</label>
        <link refid="MSMColumn_8cc"/>
      </node>
      <node id="359">
        <label>tables/Dysco/threadeddyscocolumn.cc</label>
        <link refid="threadeddyscocolumn_8cc"/>
      </node>
      <node id="127">
        <label>tables/apps/taql.cc</label>
        <link refid="taql_8cc"/>
      </node>
      <node id="76">
        <label>casa/Utilities/StringDistance.cc</label>
        <link refid="StringDistance_8cc"/>
      </node>
      <node id="298">
        <label>tables/Tables/TableAttr.cc</label>
        <link refid="TableAttr_8cc"/>
      </node>
      <node id="56">
        <label>tables/TaQL/TableParseQuery.cc</label>
        <link refid="TableParseQuery_8cc"/>
      </node>
      <node id="384">
        <label>tables/DataMan/CompressFloat.h</label>
        <link refid="CompressFloat_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="280" relation="include">
        </childnode>
        <childnode refid="285" relation="include">
        </childnode>
      </node>
      <node id="94">
        <label>tables/TaQL/TableParseQuery.h</label>
        <link refid="TableParseQuery_8h"/>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
      </node>
      <node id="268">
        <label>tables/DataMan/Adios2StManColumn.cc</label>
        <link refid="Adios2StManColumn_8cc"/>
      </node>
      <node id="249">
        <label>tables/Tables/ColumnSet.cc</label>
        <link refid="ColumnSet_8cc"/>
      </node>
      <node id="54">
        <label>tables/TaQL/MArrayBase.cc</label>
        <link refid="MArrayBase_8cc"/>
      </node>
      <node id="166">
        <label>casa/BasicMath/Random.cc</label>
        <link refid="Random_8cc"/>
      </node>
      <node id="161">
        <label>tables/Tables/ReadAsciiTable.cc</label>
        <link refid="ReadAsciiTable_8cc"/>
      </node>
      <node id="363">
        <label>casa/Containers/RecordRep.h</label>
        <link refid="RecordRep_8h"/>
        <childnode refid="330" relation="include">
        </childnode>
        <childnode refid="167" relation="include">
        </childnode>
        <childnode refid="364" relation="include">
        </childnode>
      </node>
      <node id="68">
        <label>casa/Arrays/MaskArrMath2.cc</label>
        <link refid="MaskArrMath2_8cc"/>
      </node>
      <node id="345">
        <label>tables/DataMan/TiledDataStMan.cc</label>
        <link refid="TiledDataStMan_8cc"/>
      </node>
      <node id="140">
        <label>tables/TaQL/ExprNodeRecord.h</label>
        <link refid="ExprNodeRecord_8h"/>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
      </node>
      <node id="253">
        <label>tables/Tables/ConcatColumn.cc</label>
        <link refid="ConcatColumn_8cc"/>
      </node>
      <node id="333">
        <label>casa/Containers/RecordField.h</label>
        <link refid="RecordField_8h"/>
        <childnode refid="326" relation="include">
        </childnode>
        <childnode refid="334" relation="include">
        </childnode>
        <childnode refid="335" relation="include">
        </childnode>
        <childnode refid="336" relation="include">
        </childnode>
        <childnode refid="158" relation="include">
        </childnode>
        <childnode refid="159" relation="include">
        </childnode>
        <childnode refid="160" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="245" relation="include">
        </childnode>
        <childnode refid="129" relation="include">
        </childnode>
      </node>
      <node id="173">
        <label>casa/OS/DOos.cc</label>
        <link refid="DOos_8cc"/>
      </node>
      <node id="353">
        <label>tables/Dysco/dyscostmancol.h</label>
        <link refid="dyscostmancol_8h"/>
        <childnode refid="352" relation="include">
        </childnode>
        <childnode refid="354" relation="include">
        </childnode>
      </node>
      <node id="381">
        <label>casa/Json.h</label>
        <link refid="Json_8h"/>
      </node>
      <node id="1">
        <label>casa/Arrays/Array.tcc</label>
        <link refid="Array_8tcc"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="294">
        <label>tables/Tables/TableIter.cc</label>
        <link refid="TableIter_8cc"/>
      </node>
      <node id="188">
        <label>casa/Quanta/MVFrequency.cc</label>
        <link refid="MVFrequency_8cc"/>
      </node>
      <node id="344">
        <label>tables/DataMan/TSMCube.h</label>
        <link refid="TSMCube_8h"/>
        <childnode refid="231" relation="include">
        </childnode>
        <childnode refid="232" relation="include">
        </childnode>
        <childnode refid="345" relation="include">
        </childnode>
        <childnode refid="346" relation="include">
        </childnode>
        <childnode refid="234" relation="include">
        </childnode>
        <childnode refid="177" relation="include">
        </childnode>
        <childnode refid="291" relation="include">
        </childnode>
        <childnode refid="336" relation="include">
        </childnode>
        <childnode refid="158" relation="include">
        </childnode>
        <childnode refid="347" relation="include">
        </childnode>
        <childnode refid="348" relation="include">
        </childnode>
        <childnode refid="235" relation="include">
        </childnode>
        <childnode refid="349" relation="include">
        </childnode>
        <childnode refid="236" relation="include">
        </childnode>
      </node>
      <node id="370">
        <label>tables/Tables/ConcatScalarColumn.h</label>
        <link refid="ConcatScalarColumn_8h"/>
      </node>
      <node id="230">
        <label>tables/DataMan/SSMStringHandler.cc</label>
        <link refid="SSMStringHandler_8cc"/>
      </node>
      <node id="197">
        <label>casa/System/Aipsrc.cc</label>
        <link refid="Aipsrc_8cc"/>
      </node>
      <node id="388">
        <label>tables/DataMan/MSMBase.cc</label>
        <link refid="MSMBase_8cc"/>
      </node>
      <node id="102">
        <label>tables/TaQL/ExprAggrNode.cc</label>
        <link refid="ExprAggrNode_8cc"/>
      </node>
      <node id="276">
        <label>tables/DataMan/Adios2StMan.h</label>
        <link refid="Adios2StMan_8h"/>
        <childnode refid="277" relation="include">
        </childnode>
      </node>
      <node id="357">
        <label>tables/Dysco/dyscoweightcolumn.h</label>
        <link refid="dyscoweightcolumn_8h"/>
        <childnode refid="352" relation="include">
        </childnode>
        <childnode refid="358" relation="include">
        </childnode>
      </node>
      <node id="214">
        <label>casa/System/AipsrcVString.cc</label>
        <link refid="AipsrcVString_8cc"/>
      </node>
      <node id="342">
        <label>casa/Json/JsonOut.cc</label>
        <link refid="JsonOut_8cc"/>
      </node>
      <node id="119">
        <label>tables/LogTables/LogFilterExpr.cc</label>
        <link refid="LogFilterExpr_8cc"/>
      </node>
      <node id="97">
        <label>tables/TaQL/TableParse.cc</label>
        <link refid="TableParse_8cc"/>
      </node>
      <node id="134">
        <label>tables/TaQL/ExprMathNode.h</label>
        <link refid="ExprMathNode_8h"/>
        <childnode refid="135" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
      </node>
      <node id="251">
        <label>tables/Tables/TableIndexProxy.h</label>
        <link refid="TableIndexProxy_8h"/>
        <childnode refid="49" relation="include">
        </childnode>
      </node>
      <node id="396">
        <label>tables/TaQL/MArrayBase.h</label>
        <link refid="MArrayBase_8h"/>
        <childnode refid="397" relation="include">
        </childnode>
      </node>
      <node id="103">
        <label>tables/TaQL/ExprGroup.cc</label>
        <link refid="ExprGroup_8cc"/>
      </node>
      <node id="169">
        <label>casa/IO/IPositionIO.cc</label>
        <link refid="IPositionIO_8cc"/>
      </node>
      <node id="115">
        <label>tables/TaQL/ExprConeNode.h</label>
        <link refid="ExprConeNode_8h"/>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>casa/Arrays/LogiMatrix.h</label>
        <link refid="LogiMatrix_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="382">
        <label>casa/OS/DynLib.cc</label>
        <link refid="DynLib_8cc"/>
      </node>
      <node id="340">
        <label>casa/IO/MultiHDF5.cc</label>
        <link refid="MultiHDF5_8cc"/>
      </node>
      <node id="136">
        <label>tables/TaQL/ExprNodeArray.h</label>
        <link refid="ExprNodeArray_8h"/>
        <childnode refid="127" relation="include">
        </childnode>
        <childnode refid="137" relation="include">
        </childnode>
        <childnode refid="116" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="138" relation="include">
        </childnode>
        <childnode refid="139" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="140" relation="include">
        </childnode>
        <childnode refid="141" relation="include">
        </childnode>
        <childnode refid="142" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="112" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>tables/TaQL/ExprNodeRep.cc</label>
        <link refid="ExprNodeRep_8cc"/>
      </node>
      <node id="222">
        <label>tables/DataMan/DataManInfo.h</label>
        <link refid="DataManInfo_8h"/>
        <childnode refid="221" relation="include">
        </childnode>
        <childnode refid="223" relation="include">
        </childnode>
        <childnode refid="224" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
      </node>
      <node id="362">
        <label>casa/Containers/RecordDescRep.cc</label>
        <link refid="RecordDescRep_8cc"/>
      </node>
      <node id="223">
        <label>tables/Tables/TableCopy.cc</label>
        <link refid="TableCopy_8cc"/>
      </node>
      <node id="93">
        <label>tables/TaQL/TableParseJoin.cc</label>
        <link refid="TableParseJoin_8cc"/>
      </node>
      <node id="45">
        <label>tables/Tables/ColumnsIndexArray.cc</label>
        <link refid="ColumnsIndexArray_8cc"/>
      </node>
      <node id="267">
        <label>tables/DataMan/Adios2StMan.cc</label>
        <link refid="Adios2StMan_8cc"/>
      </node>
      <node id="101">
        <label>tables/TaQL/ExprAggrNode.h</label>
        <link refid="ExprAggrNode_8h"/>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="104" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
      </node>
      <node id="206">
        <label>casa/System.h</label>
        <link refid="System_8h"/>
      </node>
      <node id="237">
        <label>tables/DataMan/VirtScaCol.cc</label>
        <link refid="VirtScaCol_8cc"/>
      </node>
      <node id="132">
        <label>tables/TaQL/TableParseFunc.h</label>
        <link refid="TableParseFunc_8h"/>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
      <node id="128">
        <label>tables/TaQL.h</label>
        <link refid="TaQL_8h"/>
        <childnode refid="129" relation="include">
        </childnode>
      </node>
      <node id="111">
        <label>tables/TaQL/TableExprIdAggr.h</label>
        <link refid="TableExprIdAggr_8h"/>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="106" relation="include">
        </childnode>
        <childnode refid="107" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="112" relation="include">
        </childnode>
      </node>
      <node id="304">
        <label>tables/Tables/TableKeyword.cc</label>
        <link refid="TableKeyword_8cc"/>
      </node>
      <node id="307">
        <label>tables/Tables/TableProxy.h</label>
        <link refid="TableProxy_8h"/>
        <childnode refid="157" relation="include">
        </childnode>
        <childnode refid="127" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="303" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="308" relation="include">
        </childnode>
      </node>
      <node id="135">
        <label>tables/TaQL/ExprMathNode.cc</label>
        <link refid="ExprMathNode_8cc"/>
      </node>
      <node id="199">
        <label>casa/OS/HostInfo.cc</label>
        <link refid="HostInfo_8cc"/>
      </node>
      <node id="380">
        <label>casa/Json/JsonOut.h</label>
        <link refid="JsonOut_8h"/>
        <childnode refid="342" relation="include">
        </childnode>
        <childnode refid="170" relation="include">
        </childnode>
        <childnode refid="381" relation="include">
        </childnode>
      </node>
      <node id="257">
        <label>tables/Tables/MemoryTable.h</label>
        <link refid="MemoryTable_8h"/>
        <childnode refid="258" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
      </node>
      <node id="118">
        <label>tables/TaQL/ExprNode.h</label>
        <link refid="ExprNode_8h"/>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="119" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="120" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
        <childnode refid="113" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="121" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="122" relation="include">
        </childnode>
        <childnode refid="123" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="124" relation="include">
        </childnode>
        <childnode refid="131" relation="include">
        </childnode>
        <childnode refid="128" relation="include">
        </childnode>
      </node>
      <node id="83">
        <label>tables/TaQL/ExprNode.cc</label>
        <link refid="ExprNode_8cc"/>
      </node>
      <node id="227">
        <label>tables/DataMan/SSMColumn.cc</label>
        <link refid="SSMColumn_8cc"/>
      </node>
      <node id="280">
        <label>tables/DataMan/DataManager.cc</label>
        <link refid="DataManager_8cc"/>
      </node>
      <node id="110">
        <label>tables/TaQL/ExprUDFNodeArray.cc</label>
        <link refid="ExprUDFNodeArray_8cc"/>
      </node>
      <node id="52">
        <label>tables/TaQL/ExprNodeRecord.cc</label>
        <link refid="ExprNodeRecord_8cc"/>
      </node>
      <node id="322">
        <label>tables/Tables/TVecTemp.h</label>
        <link refid="TVecTemp_8h"/>
      </node>
      <node id="315">
        <label>tables/TaQL/TableParseUtil.h</label>
        <link refid="TableParseUtil_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
      </node>
      <node id="139">
        <label>tables/TaQL/ExprMathNodeArray.h</label>
        <link refid="ExprMathNodeArray_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
      </node>
      <node id="233">
        <label>tables/DataMan/TiledFileHelper.cc</label>
        <link refid="TiledFileHelper_8cc"/>
      </node>
      <node id="44">
        <label>tables/Tables/ColumnsIndex.cc</label>
        <link refid="ColumnsIndex_8cc"/>
      </node>
      <node id="390">
        <label>tables/DataMan/StArrAipsIO.cc</label>
        <link refid="StArrAipsIO_8cc"/>
      </node>
      <node id="373">
        <label>tables/Tables/ArrColDesc.cc</label>
        <link refid="ArrColDesc_8cc"/>
      </node>
      <node id="339">
        <label>casa/HDF5.h</label>
        <link refid="HDF5_8h"/>
      </node>
      <node id="228">
        <label>tables/DataMan/SSMIndex.h</label>
        <link refid="SSMIndex_8h"/>
        <childnode refid="175" relation="include">
        </childnode>
        <childnode refid="229" relation="include">
        </childnode>
      </node>
      <node id="332">
        <label>casa/Containers/Record2.cc</label>
        <link refid="Record2_8cc"/>
      </node>
      <node id="153">
        <label>tables/DataMan/ISMBucket.cc</label>
        <link refid="ISMBucket_8cc"/>
      </node>
      <node id="193">
        <label>casa/Quanta/MVEarthMagnetic.h</label>
        <link refid="MVEarthMagnetic_8h"/>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="202">
        <label>casa/System/AipsrcValue2.cc</label>
        <link refid="AipsrcValue2_8cc"/>
      </node>
      <node id="303">
        <label>tables/Tables/TableIterProxy.cc</label>
        <link refid="TableIterProxy_8cc"/>
      </node>
      <node id="247">
        <label>tables/Tables/ArrayColumnBase.cc</label>
        <link refid="ArrayColumnBase_8cc"/>
      </node>
      <node id="200">
        <label>casa/System/AipsrcValue.h</label>
        <link refid="AipsrcValue_8h"/>
        <childnode refid="201" relation="include">
        </childnode>
        <childnode refid="202" relation="include">
        </childnode>
        <childnode refid="203" relation="include">
        </childnode>
        <childnode refid="206" relation="include">
        </childnode>
        <childnode refid="207" relation="include">
        </childnode>
        <childnode refid="208" relation="include">
        </childnode>
        <childnode refid="209" relation="include">
        </childnode>
        <childnode refid="210" relation="include">
        </childnode>
        <childnode refid="211" relation="include">
        </childnode>
      </node>
      <node id="182">
        <label>casa/Quanta/MVDouble.h</label>
        <link refid="MVDouble_8h"/>
        <childnode refid="183" relation="include">
        </childnode>
      </node>
      <node id="318">
        <label>tables/Tables/TableVector.h</label>
        <link refid="TableVector_8h"/>
        <childnode refid="319" relation="include">
        </childnode>
        <childnode refid="320" relation="include">
        </childnode>
        <childnode refid="129" relation="include">
        </childnode>
      </node>
      <node id="377">
        <label>tables/Tables/PlainTable.h</label>
        <link refid="PlainTable_8h"/>
        <childnode refid="280" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="208" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="299" relation="include">
        </childnode>
        <childnode refid="378" relation="include">
        </childnode>
        <childnode refid="304" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="256" relation="include">
        </childnode>
      </node>
      <node id="320">
        <label>tables/Tables/TabVecMath.h</label>
        <link refid="TabVecMath_8h"/>
        <childnode refid="129" relation="include">
        </childnode>
      </node>
      <node id="85">
        <label>tables/TaQL/ExprNodeSetElem.cc</label>
        <link refid="ExprNodeSetElem_8cc"/>
      </node>
      <node id="291">
        <label>tables/DataMan/TiledStManAccessor.cc</label>
        <link refid="TiledStManAccessor_8cc"/>
      </node>
      <node id="331">
        <label>casa/Containers/Record.cc</label>
        <link refid="Record_8cc"/>
      </node>
      <node id="256">
        <label>tables/Tables/TableUtil.cc</label>
        <link refid="TableUtil_8cc"/>
      </node>
      <node id="49">
        <label>tables/Tables/TableIndexProxy.cc</label>
        <link refid="TableIndexProxy_8cc"/>
      </node>
      <node id="24">
        <label>casa/Arrays/ArrayOpsDiffShapes.h</label>
        <link refid="ArrayOpsDiffShapes_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="170">
        <label>casa/Json/JsonValue.cc</label>
        <link refid="JsonValue_8cc"/>
      </node>
      <node id="376">
        <label>tables/Tables/ScaRecordColDesc.cc</label>
        <link refid="ScaRecordColDesc_8cc"/>
      </node>
      <node id="244">
        <label>tables/Tables/ArrayColumn_tmpl.cc</label>
        <link refid="ArrayColumn__tmpl_8cc"/>
      </node>
      <node id="283">
        <label>tables/DataMan/ForwardColRow.h</label>
        <link refid="ForwardColRow_8h"/>
        <childnode refid="284" relation="include">
        </childnode>
        <childnode refid="285" relation="include">
        </childnode>
      </node>
      <node id="295">
        <label>tables/Tables/ReadAsciiTable.h</label>
        <link refid="ReadAsciiTable_8h"/>
        <childnode refid="157" relation="include">
        </childnode>
        <childnode refid="161" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
      </node>
      <node id="232">
        <label>tables/DataMan/TiledColumnStMan.cc</label>
        <link refid="TiledColumnStMan_8cc"/>
      </node>
      <node id="360">
        <label>casa/Containers/RecordDesc.h</label>
        <link refid="RecordDesc_8h"/>
        <childnode refid="331" relation="include">
        </childnode>
        <childnode refid="330" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="361" relation="include">
        </childnode>
        <childnode refid="362" relation="include">
        </childnode>
        <childnode refid="328" relation="include">
        </childnode>
        <childnode refid="363" relation="include">
        </childnode>
        <childnode refid="368" relation="include">
        </childnode>
        <childnode refid="365" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="120" relation="include">
        </childnode>
      </node>
      <node id="272">
        <label>tables/Tables/RefRows.cc</label>
        <link refid="RefRows_8cc"/>
      </node>
      <node id="289">
        <label>tables/DataMan/StandardStManAccessor.cc</label>
        <link refid="StandardStManAccessor_8cc"/>
      </node>
      <node id="204">
        <label>casa/Quanta/MVAngle.cc</label>
        <link refid="MVAngle_8cc"/>
      </node>
      <node id="241">
        <label>tables/Dysco/tests/testdyscostman.cc</label>
        <link refid="testdyscostman_8cc"/>
      </node>
      <node id="316">
        <label>tables/Tables/TableDesc.cc</label>
        <link refid="TableDesc_8cc"/>
      </node>
      <node id="62">
        <label>casa/Arrays/LogiArray.h</label>
        <link refid="LogiArray_8h"/>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="151">
        <label>tables/TaQL/UDFBase.h</label>
        <link refid="UDFBase_8h"/>
        <childnode refid="149" relation="include">
        </childnode>
        <childnode refid="141" relation="include">
        </childnode>
        <childnode refid="152" relation="include">
        </childnode>
      </node>
      <node id="361">
        <label>casa/Containers/RecordDesc.cc</label>
        <link refid="RecordDesc_8cc"/>
      </node>
      <node id="35">
        <label>casa/Quanta/Euler.cc</label>
        <link refid="Euler_8cc"/>
      </node>
      <node id="30">
        <label>casa/Arrays/Matrix2Math.cc</label>
        <link refid="Matrix2Math_8cc"/>
      </node>
      <node id="61">
        <label>casa/Arrays/IPosition.cc</label>
        <link refid="IPosition_8cc"/>
      </node>
      <node id="314">
        <label>tables/TaQL/RecordGram.h</label>
        <link refid="RecordGram_8h"/>
        <childnode refid="119" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
      </node>
      <node id="125">
        <label>tables/TaQL/TableParse.h</label>
        <link refid="TableParse_8h"/>
        <childnode refid="126" relation="include">
        </childnode>
        <childnode refid="127" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
        <childnode refid="128" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>casa/Arrays/VectorIter.h</label>
        <link refid="VectorIter_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>casa/Containers/ValueHolderRep.cc</label>
        <link refid="ValueHolderRep_8cc"/>
      </node>
      <node id="266">
        <label>tables/DataMan/Adios2StManColumn.h</label>
        <link refid="Adios2StManColumn_8h"/>
        <childnode refid="267" relation="include">
        </childnode>
        <childnode refid="268" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>tables/Tables/BaseTable.cc</label>
        <link refid="BaseTable_8cc"/>
      </node>
      <node id="328">
        <label>casa/Containers/RecordInterface.cc</label>
        <link refid="RecordInterface_8cc"/>
      </node>
      <node id="34">
        <label>casa/OS/Directory.cc</label>
        <link refid="Directory_8cc"/>
      </node>
      <node id="243">
        <label>tables/LogTables/LoggerHolder.cc</label>
        <link refid="LoggerHolder_8cc"/>
      </node>
      <node id="264">
        <label>tables/Tables/RowNumbers.h</label>
        <link refid="RowNumbers_8h"/>
        <childnode refid="265" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="274" relation="include">
        </childnode>
        <childnode refid="118" relation="include">
        </childnode>
      </node>
      <node id="165">
        <label>casa/Arrays/VectorSTLIterator.h</label>
        <link refid="VectorSTLIterator_8h"/>
      </node>
      <node id="349">
        <label>tables/DataMan/TSMDataColumn.h</label>
        <link refid="TSMDataColumn_8h"/>
        <childnode refid="177" relation="include">
        </childnode>
        <childnode refid="350" relation="include">
        </childnode>
        <childnode refid="159" relation="include">
        </childnode>
        <childnode refid="160" relation="include">
        </childnode>
        <childnode refid="235" relation="include">
        </childnode>
      </node>
      <node id="269">
        <label>tables/DataMan/DataManagerColumn.cc</label>
        <link refid="DataManagerColumn_8cc"/>
      </node>
      <node id="330">
        <label>casa/Containers/Record.h</label>
        <link refid="Record_8h"/>
        <childnode refid="331" relation="include">
        </childnode>
        <childnode refid="332" relation="include">
        </childnode>
        <childnode refid="333" relation="include">
        </childnode>
        <childnode refid="167" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="334" relation="include">
        </childnode>
        <childnode refid="337" relation="include">
        </childnode>
        <childnode refid="340" relation="include">
        </childnode>
        <childnode refid="341" relation="include">
        </childnode>
        <childnode refid="342" relation="include">
        </childnode>
        <childnode refid="196" relation="include">
        </childnode>
        <childnode refid="216" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="335" relation="include">
        </childnode>
        <childnode refid="267" relation="include">
        </childnode>
        <childnode refid="278" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="279" relation="include">
        </childnode>
        <childnode refid="280" relation="include">
        </childnode>
        <childnode refid="221" relation="include">
        </childnode>
        <childnode refid="281" relation="include">
        </childnode>
        <childnode refid="284" relation="include">
        </childnode>
        <childnode refid="174" relation="include">
        </childnode>
        <childnode refid="175" relation="include">
        </childnode>
        <childnode refid="343" relation="include">
        </childnode>
        <childnode refid="336" relation="include">
        </childnode>
        <childnode refid="158" relation="include">
        </childnode>
        <childnode refid="344" relation="include">
        </childnode>
        <childnode refid="159" relation="include">
        </childnode>
        <childnode refid="160" relation="include">
        </childnode>
        <childnode refid="236" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="351" relation="include">
        </childnode>
        <childnode refid="119" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="249" relation="include">
        </childnode>
        <childnode refid="250" relation="include">
        </childnode>
        <childnode refid="252" relation="include">
        </childnode>
        <childnode refid="255" relation="include">
        </childnode>
        <childnode refid="258" relation="include">
        </childnode>
        <childnode refid="259" relation="include">
        </childnode>
        <childnode refid="208" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="296" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="274" relation="include">
        </childnode>
        <childnode refid="223" relation="include">
        </childnode>
        <childnode refid="224" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="307" relation="include">
        </childnode>
        <childnode refid="309" relation="include">
        </childnode>
        <childnode refid="308" relation="include">
        </childnode>
        <childnode refid="313" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="314" relation="include">
        </childnode>
        <childnode refid="121" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="151" relation="include">
        </childnode>
      </node>
      <node id="270">
        <label>tables/Tables/ConcatRows.h</label>
        <link refid="ConcatRows_8h"/>
        <childnode refid="271" relation="include">
        </childnode>
        <childnode refid="254" relation="include">
        </childnode>
      </node>
      <node id="213">
        <label>casa/System/AipsrcVBool.cc</label>
        <link refid="AipsrcVBool_8cc"/>
      </node>
      <node id="210">
        <label>tables/Tables/TableLock.cc</label>
        <link refid="TableLock_8cc"/>
      </node>
      <node id="281">
        <label>tables/DataMan/ForwardCol.cc</label>
        <link refid="ForwardCol_8cc"/>
      </node>
      <node id="53">
        <label>tables/TaQL/ExprUnitNode.cc</label>
        <link refid="ExprUnitNode_8cc"/>
      </node>
      <node id="374">
        <label>tables/Tables/ScaColData.h</label>
        <link refid="ScaColData_8h"/>
      </node>
      <node id="371">
        <label>tables/Tables/PlainColumn.h</label>
        <link refid="PlainColumn_8h"/>
        <childnode refid="372" relation="include">
        </childnode>
        <childnode refid="249" relation="include">
        </childnode>
        <childnode refid="258" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="208" relation="include">
        </childnode>
        <childnode refid="374" relation="include">
        </childnode>
        <childnode refid="375" relation="include">
        </childnode>
        <childnode refid="296" relation="include">
        </childnode>
      </node>
      <node id="89">
        <label>tables/TaQL/TableParseUtil.cc</label>
        <link refid="TableParseUtil_8cc"/>
      </node>
      <node id="394">
        <label>tables/DataMan/StIndArrAIO.cc</label>
        <link refid="StIndArrAIO_8cc"/>
      </node>
      <node id="313">
        <label>tables/Tables/TableUtil.h</label>
        <link refid="TableUtil_8h"/>
        <childnode refid="238" relation="include">
        </childnode>
        <childnode refid="255" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="256" relation="include">
        </childnode>
        <childnode refid="129" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
      <node id="279">
        <label>tables/DataMan/DataManAccessor.cc</label>
        <link refid="DataManAccessor_8cc"/>
      </node>
      <node id="196">
        <label>casa/Quanta/QuantumHolder.cc</label>
        <link refid="QuantumHolder_8cc"/>
      </node>
      <node id="365">
        <label>tables/Tables/TableRecord.h</label>
        <link refid="TableRecord_8h"/>
        <childnode refid="126" relation="include">
        </childnode>
        <childnode refid="127" relation="include">
        </childnode>
        <childnode refid="278" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="281" relation="include">
        </childnode>
        <childnode refid="284" relation="include">
        </childnode>
        <childnode refid="366" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="239" relation="include">
        </childnode>
        <childnode refid="367" relation="include">
        </childnode>
        <childnode refid="368" relation="include">
        </childnode>
        <childnode refid="369" relation="include">
        </childnode>
        <childnode refid="254" relation="include">
        </childnode>
        <childnode refid="259" relation="include">
        </childnode>
        <childnode refid="371" relation="include">
        </childnode>
        <childnode refid="377" relation="include">
        </childnode>
        <childnode refid="161" relation="include">
        </childnode>
        <childnode refid="273" relation="include">
        </childnode>
        <childnode refid="316" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="309" relation="include">
        </childnode>
        <childnode refid="310" relation="include">
        </childnode>
        <childnode refid="245" relation="include">
        </childnode>
        <childnode refid="311" relation="include">
        </childnode>
        <childnode refid="308" relation="include">
        </childnode>
        <childnode refid="256" relation="include">
        </childnode>
        <childnode refid="129" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
      </node>
      <node id="175">
        <label>tables/DataMan/SSMBase.cc</label>
        <link refid="SSMBase_8cc"/>
      </node>
      <node id="100">
        <label>tables/TaQL/ExprFuncNode.h</label>
        <link refid="ExprFuncNode_8h"/>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="115" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="116" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="118" relation="include">
        </childnode>
        <childnode refid="132" relation="include">
        </childnode>
      </node>
      <node id="238">
        <label>tables/LogTables/NewFile.cc</label>
        <link refid="NewFile_8cc"/>
      </node>
      <node id="235">
        <label>tables/DataMan/TSMDataColumn.cc</label>
        <link refid="TSMDataColumn_8cc"/>
      </node>
      <node id="98">
        <label>tables/TaQL/TaQLNodeHandler.cc</label>
        <link refid="TaQLNodeHandler_8cc"/>
      </node>
      <node id="39">
        <label>casa/Quanta/MVPosition.cc</label>
        <link refid="MVPosition_8cc"/>
      </node>
      <node id="319">
        <label>tables/Tables/TabVecLogic.h</label>
        <link refid="TabVecLogic_8h"/>
        <childnode refid="129" relation="include">
        </childnode>
      </node>
      <node id="60">
        <label>casa/Arrays/LogiCube.h</label>
        <link refid="LogiCube_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="178">
        <label>casa/Quanta/Euler.h</label>
        <link refid="Euler_8h"/>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
      </node>
      <node id="185">
        <label>casa/Quanta/MVEpoch.cc</label>
        <link refid="MVEpoch_8cc"/>
      </node>
      <node id="123">
        <label>tables/TaQL/TableParseUpdate.h</label>
        <link refid="TableParseUpdate_8h"/>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="112" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>casa/Arrays/MatrixIter.h</label>
        <link refid="MatrixIter_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="255">
        <label>tables/Tables/ConcatTable.cc</label>
        <link refid="ConcatTable_8cc"/>
      </node>
      <node id="379">
        <label>casa/Containers/ValueHolder.h</label>
        <link refid="ValueHolder_8h"/>
        <childnode refid="332" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="341" relation="include">
        </childnode>
        <childnode refid="342" relation="include">
        </childnode>
        <childnode refid="170" relation="include">
        </childnode>
        <childnode refid="127" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="300" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="309" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
      </node>
      <node id="246">
        <label>tables/Tables/ArrayColumnBase.h</label>
        <link refid="ArrayColumnBase_8h"/>
        <childnode refid="240" relation="include">
        </childnode>
        <childnode refid="247" relation="include">
        </childnode>
        <childnode refid="248" relation="include">
        </childnode>
      </node>
      <node id="126">
        <label>tables/apps/showtableinfo.cc</label>
        <link refid="showtableinfo_8cc"/>
      </node>
      <node id="327">
        <label>casa/Containers/RecordField2Writer.cc</label>
        <link refid="RecordField2Writer_8cc"/>
      </node>
      <node id="299">
        <label>tables/Tables/TableCache.cc</label>
        <link refid="TableCache_8cc"/>
      </node>
      <node id="336">
        <label>tables/DataMan/TSMCoordColumn.cc</label>
        <link refid="TSMCoordColumn_8cc"/>
      </node>
      <node id="12">
        <label>tables/DataMan/StManColumn.cc</label>
        <link refid="StManColumn_8cc"/>
      </node>
      <node id="386">
        <label>tables/DataMan/MSMDirColumn.cc</label>
        <link refid="MSMDirColumn_8cc"/>
      </node>
      <node id="308">
        <label>tables/Tables/TableRowProxy.cc</label>
        <link refid="TableRowProxy_8cc"/>
      </node>
      <node id="95">
        <label>tables/TaQL/TableParseProject.cc</label>
        <link refid="TableParseProject_8cc"/>
      </node>
      <node id="117">
        <label>tables/TaQL/ExprAggrNodeArray.h</label>
        <link refid="ExprAggrNodeArray_8h"/>
        <childnode refid="106" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
      </node>
      <node id="351">
        <label>tables/Dysco/dyscostman.h</label>
        <link refid="dyscostman_8h"/>
        <childnode refid="352" relation="include">
        </childnode>
        <childnode refid="353" relation="include">
        </childnode>
        <childnode refid="241" relation="include">
        </childnode>
        <childnode refid="359" relation="include">
        </childnode>
      </node>
      <node id="343">
        <label>tables/DataMan/TiledFileAccess.cc</label>
        <link refid="TiledFileAccess_8cc"/>
      </node>
      <node id="274">
        <label>tables/Tables/Table.h</label>
        <link refid="Table_8h"/>
        <childnode refid="126" relation="include">
        </childnode>
        <childnode refid="275" relation="include">
        </childnode>
        <childnode refid="127" relation="include">
        </childnode>
        <childnode refid="276" relation="include">
        </childnode>
        <childnode refid="278" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="279" relation="include">
        </childnode>
        <childnode refid="280" relation="include">
        </childnode>
        <childnode refid="221" relation="include">
        </childnode>
        <childnode refid="281" relation="include">
        </childnode>
        <childnode refid="282" relation="include">
        </childnode>
        <childnode refid="284" relation="include">
        </childnode>
        <childnode refid="286" relation="include">
        </childnode>
        <childnode refid="174" relation="include">
        </childnode>
        <childnode refid="175" relation="include">
        </childnode>
        <childnode refid="287" relation="include">
        </childnode>
        <childnode refid="229" relation="include">
        </childnode>
        <childnode refid="288" relation="include">
        </childnode>
        <childnode refid="289" relation="include">
        </childnode>
        <childnode refid="231" relation="include">
        </childnode>
        <childnode refid="232" relation="include">
        </childnode>
        <childnode refid="290" relation="include">
        </childnode>
        <childnode refid="177" relation="include">
        </childnode>
        <childnode refid="291" relation="include">
        </childnode>
        <childnode refid="292" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="241" relation="include">
        </childnode>
        <childnode refid="238" relation="include">
        </childnode>
        <childnode refid="242" relation="include">
        </childnode>
        <childnode refid="247" relation="include">
        </childnode>
        <childnode refid="293" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="250" relation="include">
        </childnode>
        <childnode refid="252" relation="include">
        </childnode>
        <childnode refid="255" relation="include">
        </childnode>
        <childnode refid="254" relation="include">
        </childnode>
        <childnode refid="259" relation="include">
        </childnode>
        <childnode refid="208" relation="include">
        </childnode>
        <childnode refid="161" relation="include">
        </childnode>
        <childnode refid="295" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="263" relation="include">
        </childnode>
        <childnode refid="273" relation="include">
        </childnode>
        <childnode refid="296" relation="include">
        </childnode>
        <childnode refid="297" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="298" relation="include">
        </childnode>
        <childnode refid="299" relation="include">
        </childnode>
        <childnode refid="300" relation="include">
        </childnode>
        <childnode refid="224" relation="include">
        </childnode>
        <childnode refid="301" relation="include">
        </childnode>
        <childnode refid="304" relation="include">
        </childnode>
        <childnode refid="305" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="307" relation="include">
        </childnode>
        <childnode refid="309" relation="include">
        </childnode>
        <childnode refid="310" relation="include">
        </childnode>
        <childnode refid="311" relation="include">
        </childnode>
        <childnode refid="313" relation="include">
        </childnode>
        <childnode refid="129" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="136" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="314" relation="include">
        </childnode>
        <childnode refid="121" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="150" relation="include">
        </childnode>
        <childnode refid="315" relation="include">
        </childnode>
        <childnode refid="131" relation="include">
        </childnode>
        <childnode refid="151" relation="include">
        </childnode>
      </node>
      <node id="194">
        <label>casa/Quanta/MVuvw.h</label>
        <link refid="MVuvw_8h"/>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="192">
        <label>casa/Quanta/MVDirection.h</label>
        <link refid="MVDirection_8h"/>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="168">
        <label>casa/Inputs/Input.cc</label>
        <link refid="Input_8cc"/>
      </node>
      <node id="285">
        <label>tables/DataMan.h</label>
        <link refid="DataMan_8h"/>
        <childnode refid="129" relation="include">
        </childnode>
      </node>
      <node id="157">
        <label>tables/apps/tablefromascii.cc</label>
        <link refid="tablefromascii_8cc"/>
      </node>
      <node id="106">
        <label>tables/TaQL/ExprAggrNodeArray.cc</label>
        <link refid="ExprAggrNodeArray_8cc"/>
      </node>
      <node id="114">
        <label>tables/TaQL/TableParseSortKey.cc</label>
        <link refid="TableParseSortKey_8cc"/>
      </node>
      <node id="48">
        <label>tables/Tables/Table.cc</label>
        <link refid="Table_8cc"/>
      </node>
      <node id="46">
        <label>tables/Tables/RefTable.cc</label>
        <link refid="RefTable_8cc"/>
      </node>
      <node id="292">
        <label>tables/DataMan/TSMFile.cc</label>
        <link refid="TSMFile_8cc"/>
      </node>
      <node id="72">
        <label>casa/Quanta/RotMatrix.h</label>
        <link refid="RotMatrix_8h"/>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>tables/Tables/ArrColData.cc</label>
        <link refid="ArrColData_8cc"/>
      </node>
      <node id="116">
        <label>tables/TaQL/ExprFuncNodeArray.h</label>
        <link refid="ExprFuncNodeArray_8h"/>
        <childnode refid="117" relation="include">
        </childnode>
        <childnode refid="115" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
      </node>
      <node id="64">
        <label>casa/Arrays/LogiVector.h</label>
        <link refid="LogiVector_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="366">
        <label>tables/DataMan/RetypedArrayEngine.h</label>
        <link refid="RetypedArrayEngine_8h"/>
        <childnode refid="285" relation="include">
        </childnode>
      </node>
      <node id="240">
        <label>tables/Tables/ArrayColumn.h</label>
        <link refid="ArrayColumn_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="241" relation="include">
        </childnode>
        <childnode refid="242" relation="include">
        </childnode>
        <childnode refid="244" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="161" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="245" relation="include">
        </childnode>
        <childnode refid="129" relation="include">
        </childnode>
        <childnode refid="136" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="112" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>tables/TaQL/MArrayLogical.h</label>
        <link refid="MArrayLogical_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline><highlight class="normal">//#<sp/>Array.cc:<sp/>A<sp/>templated<sp/>N-D<sp/>Array<sp/>class<sp/>with<sp/>zero<sp/>origin</highlight></codeline>
<codeline><highlight class="normal">//#<sp/>Copyright<sp/>(C)<sp/>1993,1994,1995,1996,1997,1998,1999,2000,2001,2002,2003,2015</highlight></codeline>
<codeline><highlight class="normal">//#<sp/>Associated<sp/>Universities,<sp/>Inc.<sp/>Washington<sp/>DC,<sp/>USA.</highlight></codeline>
<codeline><highlight class="normal">//#<sp/>National<sp/>Astronomical<sp/>Observatory<sp/>of<sp/>Japan</highlight></codeline>
<codeline><highlight class="normal">//#<sp/>2-21-1,<sp/>Osawa,<sp/>Mitaka,<sp/>Tokyo,<sp/>181-8588,<sp/>Japan.</highlight></codeline>
<codeline><highlight class="normal">//#</highlight></codeline>
<codeline><highlight class="normal">//#<sp/>This<sp/>library<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify<sp/>it</highlight></codeline>
<codeline><highlight class="normal">//#<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Library<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline><highlight class="normal">//#<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>2<sp/>of<sp/>the<sp/>License,<sp/>or<sp/>(at<sp/>your</highlight></codeline>
<codeline><highlight class="normal">//#<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline><highlight class="normal">//#</highlight></codeline>
<codeline><highlight class="normal">//#<sp/>This<sp/>library<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,<sp/>but<sp/>WITHOUT</highlight></codeline>
<codeline><highlight class="normal">//#<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of<sp/>MERCHANTABILITY<sp/>or</highlight></codeline>
<codeline><highlight class="normal">//#<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the<sp/>GNU<sp/>Library<sp/>General<sp/>Public</highlight></codeline>
<codeline><highlight class="normal">//#<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline><highlight class="normal">//#</highlight></codeline>
<codeline><highlight class="normal">//#<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Library<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline><highlight class="normal">//#<sp/>along<sp/>with<sp/>this<sp/>library;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software<sp/>Foundation,</highlight></codeline>
<codeline><highlight class="normal">//#<sp/>Inc.,<sp/>675<sp/>Massachusetts<sp/>Ave,<sp/>Cambridge,<sp/>MA<sp/>02139,<sp/>USA.</highlight></codeline>
<codeline><highlight class="normal">//#</highlight></codeline>
<codeline><highlight class="normal">//#<sp/>Correspondence<sp/>concerning<sp/>AIPS++<sp/>should<sp/>be<sp/>addressed<sp/>as<sp/>follows:</highlight></codeline>
<codeline><highlight class="normal">//#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Internet<sp/>email:<sp/>casa-feedback@nrao.edu.</highlight></codeline>
<codeline><highlight class="normal">//#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Postal<sp/>address:<sp/>AIPS++<sp/>Project<sp/>Office</highlight></codeline>
<codeline><highlight class="normal">//#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>National<sp/>Radio<sp/>Astronomy<sp/>Observatory</highlight></codeline>
<codeline><highlight class="normal">//#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>520<sp/>Edgemont<sp/>Road</highlight></codeline>
<codeline><highlight class="normal">//#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Charlottesville,<sp/>VA<sp/>22903-2475<sp/>USA</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#ifndef<sp/>CASA_ARRAY_2_TCC</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>CASA_ARRAY_2_TCC</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#include<sp/>&quot;Array.h&quot;</highlight></codeline>
<codeline><highlight class="normal">#include<sp/>&quot;ArrayError.h&quot;</highlight></codeline>
<codeline><highlight class="normal">#include<sp/>&quot;ArrayIter.h&quot;</highlight></codeline>
<codeline><highlight class="normal">#include<sp/>&quot;ArrayPosIter.h&quot;</highlight></codeline>
<codeline><highlight class="normal">#include<sp/>&quot;Memory.h&quot;</highlight></codeline>
<codeline><highlight class="normal">#include<sp/>&quot;MaskedArray.h&quot;</highlight></codeline>
<codeline><highlight class="normal">#include<sp/>&quot;Slicer.h&quot;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#include<sp/>&lt;algorithm&gt;</highlight></codeline>
<codeline><highlight class="normal">#include<sp/>&lt;cassert&gt;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">namespace<sp/>casacore<sp/>{//#Begin<sp/>casa<sp/>namespace</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">template&lt;typename<sp/>T&gt;<sp/>Array&lt;T&gt;::Array()</highlight></codeline>
<codeline><highlight class="normal">:<sp/>data_p(new<sp/>arrays_internal::Storage&lt;T&gt;(0)),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>begin_p(nullptr),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>end_p(nullptr)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>assert(ok());</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>&lt;thrown&gt;</highlight></codeline>
<codeline><highlight class="normal">//<sp/><sp/><sp/>&lt;item&gt;<sp/>ArrayShapeError</highlight></codeline>
<codeline><highlight class="normal">//<sp/>&lt;/thrown&gt;</highlight></codeline>
<codeline><highlight class="normal">template&lt;class<sp/>T&gt;</highlight></codeline>
<codeline><highlight class="normal">Array&lt;T&gt;::Array(const<sp/>IPosition<sp/>&amp;shape)</highlight></codeline>
<codeline><highlight class="normal">:<sp/>ArrayBase(shape),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>data_p(new<sp/>arrays_internal::Storage&lt;T&gt;(nelements())),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>begin_p(data_p-&gt;data())</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>setEndIter();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>assert(ok());</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>&lt;thrown&gt;</highlight></codeline>
<codeline><highlight class="normal">//<sp/><sp/><sp/>&lt;item&gt;<sp/>ArrayShapeError</highlight></codeline>
<codeline><highlight class="normal">//<sp/>&lt;/thrown&gt;</highlight></codeline>
<codeline><highlight class="normal">template&lt;typename<sp/>T&gt;<sp/>Array&lt;T&gt;::Array(const<sp/>IPosition<sp/>&amp;shape,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>const<sp/>T<sp/>&amp;initialValue)</highlight></codeline>
<codeline><highlight class="normal">:<sp/>ArrayBase(shape),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>data_p(new<sp/>arrays_internal::Storage&lt;T&gt;(nelements(),<sp/>initialValue)),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>begin_p(data_p-&gt;data())</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>setEndIter();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>assert(ok());</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">template&lt;typename<sp/>T&gt;</highlight></codeline>
<codeline><highlight class="normal">Array&lt;T&gt;::Array(const<sp/>IPosition&amp;<sp/>shape,<sp/>uninitializedType)</highlight></codeline>
<codeline><highlight class="normal">:<sp/>ArrayBase(shape),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>data_p(arrays_internal::Storage&lt;T&gt;::MakeUninitialized(nelements())),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>begin_p(data_p-&gt;data())</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>setEndIter();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>assert(ok());</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">template&lt;typename<sp/>T&gt;<sp/>Array&lt;T&gt;::Array(std::initializer_list&lt;T&gt;<sp/>list)</highlight></codeline>
<codeline><highlight class="normal">:<sp/>ArrayBase<sp/>(IPosition(1,<sp/>list.size())),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>data_p(new<sp/>arrays_internal::Storage&lt;T&gt;(list.begin(),<sp/>list.end())),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>begin_p(data_p-&gt;data())</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>setEndIter();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>assert(ok());</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">template&lt;typename<sp/>T&gt;<sp/>Array&lt;T&gt;::Array(const<sp/>Array&lt;T&gt;<sp/>&amp;other)</highlight></codeline>
<codeline><highlight class="normal">:<sp/>ArrayBase<sp/>(other),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>data_p(other.data_p),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>begin_p<sp/><sp/><sp/>(other.begin_p),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>end_p<sp/><sp/><sp/><sp/><sp/>(other.end_p)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>assert(ok());</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">template&lt;typename<sp/>T&gt;<sp/>Array&lt;T&gt;::Array(Array&lt;T&gt;&amp;&amp;<sp/>source)<sp/>noexcept</highlight></codeline>
<codeline><highlight class="normal">:<sp/>ArrayBase<sp/>(std::move(source)),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>data_p(source.data_p),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>begin_p(source.begin_p),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>end_p(source.end_p)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>//<sp/>We<sp/>can&apos;t<sp/>free<sp/>the<sp/>storage<sp/>of<sp/>the<sp/>source<sp/>object<sp/>yet,<sp/>because<sp/>this<sp/>would<sp/>require<sp/>either</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>//<sp/>to<sp/>allow<sp/>data_p<sp/>be<sp/>nullptr,<sp/>which<sp/>requires<sp/>check<sp/>everywhere,<sp/>or<sp/>would<sp/>require<sp/>allocating</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>//<sp/>an<sp/>empty<sp/>storage,<sp/>which<sp/>would<sp/>forbid<sp/>noexcept.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>//<sp/>Empty<sp/>source</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>source.begin_p<sp/>=<sp/>nullptr;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>source.end_p<sp/>=<sp/>nullptr;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>assert(ok());</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">template&lt;typename<sp/>T&gt;<sp/>Array&lt;T&gt;::Array(Array&lt;T&gt;&amp;&amp;<sp/>source,<sp/>const<sp/>IPosition&amp;<sp/>shapeForSource)<sp/>noexcept</highlight></codeline>
<codeline><highlight class="normal">:<sp/>ArrayBase<sp/>(std::move(source),<sp/>shapeForSource),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>data_p(source.data_p),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>begin_p(source.begin_p),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>end_p(source.end_p)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>source.begin_p<sp/>=<sp/>nullptr;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>source.end_p<sp/>=<sp/>nullptr;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>assert(ok());</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">template&lt;class<sp/>T&gt;</highlight></codeline>
<codeline><highlight class="normal">Array&lt;T&gt;::Array(const<sp/>IPosition<sp/>&amp;shape,<sp/>T<sp/>*storage,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StorageInitPolicy<sp/>policy)</highlight></codeline>
<codeline><highlight class="normal">:<sp/>ArrayBase(shape),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>data_p(),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>begin_p(nullptr),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>end_p(nullptr)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>takeStorage(shape,<sp/>storage,<sp/>policy);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>assert(ok());</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">template&lt;class<sp/>T&gt;</highlight></codeline>
<codeline><highlight class="normal">Array&lt;T&gt;::Array(const<sp/>IPosition<sp/>&amp;shape,<sp/>const<sp/>T<sp/>*storage)</highlight></codeline>
<codeline><highlight class="normal">:<sp/>ArrayBase(shape),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>data_p(),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>begin_p(nullptr),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>end_p(nullptr)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>takeStorage(shape,<sp/>storage);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>assert(ok());</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">template&lt;typename<sp/>T&gt;</highlight></codeline>
<codeline><highlight class="normal">template&lt;typename<sp/>InputIterator&gt;</highlight></codeline>
<codeline><highlight class="normal">Array&lt;T&gt;::Array(const<sp/>IPosition<sp/>&amp;shape,<sp/>InputIterator<sp/>startIter)</highlight></codeline>
<codeline><highlight class="normal">:<sp/>Array&lt;T&gt;(shape,<sp/>startIter,<sp/>std::is_integral&lt;InputIterator&gt;())</highlight></codeline>
<codeline><highlight class="normal">{<sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">template&lt;typename<sp/>T&gt;</highlight></codeline>
<codeline><highlight class="normal">template&lt;typename<sp/>InputIterator&gt;</highlight></codeline>
<codeline><highlight class="normal">Array&lt;T&gt;::Array(const<sp/>IPosition<sp/>&amp;shape,<sp/>InputIterator<sp/>startIter,<sp/>std::false_type)</highlight></codeline>
<codeline><highlight class="normal">:<sp/>ArrayBase(shape),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>data_p(new<sp/>arrays_internal::Storage&lt;T&gt;(startIter,<sp/>std::next(startIter,<sp/>nelements()))),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>begin_p(data_p-&gt;data())</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>setEndIter();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>assert(ok());</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">template&lt;typename<sp/>T&gt;</highlight></codeline>
<codeline><highlight class="normal">template&lt;typename<sp/>Integral&gt;</highlight></codeline>
<codeline><highlight class="normal">Array&lt;T&gt;::Array(const<sp/>IPosition<sp/>&amp;shape,<sp/>Integral<sp/>initialValue,<sp/>std::true_type)</highlight></codeline>
<codeline><highlight class="normal">:<sp/>ArrayBase(shape),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>data_p(new<sp/>arrays_internal::Storage&lt;T&gt;(nelements(),<sp/>initialValue)),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>begin_p(data_p-&gt;data())</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>setEndIter();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>assert(ok());</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline></codeline>
<codeline><highlight class="normal">template&lt;typename<sp/>T&gt;<sp/>Array&lt;T&gt;::~Array()<sp/>noexcept</highlight></codeline>
<codeline><highlight class="normal">{<sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">template&lt;class<sp/>T&gt;</highlight></codeline>
<codeline><highlight class="normal">std::unique_ptr&lt;ArrayBase&gt;<sp/>Array&lt;T&gt;::makeArray()<sp/>const</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>return<sp/>std::unique_ptr&lt;ArrayBase&gt;(new<sp/>Array&lt;T&gt;());</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>It<sp/>is<sp/>better<sp/>for<sp/>a<sp/>move<sp/>assignment<sp/>to<sp/>be<sp/>noexcept,<sp/>but<sp/>that<sp/>would<sp/>allow</highlight></codeline>
<codeline><highlight class="normal">//<sp/>assigning<sp/>Matrix<sp/>to<sp/>Vector<sp/>(etc)<sp/>without<sp/>being<sp/>able<sp/>to<sp/>throw.<sp/>Hence,<sp/>I</highlight></codeline>
<codeline><highlight class="normal">//<sp/>think<sp/>it<sp/>is<sp/>not<sp/>possible<sp/>to<sp/>do<sp/>this<sp/>without<sp/>changing<sp/>such<sp/>semantics.</highlight></codeline>
<codeline><highlight class="normal">template&lt;class<sp/>T&gt;</highlight></codeline>
<codeline><highlight class="normal">Array&lt;T&gt;&amp;<sp/>Array&lt;T&gt;::operator=<sp/>(Array&lt;T&gt;&amp;&amp;<sp/>source)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>bool<sp/>swapWouldClashRequirements<sp/>=</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>source.fixedDimensionality()<sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>fixedDimensionality()<sp/>!=<sp/>0<sp/>&amp;&amp;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>source.fixedDimensionality()<sp/>!=<sp/>fixedDimensionality();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>//<sp/>If<sp/>this<sp/>or<sp/>the<sp/>source<sp/>is<sp/>a<sp/>shared<sp/>array,<sp/>we<sp/>can&apos;t</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>//<sp/>just<sp/>replace<sp/>the<sp/>storage.<sp/>Non-moveable<sp/>types<sp/>will<sp/>cause</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>//<sp/>this<sp/>to<sp/>throw<sp/>:-(.<sp/>TODO<sp/>should<sp/>be<sp/>solved.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>if(!isUnique()<sp/>||<sp/>!source.isUnique()<sp/>||<sp/>swapWouldClashRequirements)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>assign_conforming(source);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>else<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>There&apos;s<sp/>no<sp/>good<sp/>reason<sp/>to<sp/>require<sp/>conformance<sp/>here,<sp/>but<sp/>some<sp/>of<sp/>the<sp/>software<sp/>seems</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>to<sp/>assume<sp/>that<sp/>assignment<sp/>always<sp/>checks<sp/>for<sp/>the<sp/>shape<sp/>to<sp/>fit.<sp/>:-(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(!conform(source)<sp/><sp/>&amp;&amp;<sp/><sp/>nelements()<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>validateConformance(source);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>else<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>if(source.fixedDimensionality()<sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>ndim()<sp/>!=<sp/>source.ndim())</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>We<sp/>can&apos;t<sp/>directly<sp/>swap<sp/>the<sp/>two,<sp/>because<sp/>the<sp/>lhs<sp/>doesn&apos;t<sp/>match<sp/>in<sp/>rhs<sp/>requirements</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resize(IPosition(source.fixedDimensionality(),<sp/>0));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>swap(source);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>return<sp/>*this;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">template&lt;class<sp/>T&gt;</highlight></codeline>
<codeline><highlight class="normal">void<sp/>Array&lt;T&gt;::swap(Array&lt;T&gt;&amp;<sp/>other)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>checkBeforeResize(other.shape());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>other.checkBeforeResize(shape());</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>ArrayBase::swap(other);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>//<sp/>Take<sp/>storage</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>std::swap(begin_p,<sp/>other.begin_p);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>std::swap(end_p,<sp/>other.end_p);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>std::swap(data_p,<sp/>other.data_p);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">template&lt;class<sp/>T&gt;</highlight></codeline>
<codeline><highlight class="normal">void<sp/>Array&lt;T&gt;::assign<sp/>(const<sp/>Array&lt;T&gt;&amp;<sp/>other)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>assert(ok());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>if<sp/>(!<sp/>shape().isEqual<sp/>(other.shape()))<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>checkBeforeResize(other.shape());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>resize<sp/>(other.shape());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>assign_conforming<sp/>(other);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">template&lt;class<sp/>T&gt;<sp/>void<sp/>Array&lt;T&gt;::assignBase<sp/>(const<sp/>ArrayBase&amp;<sp/>other,<sp/>bool<sp/>checkType)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>assert(ok());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>//<sp/>Checking<sp/>the<sp/>type<sp/>can<sp/>be<sp/>expensive,<sp/>so<sp/>only<sp/>do<sp/>if<sp/>needed<sp/>or<sp/>in<sp/>debug<sp/>mode.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>if<sp/>(checkType<sp/><sp/>/*||<sp/><sp/>aips_debug*/)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>const<sp/>Array&lt;T&gt;*<sp/>pa<sp/>=<sp/>dynamic_cast&lt;const<sp/>Array&lt;T&gt;*&gt;(&amp;other);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(pa<sp/>==<sp/>nullptr)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>throw<sp/>ArrayError(&quot;assign(ArrayBase&amp;)<sp/>has<sp/>incorrect<sp/>template<sp/>type&quot;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>assign<sp/>(static_cast&lt;const<sp/>Array&lt;T&gt;&amp;&gt;(other));</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">template&lt;class<sp/>T&gt;<sp/>void<sp/>Array&lt;T&gt;::reference(const<sp/>Array&lt;T&gt;<sp/>&amp;other)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>assert(ok());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>//<sp/>It<sp/>is<sp/>allowed<sp/>to<sp/>reference<sp/>from<sp/>a<sp/>higher<sp/>dimensional<sp/>Array<sp/>to<sp/>a<sp/>lower<sp/>dimensional<sp/>one,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>//<sp/>e.g.<sp/>reference<sp/>an<sp/>Array<sp/>from<sp/>a<sp/>Matrix.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>if(other.ndim()<sp/>&lt;<sp/>fixedDimensionality())</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>IPosition<sp/>newShape(fixedDimensionality());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>for(size_t<sp/>i=0;<sp/>i!=other.ndim();<sp/>++i)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>newShape[i]<sp/>=<sp/>other.shape()[i];</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>const<sp/>int<sp/>newValue<sp/>=<sp/>(other.nelements()<sp/>==<sp/>0)<sp/>?<sp/>0<sp/>:<sp/>1;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>for(size_t<sp/>i=other.ndim();<sp/>i!=fixedDimensionality();<sp/>++i)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>newShape[i]<sp/>=<sp/>newValue;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>Array&lt;T&gt;<sp/>tmp;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>tmp.reference(other);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>other.baseReform(tmp,<sp/>newShape);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>reference(<sp/>tmp<sp/>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>else<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>First<sp/>copy<sp/>data,<sp/>then<sp/>meta<sp/>data.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>This<sp/>is<sp/>better<sp/>in<sp/>case<sp/>of<sp/>multi-threading<sp/>because<sp/>it<sp/>makes<sp/>it<sp/>possible</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>to<sp/>test<sp/>the<sp/>size<sp/>and<sp/>be<sp/>sure<sp/>that<sp/>the<sp/>data<sp/>is<sp/>there.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>checkBeforeResize(other.shape());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>data_p<sp/><sp/>=<sp/>other.data_p;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>begin_p<sp/>=<sp/>other.begin_p;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>end_p<sp/><sp/><sp/>=<sp/>other.end_p;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ArrayBase::assign<sp/>(other);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">template&lt;class<sp/>T&gt;<sp/>void<sp/>Array&lt;T&gt;::copyToContiguousStorage(T<sp/>*storage,<sp/>Array&lt;T&gt;<sp/>const&amp;<sp/>src,<sp/>std::true_type)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>if<sp/>(src.contiguousStorage())<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>std::copy_n(src.begin_p,<sp/>src.nels_p,<sp/>storage);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}<sp/>else<sp/>if<sp/>(src.ndim()<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>copy_n_with_stride(src.begin_p,<sp/>src.length_p(0),<sp/>storage,<sp/>1U,<sp/>src.inc_p(0));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}<sp/>else<sp/>if<sp/>(src.length_p(0)<sp/>==<sp/>1<sp/><sp/>&amp;&amp;<sp/><sp/>src.ndim()<sp/>==<sp/>2)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>Special<sp/>case<sp/>which<sp/>can<sp/>be<sp/>quite<sp/>common<sp/>(e.g.<sp/>row<sp/>in<sp/>a<sp/>matrix).</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>copy_n_with_stride(src.begin_p,<sp/>src.length_p(1),<sp/>storage,<sp/>1U,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>src.originalLength_p(0)<sp/>*<sp/>src.inc_p(1));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}<sp/>else<sp/>if<sp/>(src.length_p(0)<sp/>&lt;=<sp/>25)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>If<sp/>not<sp/>many<sp/>elements<sp/>on<sp/>a<sp/>line,<sp/>it&apos;s<sp/>better<sp/>to<sp/>use<sp/>this<sp/>loop.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>T*<sp/>ptr<sp/>=<sp/>storage;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>const_iterator<sp/>iterend<sp/>=<sp/>src.end();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>for<sp/>(const_iterator<sp/>iter<sp/>=<sp/>src.begin();<sp/>iter<sp/>!=<sp/>iterend;<sp/>++iter)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*ptr++<sp/>=<sp/>*iter;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}<sp/>else<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>Step<sp/>through<sp/>Vector<sp/>by<sp/>Vector</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>The<sp/>output<sp/>is<sp/>guaranteed<sp/>to<sp/>have<sp/>all<sp/>incs<sp/>set<sp/>to<sp/>1</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ArrayPositionIterator<sp/>ai(src.shape(),<sp/>1);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>IPosition<sp/>index(src.ndim());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>size_t<sp/>count<sp/>=<sp/>0;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>size_t<sp/>const<sp/>size<sp/>=<sp/>src.length_p(0);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>while<sp/>(!ai.pastEnd())<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>index<sp/>=<sp/>ai.pos();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>size_t<sp/>offset<sp/>=<sp/>ArrayIndexOffset(src.ndim(),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src.originalLength_p.storage(),<sp/>src.inc_p.storage(),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>copy_n_with_stride(src.begin_p<sp/>+<sp/>offset,<sp/>size,<sp/>storage<sp/>+<sp/>count<sp/>*<sp/>size,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1U,<sp/>src.inc_p(0));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ai.next();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>count++;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">template&lt;typename<sp/>T&gt;</highlight></codeline>
<codeline><highlight class="normal">Array&lt;T&gt;<sp/>Array&lt;T&gt;::copy()<sp/>const</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>assert(ok());</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>Array&lt;T&gt;<sp/>vp(shape());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(ndim()<sp/>!=<sp/>0)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>copyToContiguousStorage(vp.begin_p,<sp/>*this);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>vp;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">template&lt;typename<sp/>T&gt;</highlight></codeline>
<codeline><highlight class="normal">Array&lt;T&gt;&amp;<sp/>Array&lt;T&gt;::assign_conforming_implementation(const<sp/>Array&lt;T&gt;&amp;<sp/>other,<sp/>std::true_type)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>assert(ok());</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>if<sp/>(this<sp/>==<sp/>&amp;other)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>*this;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>bool<sp/>Conform<sp/>=<sp/>conform(other);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>if<sp/>(!Conform<sp/><sp/>&amp;&amp;<sp/><sp/>nelements()<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>validateConformance(other);<sp/><sp/>//<sp/>We<sp/>can&apos;t<sp/>overwrite,<sp/>so<sp/>throw<sp/>exception</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>size_t<sp/>offset,<sp/>offset2;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>IPosition<sp/>index(other.ndim());</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>if<sp/>(Conform<sp/>==<sp/>true)<sp/>{<sp/>//<sp/>Copy<sp/>in<sp/>place</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(ndim()<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>*this;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>else<sp/>if<sp/>(contiguousStorage()<sp/>&amp;&amp;<sp/>other.contiguousStorage())<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::copy_n(other.begin_p,<sp/>nels_p,<sp/>begin_p);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>else<sp/>if<sp/>(ndim()<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>copy_n_with_stride<sp/>(other.begin_p,<sp/>length_p(0),<sp/>begin_p,<sp/>inc_p(0),<sp/>other.inc_p(0));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>else<sp/>if<sp/>(length_p(0)<sp/>==<sp/>1<sp/><sp/>&amp;&amp;<sp/><sp/>ndim()<sp/>==<sp/>2)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Special<sp/>case<sp/>which<sp/>can<sp/>be<sp/>quite<sp/>common<sp/>(e.g.<sp/>row<sp/>in<sp/>a<sp/>matrix).</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>copy_n_with_stride(other.begin_p,<sp/>length_p(1),<sp/>begin_p,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>originalLength_p(0)*inc_p(1),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>other.originalLength_p(0)*other.inc_p(1));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>else<sp/>if<sp/>(length_p(0)<sp/>&lt;=<sp/>25)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>If<sp/>not<sp/>many<sp/>elements<sp/>on<sp/>a<sp/>line,<sp/>it&apos;s<sp/>better<sp/>to<sp/>use<sp/>this<sp/>loop.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>const_iterator<sp/>from(other.begin());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>iterator<sp/>iterend=end();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(iterator<sp/>iter=begin();<sp/>iter!=iterend;<sp/>++iter)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*iter<sp/>=<sp/>*from;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++from;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ArrayPositionIterator<sp/>ai(other.shape(),<sp/>1);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Step<sp/>through<sp/>Vector<sp/>by<sp/>Vector</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>while<sp/>(!<sp/>ai.pastEnd())<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index<sp/>=<sp/>ai.pos();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offset<sp/>=<sp/>ArrayIndexOffset(ndim(),<sp/>originalLength_p.storage(),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inc_p.storage(),<sp/>index);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offset2<sp/>=<sp/>ArrayIndexOffset(other.ndim(),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>other.originalLength_p.storage(),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>other.inc_p.storage(),<sp/>index);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>copy_n_with_stride(other.begin_p+offset2,<sp/>length_p(0),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>begin_p+offset,<sp/>inc_p(0),<sp/>other.inc_p(0));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ai.next();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}<sp/>else<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>Array<sp/>was<sp/>empty;<sp/>make<sp/>a<sp/>new<sp/>copy<sp/>and<sp/>reference<sp/>it.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>Array&lt;T&gt;<sp/>tmp<sp/>(other.copy());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>reference<sp/>(tmp);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>return<sp/>*this;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">template&lt;typename<sp/>T&gt;</highlight></codeline>
<codeline><highlight class="normal">Array&lt;T&gt;<sp/>&amp;Array&lt;T&gt;::operator=(const<sp/>T<sp/>&amp;val)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>assert(ok());</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>set<sp/>(val);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>*this;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">template&lt;typename<sp/>T&gt;</highlight></codeline>
<codeline><highlight class="normal">Array&lt;T&gt;&amp;<sp/>Array&lt;T&gt;::assign_conforming(const<sp/>MaskedArray&lt;T&gt;&amp;<sp/>marray)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>assert(ok());</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(!conform(marray))<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>throw(ArrayConformanceError(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;Array&lt;T&gt;<sp/>&amp;<sp/>Array&lt;T&gt;::assign_conforming<sp/>(const<sp/>MaskedArray&lt;T&gt;&amp;<sp/>marray)&quot;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;-<sp/>Conformance<sp/>error.&quot;));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>bool<sp/>deleteThis;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>*thisStorage<sp/>=<sp/>getStorage(deleteThis);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>*thisS<sp/>=<sp/>thisStorage;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>bool<sp/>deleteArr;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>const<sp/>T<sp/>*arrStorage<sp/>=<sp/>marray.getArrayStorage(deleteArr);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>const<sp/>T<sp/>*arrS<sp/>=<sp/>arrStorage;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>bool<sp/>deleteMask;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>const<sp/>LogicalArrayElem<sp/>*maskStorage</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>marray.getMaskStorage(deleteMask);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>const<sp/>LogicalArrayElem<sp/>*maskS<sp/>=<sp/>maskStorage;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>size_t<sp/>ntotal<sp/>=<sp/>nelements();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>while<sp/>(ntotal--)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(*maskS)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*thisS<sp/>=<sp/>*arrS;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thisS++;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maskS++;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arrS++;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>putStorage(thisStorage,<sp/>deleteThis);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>marray.freeArrayStorage(arrStorage,<sp/>deleteArr);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>marray.freeMaskStorage(maskStorage,<sp/>deleteMask);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>*this;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline></codeline>
<codeline><highlight class="normal">template&lt;class<sp/>T&gt;<sp/>void<sp/>Array&lt;T&gt;::set(const<sp/>T<sp/>&amp;Value)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>assert(ok());</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>//<sp/>Ultimately<sp/>we<sp/>should<sp/>go<sp/>to<sp/>RawFillAll<sp/>functions</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>//<sp/>RawFillAll(ndim(),<sp/>begin_p,<sp/>inc_p.storage(),<sp/>length_p.storage(),<sp/>Value);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>//<sp/>Step<sp/>through<sp/>Vector<sp/>by<sp/>Vector</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>size_t<sp/>offset;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>if<sp/>(ndim()<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>return;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}<sp/>else<sp/>if<sp/>(contiguousStorage())<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>std::fill_n(begin_p,<sp/>nels_p,<sp/>Value);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}<sp/>else<sp/>if<sp/>(ndim()<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fill_n_with_stride<sp/>(begin_p,<sp/>length_p(0),<sp/>Value,<sp/>inc_p(0));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}<sp/>else<sp/>if<sp/>(length_p(0)<sp/>==<sp/>1<sp/><sp/>&amp;&amp;<sp/><sp/>ndim()<sp/>==<sp/>2)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>Special<sp/>case<sp/>which<sp/>can<sp/>be<sp/>quite<sp/>common<sp/>(e.g.<sp/>row<sp/>in<sp/>a<sp/>matrix).</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>fill_n_with_stride<sp/>(begin_p,<sp/>length_p(1),<sp/>Value,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>originalLength_p(0)*inc_p(1));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}<sp/>else<sp/>if<sp/>(length_p(0)<sp/>&lt;=<sp/>25)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>If<sp/>not<sp/>many<sp/>elements<sp/>on<sp/>a<sp/>line,<sp/>it&apos;s<sp/>better<sp/>to<sp/>use<sp/>this<sp/>loop.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>iterator<sp/>iterend=end();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(iterator<sp/>iter=begin();<sp/>iter!=iterend;<sp/>++iter)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>*iter<sp/>=<sp/>Value;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}<sp/>else<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>Step<sp/>through<sp/>Vector<sp/>by<sp/>Vector</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ArrayPositionIterator<sp/>ai(shape(),<sp/>1);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>IPosition<sp/>index(ndim());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>while<sp/>(!<sp/>ai.pastEnd())</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>index<sp/>=<sp/>ai.pos();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>offset<sp/>=<sp/>ArrayIndexOffset(ndim(),<sp/>originalLength_p.storage(),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inc_p.storage(),<sp/>index);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fill_n_with_stride(begin_p+offset,<sp/>length_p(0),<sp/>Value,<sp/>inc_p(0));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ai.next();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">template&lt;class<sp/>T&gt;</highlight></codeline>
<codeline><highlight class="normal">template&lt;typename<sp/>Callable&gt;</highlight></codeline>
<codeline><highlight class="normal">void<sp/>Array&lt;T&gt;::apply(Callable<sp/>function)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>assert(ok());</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(nelements()<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return;<sp/>//<sp/>short-circuit</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(contiguousStorage())<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>for<sp/>(size_t<sp/>i=0;<sp/>i&lt;nels_p;<sp/>i++)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>begin_p[i]<sp/>=<sp/>function(begin_p[i]);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>//<sp/>Step<sp/>through<sp/>Vector<sp/>by<sp/>Vector</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>ArrayPositionIterator<sp/>ai(shape(),<sp/>1);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>IPosition<sp/>index(ndim());</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>size_t<sp/>len<sp/><sp/>=<sp/>length_p(0);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>size_t<sp/>incr<sp/>=<sp/>inc_p(0);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>size_t<sp/>offset;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>while<sp/>(!<sp/>ai.pastEnd())<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>index<sp/>=<sp/>ai.pos();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>offset<sp/>=<sp/>ArrayIndexOffset(ndim(),<sp/>originalLength_p.storage(),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inc_p.storage(),<sp/>index);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(size_t<sp/>i=0;<sp/>i<sp/>&lt;<sp/>len;<sp/>i++)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>begin_p[offset+i*incr]<sp/>=<sp/>function(begin_p[offset+i*incr]);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ai.next();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">template&lt;class<sp/>T&gt;<sp/>void<sp/>Array&lt;T&gt;::unique()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>assert(ok());</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>if<sp/>(!contiguousStorage()<sp/>||<sp/>!isUnique())</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>OK,<sp/>we<sp/>know<sp/>we<sp/>are<sp/>going<sp/>to<sp/>need<sp/>to<sp/>copy.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>Array&lt;T&gt;<sp/>tmp(copy());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>reference<sp/>(tmp);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>&lt;thrown&gt;</highlight></codeline>
<codeline><highlight class="normal">//<sp/><sp/><sp/>&lt;item&gt;<sp/>ArrayConformanceError</highlight></codeline>
<codeline><highlight class="normal">//<sp/>&lt;/thrown&gt;</highlight></codeline>
<codeline><highlight class="normal">template&lt;typename<sp/>T&gt;</highlight></codeline>
<codeline><highlight class="normal">Array&lt;T&gt;<sp/>Array&lt;T&gt;::reform(const<sp/>IPosition&amp;<sp/>len)<sp/>const</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>assert(ok());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>//<sp/>Check<sp/>if<sp/>reform<sp/>is<sp/>possible<sp/>and<sp/>needed.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>//<sp/>If<sp/>not<sp/>needed,<sp/>simply<sp/>return<sp/>a<sp/>copy.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Array&lt;T&gt;<sp/>tmp(*this);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>baseReform<sp/>(tmp,<sp/>len);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>tmp.setEndIter();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>return<sp/>tmp;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">template<sp/>&lt;typename<sp/>T&gt;</highlight></codeline>
<codeline><highlight class="normal">bool<sp/>Array&lt;T&gt;::adjustLastAxis<sp/>(const<sp/>IPosition&amp;<sp/>newShape,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>size_t<sp/>resizePercentage,<sp/>bool<sp/>resizeIfNeeded)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>assert(ok());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>IPosition<sp/>currentShape<sp/>=<sp/>shape();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(newShape.size()<sp/>==<sp/>currentShape.size()){<sp/>//<sp/>Let<sp/>base<sp/>method<sp/>handle<sp/>attempt<sp/>dimensionality<sp/>changes</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>for<sp/>(size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>newShape.size()<sp/>-<sp/>1;<sp/>i++){</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(currentShape<sp/>(i)<sp/>!=<sp/>newShape<sp/>(i)){</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>message<sp/>=<sp/>&quot;Array&lt;T&gt;::extend<sp/>-<sp/>New<sp/>shape<sp/>can<sp/>only<sp/>change<sp/>last<sp/>dimension:&quot;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;<sp/>current=&quot;<sp/>+<sp/>currentShape.toString()<sp/>+<sp/>&quot;,<sp/>new=&quot;<sp/>+<sp/>newShape.toString();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>throw<sp/>ArrayConformanceError<sp/>(message);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>long<sp/>long<sp/>originalElements<sp/>=<sp/>data_p-&gt;size();</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>bool<sp/>resetEnd<sp/>=<sp/>ArrayBase::reformOrResize<sp/>(newShape,<sp/>resizeIfNeeded,<sp/>data_p.use_count(),<sp/>data_p-&gt;size(),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>true,<sp/>resizePercentage);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(resetEnd){</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>setEndIter();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>originalElements<sp/>!=<sp/>(long<sp/>long)<sp/>data_p-&gt;size();</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline></codeline>
<codeline><highlight class="normal">template&lt;class<sp/>T&gt;</highlight></codeline>
<codeline><highlight class="normal">bool</highlight></codeline>
<codeline><highlight class="normal">Array&lt;T&gt;::reformOrResize<sp/>(const<sp/>IPosition<sp/>&amp;<sp/>newShape,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size_t<sp/>resizePercentage,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bool<sp/>resizeIfNeeded)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>assert(ok());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>checkBeforeResize(newShape);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>long<sp/>long<sp/>originalElements<sp/>=<sp/>data_p-&gt;size();</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>bool<sp/>resetEnd<sp/>=<sp/>ArrayBase::reformOrResize<sp/>(newShape,<sp/>resizeIfNeeded,<sp/>data_p.use_count(),<sp/>data_p-&gt;size(),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>false,<sp/>resizePercentage);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(resetEnd){</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>setEndIter();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>originalElements<sp/>!=<sp/>(long<sp/>long)<sp/>data_p-&gt;size();</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">template&lt;class<sp/>T&gt;</highlight></codeline>
<codeline><highlight class="normal">inline<sp/>size_t</highlight></codeline>
<codeline><highlight class="normal">Array&lt;T&gt;::capacity<sp/>()<sp/>const</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>data_p-&gt;size();<sp/>//<sp/>returns<sp/>the<sp/>number<sp/>of<sp/>elements<sp/>allocated.</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">template&lt;class<sp/>T&gt;</highlight></codeline>
<codeline><highlight class="normal">Array&lt;T&gt;<sp/>Array&lt;T&gt;::nonDegenerate<sp/>(size_t<sp/>startingAxis,<sp/>bool<sp/>throwIfError)<sp/>const</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>Array&lt;T&gt;<sp/>tmp;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>assert(ok());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>tmp.nonDegenerate<sp/>(*this,<sp/>startingAxis,<sp/>throwIfError);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>tmp;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">template&lt;class<sp/>T&gt;</highlight></codeline>
<codeline><highlight class="normal">void<sp/>Array&lt;T&gt;::nonDegenerate<sp/>(const<sp/>Array&lt;T&gt;<sp/>&amp;other,<sp/>size_t<sp/>startingAxis,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bool<sp/>throwIfError)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>if<sp/>(startingAxis<sp/>&lt;<sp/>other.ndim())<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>IPosition<sp/>ignoreAxes(startingAxis);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>for<sp/>(size_t<sp/>i=0;<sp/>i&lt;startingAxis;<sp/>i++)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ignoreAxes(i)<sp/>=<sp/>i;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>nonDegenerate<sp/>(other,<sp/>ignoreAxes);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}<sp/>else<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(throwIfError<sp/>&amp;&amp;<sp/>startingAxis<sp/>&gt;=<sp/>other.ndim())<sp/>throw<sp/>ArrayError();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>reference<sp/>(other);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">template&lt;class<sp/>T&gt;</highlight></codeline>
<codeline><highlight class="normal">Array&lt;T&gt;<sp/>Array&lt;T&gt;::nonDegenerate<sp/>(const<sp/>IPosition<sp/>&amp;ignoreAxes)<sp/>const</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>Array&lt;T&gt;<sp/>tmp;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>assert(ok());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>tmp.nonDegenerate(*this,<sp/>ignoreAxes);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>tmp;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">template&lt;class<sp/>T&gt;</highlight></codeline>
<codeline><highlight class="normal">void<sp/>Array&lt;T&gt;::removeDegenerate<sp/>(size_t<sp/>startingAxis,<sp/>bool<sp/>throwIfError)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>Array&lt;T&gt;<sp/>tmp;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>assert(ok());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>tmp.nonDegenerate<sp/>(*this,<sp/>startingAxis,<sp/>throwIfError);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>reference<sp/>(tmp);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">template&lt;class<sp/>T&gt;</highlight></codeline>
<codeline><highlight class="normal">void<sp/>Array&lt;T&gt;::removeDegenerate<sp/>(const<sp/>IPosition<sp/>&amp;ignoreAxes)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>Array&lt;T&gt;<sp/>tmp;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>assert(ok());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>tmp.nonDegenerate(*this,<sp/>ignoreAxes);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>reference<sp/>(tmp);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">template&lt;class<sp/>T&gt;</highlight></codeline>
<codeline><highlight class="normal">void<sp/>Array&lt;T&gt;::doNonDegenerate<sp/>(const<sp/>Array&lt;T&gt;<sp/>&amp;other,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>IPosition<sp/>&amp;ignoreAxes)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>assert(ok());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>baseNonDegenerate<sp/>(other,<sp/>ignoreAxes);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>begin_p<sp/>=<sp/>other.begin_p;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>data_p<sp/><sp/>=<sp/>other.data_p;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>setEndIter();</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">template&lt;class<sp/>T&gt;</highlight></codeline>
<codeline><highlight class="normal">const<sp/>Array&lt;T&gt;<sp/>Array&lt;T&gt;::addDegenerate(size_t<sp/>numAxes)<sp/>const</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>Array&lt;T&gt;<sp/>*<sp/>This<sp/>=<sp/>const_cast&lt;Array&lt;T&gt;*&gt;(this);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>const<sp/>Array&lt;T&gt;<sp/>tmp(This-&gt;addDegenerate(numAxes));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>tmp;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">template&lt;class<sp/>T&gt;</highlight></codeline>
<codeline><highlight class="normal">Array&lt;T&gt;<sp/>Array&lt;T&gt;::addDegenerate(size_t<sp/>numAxes)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>assert(ok());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>Array&lt;T&gt;<sp/>tmp(*this);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(numAxes<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>baseAddDegenerate<sp/>(tmp,<sp/>numAxes);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>tmp.setEndIter();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>tmp;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline></codeline>
<codeline><highlight class="normal">template&lt;class<sp/>T&gt;<sp/>bool<sp/>Array&lt;T&gt;::conform(const<sp/>MaskedArray&lt;T&gt;<sp/>&amp;other)<sp/>const</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>conform<sp/>(other.getArray());</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>&lt;thrown&gt;</highlight></codeline>
<codeline><highlight class="normal">//<sp/><sp/><sp/>&lt;item&gt;<sp/>ArrayConformanceError</highlight></codeline>
<codeline><highlight class="normal">//<sp/>&lt;/thrown&gt;</highlight></codeline>
<codeline><highlight class="normal">template&lt;class<sp/>T&gt;<sp/>void<sp/>Array&lt;T&gt;::resize()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>IPosition<sp/>emptyShape(fixedDimensionality(),<sp/>0);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>resize<sp/>(emptyShape);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">template&lt;class<sp/>T&gt;<sp/>void<sp/>Array&lt;T&gt;::resize(const<sp/>IPosition&amp;<sp/>len,<sp/>bool<sp/>copyValues)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>assert(ok());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>//<sp/>Maybe<sp/>we<sp/>don&apos;t<sp/>need<sp/>to<sp/>resize;<sp/>let&apos;s<sp/>see<sp/>if<sp/>we<sp/>can<sp/>short<sp/>circuit</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>if<sp/>(len.isEqual<sp/>(shape()))<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>//<sp/>OK<sp/>we<sp/>differ,<sp/>so<sp/>we<sp/>really<sp/>have<sp/>to<sp/>resize<sp/>ourselves.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Array&lt;T&gt;<sp/>tmp(len);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>//<sp/>Copy<sp/>the<sp/>contents<sp/>if<sp/>needed.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>if<sp/>(copyValues)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>tmp.copyMatchingPart<sp/>(*this);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>this-&gt;reference(tmp);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">template&lt;class<sp/>T&gt;</highlight></codeline>
<codeline><highlight class="normal">void<sp/>Array&lt;T&gt;::copyMatchingPart<sp/>(const<sp/>Array&lt;T&gt;&amp;<sp/>from)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>if<sp/>(nelements()<sp/>&gt;<sp/>0<sp/><sp/>&amp;&amp;<sp/><sp/>from.nelements()<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>Create<sp/>IPositions<sp/>of<sp/>the<sp/>correct<sp/>length.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>IPosition<sp/>endto<sp/>(ndim(),<sp/>0);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>IPosition<sp/>endfr<sp/>(from.ndim(),<sp/>0);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>Put<sp/>the<sp/>minimum<sp/>length<sp/>in<sp/>each<sp/>axis.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>size_t<sp/>nd<sp/>=<sp/>from.ndim();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(ndim()<sp/>&lt;<sp/>nd)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nd<sp/>=<sp/>ndim();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>const<sp/>IPosition&amp;<sp/>lento<sp/>=<sp/>shape();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>const<sp/>IPosition&amp;<sp/>lenfr<sp/>=<sp/>from.shape();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>for<sp/>(size_t<sp/>i=0;<sp/>i&lt;nd;<sp/>i++)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>sz<sp/>=<sp/>std::min(lento[i],<sp/>lenfr[i]);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>endto[i]<sp/>=<sp/>sz-1;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>endfr[i]<sp/>=<sp/>sz-1;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>Get<sp/>the<sp/>subsection<sp/>of<sp/>to<sp/>and<sp/>from<sp/>array.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>Array&lt;T&gt;<sp/>subto<sp/>=<sp/>(*this)(IPosition(ndim(),<sp/>0),<sp/>endto);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>Array&lt;T&gt;<sp/>fromc(from);<sp/><sp/><sp/><sp/>//<sp/>make<sp/>non-const</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>Array&lt;T&gt;<sp/>subfr<sp/>=<sp/>fromc(IPosition(from.ndim(),<sp/>0),<sp/>endfr);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>Reform<sp/>to<sp/>if<sp/>the<sp/>dimensionalities<sp/>differ.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(subto.ndim()<sp/>!=<sp/>subfr.ndim())<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Array&lt;T&gt;<sp/>tmp<sp/>=<sp/>subto.reform<sp/>(endfr+1);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>subto.reference<sp/>(tmp);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>subto.assign_conforming(subfr);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">template&lt;class<sp/>T&gt;</highlight></codeline>
<codeline><highlight class="normal">T<sp/>&amp;Array&lt;T&gt;::operator()(const<sp/>IPosition<sp/>&amp;index)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>assert(ok());</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>/*if<sp/>(aips_debug)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>validateIndex(index);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}*/</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>size_t<sp/>offs=0;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>for<sp/>(size_t<sp/>i=0;<sp/>i&lt;ndimen_p;<sp/>i++)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>offs<sp/>+=<sp/>index(i)<sp/>*<sp/>steps_p(i);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>return<sp/>begin_p[offs];</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">template&lt;class<sp/>T&gt;</highlight></codeline>
<codeline><highlight class="normal">const<sp/>T<sp/>&amp;Array&lt;T&gt;::operator()(const<sp/>IPosition<sp/>&amp;index)<sp/>const</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>assert(ok());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>size_t<sp/>offs=0;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>for<sp/>(size_t<sp/>i=0;<sp/>i&lt;ndimen_p;<sp/>i++)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>offs<sp/>+=<sp/>index(i)<sp/>*<sp/>steps_p(i);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>return<sp/>begin_p[offs];</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>&lt;thrown&gt;</highlight></codeline>
<codeline><highlight class="normal">//<sp/><sp/><sp/><sp/><sp/>&lt;item&gt;<sp/>ArrayError</highlight></codeline>
<codeline><highlight class="normal">//<sp/>&lt;/thrown&gt;</highlight></codeline>
<codeline><highlight class="normal">template&lt;typename<sp/>T&gt;</highlight></codeline>
<codeline><highlight class="normal">Array&lt;T&gt;<sp/>Array&lt;T&gt;::operator()(const<sp/>IPosition&amp;<sp/>b,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>const<sp/>IPosition&amp;<sp/>e,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>const<sp/>IPosition&amp;<sp/>i)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>assert(ok());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>Array&lt;T&gt;<sp/>tmp(*this);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>size_t<sp/>offs<sp/>=<sp/>makeSubset<sp/>(tmp,<sp/>b,<sp/>e,<sp/>i);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>tmp.begin_p<sp/>+=<sp/>offs;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>tmp.setEndIter();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>assert(tmp.ok());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>tmp;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">template&lt;class<sp/>T&gt;</highlight></codeline>
<codeline><highlight class="normal">const<sp/>Array&lt;T&gt;<sp/>Array&lt;T&gt;::operator()(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>const<sp/>IPosition<sp/>&amp;b,<sp/>const<sp/>IPosition<sp/>&amp;e,<sp/>const<sp/>IPosition<sp/>&amp;i)<sp/>const</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>const_cast&lt;Array&lt;T&gt;*&gt;(this)-&gt;operator()<sp/>(b,e,i);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">template&lt;typename<sp/>T&gt;<sp/>Array&lt;T&gt;<sp/>Array&lt;T&gt;::operator()(const<sp/>IPosition<sp/>&amp;b,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>IPosition<sp/>&amp;e)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>IPosition<sp/>i(e.nelements());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>i<sp/>=<sp/>1;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>(*this)(b,e,i);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal">template&lt;class<sp/>T&gt;<sp/>const<sp/>Array&lt;T&gt;<sp/>Array&lt;T&gt;::operator()(const<sp/>IPosition<sp/>&amp;b,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>IPosition<sp/>&amp;e)<sp/>const</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>const_cast&lt;Array&lt;T&gt;*&gt;(this)-&gt;operator()<sp/>(b,e);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">template&lt;typename<sp/>T&gt;<sp/>Array&lt;T&gt;<sp/>Array&lt;T&gt;::operator()(const<sp/>Slicer&amp;<sp/>slicer)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(slicer.isFixed())<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>operator()<sp/>(slicer.start(),<sp/>slicer.end(),<sp/>slicer.stride());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>IPosition<sp/>blc,<sp/>trc,<sp/>inc;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>slicer.inferShapeFromSource<sp/>(shape(),<sp/>blc,<sp/>trc,<sp/>inc);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>operator()<sp/>(blc,<sp/>trc,<sp/>inc);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal">template&lt;class<sp/>T&gt;</highlight></codeline>
<codeline><highlight class="normal">const<sp/>Array&lt;T&gt;<sp/>Array&lt;T&gt;::operator()(const<sp/>Slicer&amp;<sp/>slicer)<sp/>const</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>const_cast&lt;Array&lt;T&gt;*&gt;(this)-&gt;operator()<sp/>(slicer);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">template&lt;class<sp/>T&gt;</highlight></codeline>
<codeline><highlight class="normal">std::unique_ptr&lt;ArrayBase&gt;<sp/>Array&lt;T&gt;::getSection(const<sp/>Slicer&amp;<sp/>slicer)<sp/>const</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>std::unique_ptr&lt;ArrayBase&gt;(new<sp/>Array&lt;T&gt;(operator()(slicer)));</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">template&lt;typename<sp/>T&gt;<sp/>Array&lt;T&gt;<sp/>Array&lt;T&gt;::operator[](size_t<sp/>i)<sp/>const</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>assert(ok());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>size_t<sp/>nd<sp/>=<sp/>ndim();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>IPosition<sp/>s(nd,<sp/>0);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>IPosition<sp/>e(shape()<sp/>-<sp/>1);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(nd<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nd--;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s[nd]<sp/>=<sp/>i;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>e[nd]<sp/>=<sp/>i;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>Array&lt;T&gt;<sp/>tmp(*this);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>tmp.reference<sp/>(tmp(s,e));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>nd<sp/>==<sp/>0<sp/><sp/>?<sp/><sp/>tmp<sp/>:<sp/>tmp.nonDegenerate(nd);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline></codeline>
<codeline><highlight class="normal">template&lt;class<sp/>T&gt;</highlight></codeline>
<codeline><highlight class="normal">const<sp/>MaskedArray&lt;T&gt;<sp/>Array&lt;T&gt;::operator()<sp/>(const<sp/>LogicalArray<sp/>&amp;mask)<sp/>const</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>MaskedArray&lt;T&gt;<sp/>ret<sp/>(*this,<sp/>mask,<sp/>true);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>ret;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">template&lt;class<sp/>T&gt;</highlight></codeline>
<codeline><highlight class="normal">MaskedArray&lt;T&gt;<sp/>Array&lt;T&gt;::operator()<sp/>(const<sp/>LogicalArray<sp/>&amp;mask)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>MaskedArray&lt;T&gt;<sp/>ret<sp/>(*this,<sp/>mask);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>ret;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">template&lt;class<sp/>T&gt;</highlight></codeline>
<codeline><highlight class="normal">const<sp/>MaskedArray&lt;T&gt;<sp/>Array&lt;T&gt;::operator()<sp/>(const<sp/>MaskedLogicalArray<sp/>&amp;mask)<sp/>const</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>MaskedArray&lt;T&gt;<sp/>ret<sp/>(*this,<sp/>mask,<sp/>true);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>ret;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">template&lt;class<sp/>T&gt;</highlight></codeline>
<codeline><highlight class="normal">MaskedArray&lt;T&gt;<sp/>Array&lt;T&gt;::operator()<sp/>(const<sp/>MaskedLogicalArray<sp/>&amp;mask)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>MaskedArray&lt;T&gt;<sp/>ret<sp/>(*this,<sp/>mask);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>ret;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">template&lt;class<sp/>T&gt;</highlight></codeline>
<codeline><highlight class="normal">Array&lt;T&gt;<sp/>Array&lt;T&gt;::diagonals<sp/>(size_t<sp/>firstAxis,<sp/>long<sp/>long<sp/>diag)<sp/>const</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>assert(ok());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>Array&lt;T&gt;<sp/>tmp(*this);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>tmp.begin_p<sp/>+=<sp/>tmp.makeDiagonal<sp/>(firstAxis,<sp/>diag);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>tmp.makeSteps();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>return<sp/>tmp;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline></codeline>
<codeline><highlight class="normal">template&lt;class<sp/>T&gt;<sp/>size_t<sp/>Array&lt;T&gt;::nrefs()<sp/>const</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>assert(ok());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>return<sp/>data_p.use_count();</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>This<sp/>is<sp/>relatively<sp/>expensive</highlight></codeline>
<codeline><highlight class="normal">template&lt;class<sp/>T&gt;<sp/>bool<sp/>Array&lt;T&gt;::ok()<sp/>const</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>assert(ArrayBase::ok());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>assert(data_p<sp/>!=<sp/>nullptr);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>assert(!(nelements()<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>(begin_p<sp/>==<sp/>nullptr<sp/>||<sp/>data_p==nullptr)));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>assert(!(begin_p<sp/>!=<sp/>nullptr<sp/>&amp;&amp;<sp/>data_p-&gt;data()<sp/>&gt;<sp/>begin_p));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>assert(!(begin_p<sp/>!=<sp/>nullptr<sp/>&amp;&amp;<sp/>begin_p<sp/>&gt;<sp/>data_p-&gt;data()<sp/>+<sp/>data_p-&gt;size()));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>if<sp/>(!<sp/>ArrayBase::ok())<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>false;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>if(data_p<sp/>==<sp/>nullptr)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>false;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>if<sp/>(nelements()<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>(begin_p<sp/>==<sp/>nullptr<sp/>||<sp/>data_p==nullptr))</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>false;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>//<sp/>This<sp/>test<sp/>may<sp/>not<sp/>be<sp/>portable.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>if<sp/>(begin_p<sp/>!=<sp/>nullptr<sp/>&amp;&amp;<sp/>data_p-&gt;data()<sp/>&gt;<sp/>begin_p)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>false;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>//<sp/>This<sp/>test<sp/>may<sp/>not<sp/>be<sp/>portable.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>if<sp/>(begin_p<sp/>!=<sp/>nullptr<sp/>&amp;&amp;<sp/>begin_p<sp/>&gt;<sp/>data_p-&gt;data()<sp/>+<sp/>data_p-&gt;size())<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>false;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>return<sp/>true;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>&lt;thrown&gt;</highlight></codeline>
<codeline><highlight class="normal">//<sp/><sp/><sp/><sp/>&lt;item&gt;<sp/>ArrayError</highlight></codeline>
<codeline><highlight class="normal">//<sp/>&lt;/thrown&gt;</highlight></codeline>
<codeline><highlight class="normal">template&lt;class<sp/>T&gt;</highlight></codeline>
<codeline><highlight class="normal">T*<sp/>Array&lt;T&gt;::getStorage(bool&amp;<sp/>deleteIt)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>assert(ok());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>deleteIt<sp/>=<sp/>false;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>if<sp/>(ndim()<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>nullptr;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>if<sp/>(contiguousStorage())<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>begin_p;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>//<sp/>We<sp/>need<sp/>to<sp/>do<sp/>a<sp/>copy</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>size_t<sp/>n<sp/>=<sp/>nelements();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>T*<sp/>storage<sp/>=<sp/>std::allocator&lt;T&gt;().allocate(n);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>try<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>for(size_t<sp/>i=0;<sp/>i!=n;<sp/>++i)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>new<sp/>(&amp;storage[i])<sp/>T();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>copyToContiguousStorage(storage,<sp/>*this);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}<sp/>catch<sp/>(...)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>TODO<sp/>To<sp/>be<sp/>correct,<sp/>the<sp/>destructors<sp/>of<sp/>the<sp/>already</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>constructed<sp/>object<sp/>should<sp/>be<sp/>called,<sp/>but<sp/>this<sp/>is</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>a<sp/>border<sp/>case<sp/>so<sp/>ignored<sp/>for<sp/>now.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>std::allocator&lt;T&gt;().deallocate(storage,<sp/>nelements());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>throw;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>deleteIt<sp/>=<sp/>true;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>return<sp/>storage;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">template&lt;class<sp/>T&gt;<sp/>void<sp/>Array&lt;T&gt;::putStorage(T<sp/>*&amp;storage,<sp/>bool<sp/>deleteAndCopy)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>assert(ok());</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>if<sp/>(deleteAndCopy<sp/>==<sp/>false)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>storage<sp/>=<sp/>nullptr;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>if<sp/>(ndim()<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>move_n_with_stride(storage,<sp/>length_p(0),<sp/>begin_p,<sp/>inc_p(0),<sp/>1U);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}<sp/>else<sp/>if<sp/>(length_p(0)<sp/>==<sp/>1<sp/><sp/>&amp;&amp;<sp/><sp/>ndim()<sp/>==<sp/>2)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>Special<sp/>case<sp/>which<sp/>can<sp/>be<sp/>quite<sp/>common<sp/>(e.g.<sp/>row<sp/>in<sp/>a<sp/>matrix).</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>move_n_with_stride(storage,<sp/>length_p(1),<sp/>begin_p,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>originalLength_p(0)*inc_p(1),<sp/>1U);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}<sp/>else<sp/>if<sp/>(length_p(0)<sp/>&lt;=<sp/>25)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>If<sp/>not<sp/>many<sp/>elements<sp/>on<sp/>a<sp/>line,<sp/>it&apos;s<sp/>better<sp/>to<sp/>use<sp/>this<sp/>loop.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>T*<sp/>ptr<sp/>=<sp/>storage;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>iterator<sp/>iterend=end();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>for<sp/>(iterator<sp/>iter=begin();<sp/>iter!=iterend;<sp/>++iter)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*iter<sp/>=<sp/>std::move(*ptr);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++ptr;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}<sp/>else<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ArrayPositionIterator<sp/>ai(this-&gt;shape(),<sp/>1);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>size_t<sp/>offset;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>IPosition<sp/>index(ndim());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>size_t<sp/>count=0;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>while<sp/>(!<sp/>ai.pastEnd())<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>index<sp/>=<sp/>ai.pos();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>offset<sp/>=<sp/>ArrayIndexOffset(ndim(),<sp/>originalLength_p.storage(),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inc_p.storage(),<sp/>index);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>move_n_with_stride(storage+count*length_p(0),<sp/>length_p(0),<sp/>begin_p+offset,<sp/>inc_p(0),<sp/>1U);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ai.next();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>count++;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>T<sp/>const<sp/>*<sp/>&amp;fakeStorage<sp/>=<sp/>const_cast&lt;T<sp/>const<sp/>*&amp;&gt;(storage);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>freeStorage(fakeStorage,<sp/>deleteAndCopy);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">template&lt;class<sp/>T&gt;</highlight></codeline>
<codeline><highlight class="normal">void<sp/>Array&lt;T&gt;::freeStorage(const<sp/>T*&amp;storage,<sp/>bool<sp/>deleteIt)<sp/>const</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>assert(ok());</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>if<sp/>(deleteIt)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>The<sp/>cast<sp/>is<sp/>required<sp/>since<sp/>you<sp/>can&apos;t<sp/>delete<sp/>a<sp/>const<sp/>array;<sp/>however</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>if<sp/>deleteIt<sp/>is<sp/>set<sp/>the<sp/>array<sp/>came<sp/>from<sp/>new.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>T*<sp/>ptr<sp/>=<sp/>const_cast&lt;T*&gt;(storage);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>size_t<sp/>n<sp/>=<sp/>nelements();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>for(size_t<sp/>i=0;<sp/>i!=n;<sp/>++i)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ptr[i].~T();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>TODO<sp/>this<sp/>is<sp/>only<sp/>allowed<sp/>when<sp/>allocator<sp/>is<sp/>always<sp/>equal,<sp/>but<sp/>is<sp/>done<sp/>for</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>now<sp/>to<sp/>keep<sp/>the<sp/>method<sp/>const.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>see<sp/>e.g.<sp/>std::allocator_traits&lt;allocator_type&gt;::is_always_equal</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>std::allocator&lt;T&gt;().deallocate(ptr,<sp/>n);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>storage<sp/>=<sp/>nullptr;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">template&lt;class<sp/>T&gt;</highlight></codeline>
<codeline><highlight class="normal">void<sp/>*Array&lt;T&gt;::getVStorage(bool<sp/>&amp;deleteIt)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>getStorage<sp/>(deleteIt);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal">template&lt;class<sp/>T&gt;</highlight></codeline>
<codeline><highlight class="normal">const<sp/>void<sp/>*Array&lt;T&gt;::getVStorage(bool<sp/>&amp;deleteIt)<sp/>const</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>getStorage<sp/>(deleteIt);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal">template&lt;class<sp/>T&gt;</highlight></codeline>
<codeline><highlight class="normal">void<sp/>Array&lt;T&gt;::putVStorage(void<sp/>*&amp;storage,<sp/>bool<sp/>deleteAndCopy)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>T*<sp/>&amp;ptr<sp/>=<sp/>reinterpret_cast&lt;T*&amp;&gt;(storage);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>putStorage<sp/>(ptr,<sp/>deleteAndCopy);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal">template&lt;class<sp/>T&gt;</highlight></codeline>
<codeline><highlight class="normal">void<sp/>Array&lt;T&gt;::freeVStorage(const<sp/>void<sp/>*&amp;storage,<sp/>bool<sp/>deleteAndCopy)<sp/>const</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>const<sp/>T*<sp/>&amp;ptr<sp/>=<sp/>reinterpret_cast&lt;const<sp/>T*&amp;&gt;(storage);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>freeStorage<sp/>(ptr,<sp/>deleteAndCopy);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">template&lt;class<sp/>T&gt;</highlight></codeline>
<codeline><highlight class="normal">void<sp/>Array&lt;T&gt;::takeStorage(const<sp/>IPosition<sp/>&amp;shape,<sp/>T<sp/>*storage,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>StorageInitPolicy<sp/>policy)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>preTakeStorage(shape);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>size_t<sp/>new_nels<sp/>=<sp/>shape.product();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>if(policy<sp/>==<sp/>SHARE)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>data_p<sp/>=<sp/>arrays_internal::Storage&lt;T&gt;::MakeFromSharedData(storage,<sp/>new_nels);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>else<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(data_p==nullptr<sp/>||<sp/>!isUnique()<sp/>||<sp/>data_p-&gt;size()<sp/>!=<sp/>new_nels)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data_p<sp/>=<sp/>arrays_internal::Storage&lt;T&gt;::MakeFromMove(storage,<sp/>storage+new_nels);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::move(storage,<sp/>storage+new_nels,<sp/>data_p-&gt;data());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>ArrayBase::assign(ArrayBase(shape));</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>begin_p<sp/>=<sp/>data_p-&gt;data();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>setEndIter();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>if(policy<sp/>==<sp/>TAKE_OVER)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>TODO<sp/>this<sp/>is<sp/>not<sp/>consistent<sp/>with<sp/>old<sp/>behaviour</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>for(size_t<sp/>i=0;<sp/>i!=new_nels;<sp/>++i)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>storage[new_nels-i-1].~T();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>std::allocator&lt;T&gt;().deallocate(storage,<sp/>new_nels);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>//<sp/>Call<sp/>OK<sp/>at<sp/>the<sp/>end<sp/>rather<sp/>than<sp/>the<sp/>beginning<sp/>since<sp/>this<sp/>might</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>//<sp/>be<sp/>called<sp/>from<sp/>a<sp/>constructor.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>assert(ok());</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/>postTakeStorage();</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">template&lt;class<sp/>T&gt;</highlight></codeline>
<codeline><highlight class="normal">void<sp/>Array&lt;T&gt;::takeStorage(const<sp/>IPosition<sp/>&amp;shape,<sp/>const<sp/>T<sp/>*storage)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>This<sp/>cast<sp/>is<sp/>safe<sp/>since<sp/>a<sp/>copy<sp/>will<sp/>be<sp/>made</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>*storagefake<sp/>=<sp/>const_cast&lt;T*&gt;(storage);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>takeStorage(shape,<sp/>storagefake,<sp/>COPY);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline></codeline>
<codeline><highlight class="normal">template&lt;class<sp/>T&gt;</highlight></codeline>
<codeline><highlight class="normal">std::unique_ptr&lt;ArrayPositionIterator&gt;<sp/>Array&lt;T&gt;::makeIterator<sp/>(size_t<sp/>byDim)<sp/>const</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>std::unique_ptr&lt;ArrayPositionIterator&gt;(<sp/>new<sp/>ArrayIterator&lt;T&gt;<sp/>(*this,<sp/>byDim)<sp/>);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline></codeline>
<codeline></codeline>
<codeline><highlight class="normal">template&lt;class<sp/>T&gt;</highlight></codeline>
<codeline><highlight class="normal">Array&lt;T&gt;::BaseIteratorSTL::BaseIteratorSTL<sp/>(const<sp/>Array&lt;T&gt;&amp;<sp/>arr)</highlight></codeline>
<codeline><highlight class="normal">:<sp/>itsLineIncr<sp/>(0),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>itsCurPos<sp/><sp/><sp/>(arr.ndim(),<sp/>0),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>itsArray<sp/><sp/><sp/><sp/>(&amp;arr),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>itsContig<sp/><sp/><sp/>(arr.contiguousStorage())</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>//<sp/>An<sp/>empty<sp/>array<sp/>has<sp/>to<sp/>be<sp/>handled.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>if<sp/>(arr.nelements()<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>itsPos<sp/>=<sp/>0;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>itsContig<sp/>=<sp/>true;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}<sp/>else<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>Set<sp/>the<sp/>last<sp/>cursor<sp/>position.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>Handle<sp/>the<sp/>case<sp/>for<sp/>the<sp/>end<sp/>iterator.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>itsLastPos<sp/>=<sp/>arr.shape()<sp/>-<sp/>1;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>If<sp/>the<sp/>array<sp/>is<sp/>not<sp/>contiguous,<sp/>we<sp/>iterate<sp/>&quot;line<sp/>by<sp/>line&quot;<sp/>in</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>the<sp/>increment<sp/>function.<sp/>Optimize<sp/>for<sp/>the<sp/>case<sp/>where<sp/>the<sp/>length</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>of<sp/>the<sp/>lower<sp/>dimensions<sp/>is<sp/>1.<sp/>All<sp/>such<sp/>dimensions<sp/>can<sp/>be<sp/>included</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>in<sp/>the<sp/>&quot;line&quot;.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>At<sp/>the<sp/>end<sp/>itsLineAxis<sp/>gives<sp/>the<sp/>axis<sp/>where<sp/>the<sp/>next<sp/>&quot;line&quot;<sp/>starts.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>itsPos<sp/>=<sp/>&amp;((*itsArray)(itsCurPos));</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(!itsContig)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>itsLineAxis<sp/>=<sp/>0;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>while<sp/>(itsLineAxis<sp/>&lt;<sp/>arr.ndim()-1</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/><sp/>itsLastPos(itsLineAxis)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>itsLineAxis++;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>itsCurPos(itsLineAxis)<sp/>=<sp/>1;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>itsLineIncr<sp/>=<sp/>itsArray-&gt;steps()(itsLineAxis)<sp/>-<sp/>1;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>itsLineEnd<sp/>=<sp/>itsPos<sp/>+<sp/>itsLastPos(itsLineAxis)<sp/>*<sp/>(itsLineIncr+1);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>itsCurPos(itsLineAxis)<sp/>=<sp/>0;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">template&lt;class<sp/>T&gt;</highlight></codeline>
<codeline><highlight class="normal">void<sp/>Array&lt;T&gt;::BaseIteratorSTL::increment()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>size_t<sp/>axis;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>for<sp/>(axis=itsLineAxis+1;<sp/>axis&lt;itsCurPos.nelements();<sp/>axis++)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(itsCurPos(axis)<sp/>&lt;<sp/>itsLastPos(axis))<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>itsCurPos(axis)++;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>itsLineEnd<sp/>+=<sp/>itsArray-&gt;steps()(axis);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>itsCurPos(axis)<sp/>=<sp/>0;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>itsLineEnd<sp/>-=<sp/>itsLastPos(axis)<sp/>*<sp/>itsArray-&gt;steps()(axis);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>if<sp/>(axis<sp/>==<sp/>itsCurPos.nelements())<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>itsPos<sp/>=<sp/>itsArray-&gt;cend();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}<sp/>else<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>itsPos<sp/>=<sp/>itsLineEnd<sp/>-<sp/>itsLastPos(itsLineAxis)<sp/>*<sp/>(itsLineIncr+1);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline></codeline>
<codeline><highlight class="normal">template&lt;class<sp/>T&gt;</highlight></codeline>
<codeline><highlight class="normal">std::vector&lt;T&gt;<sp/>Array&lt;T&gt;::tovector()<sp/>const<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>bool<sp/>deleteIt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>const<sp/>T<sp/>*stor<sp/>=<sp/>getStorage(deleteIt);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>std::vector&lt;T&gt;<sp/>out;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>out.assign(stor,<sp/>stor+nelements());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>//<sp/>TODO<sp/>this<sp/>is<sp/>formally<sp/>not<sp/>allowed:<sp/>the<sp/>allocator<sp/>is<sp/>not<sp/>const,<sp/>so</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>//<sp/>might<sp/>cause<sp/>the<sp/>object<sp/>to<sp/>change.<sp/>This<sp/>tovector()<sp/>method<sp/>can<sp/>obviously<sp/>be<sp/>implemented</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>//<sp/>in<sp/>a<sp/>const<sp/>manner,<sp/>so<sp/>this<sp/>needs<sp/>to<sp/>be<sp/>rewritten.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>const_cast&lt;Array&lt;T&gt;*&gt;(this)-&gt;freeStorage(stor,<sp/>deleteIt);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>return<sp/>out;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">template&lt;class<sp/>T&gt;</highlight></codeline>
<codeline><highlight class="normal">template&lt;class<sp/>U&gt;</highlight></codeline>
<codeline><highlight class="normal">void<sp/>Array&lt;T&gt;::tovector(std::vector&lt;T,<sp/>U&gt;<sp/>&amp;out)<sp/>const<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>bool<sp/>deleteIt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>const<sp/>T<sp/>*stor<sp/>=<sp/>getStorage(deleteIt);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>out.assign(stor,<sp/>stor+nelements());</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>///<sp/>See<sp/>note<sp/>above<sp/>for<sp/>@ref<sp/>tovector()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>const_cast&lt;Array&lt;T&gt;*&gt;(this)-&gt;freeStorage(stor,<sp/>deleteIt);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>Define<sp/>static<sp/>member</highlight></codeline>
<codeline><highlight class="normal">template&lt;typename<sp/>T&gt;</highlight></codeline>
<codeline><highlight class="normal">typename<sp/>Array&lt;T&gt;::uninitializedType<sp/>Array&lt;T&gt;::uninitialized;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">}<sp/>//#End<sp/>casa<sp/>namespace</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#endif</highlight></codeline>
    </programlisting>
    <location file="casa/Arrays/Array.tcc"/>
  </compounddef>
</doxygen>
