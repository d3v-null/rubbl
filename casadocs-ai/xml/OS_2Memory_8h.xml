<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="OS_2Memory_8h" kind="file" language="C++">
    <compoundname>Memory.h</compoundname>
    <includes refid="aips_8h" local="no">casacore/casa/aips.h</includes>
    <includes refid="stdlib_8h" local="no">casacore/casa/stdlib.h</includes>
    <includedby refid="Memory_8cc" local="no">casa/OS/Memory.cc</includedby>
    <includedby refid="OS_8h" local="no">casa/OS.h</includedby>
    <includedby refid="AppInfo_8cc" local="no">casa/System/AppInfo.cc</includedby>
    <incdepgraph>
      <node id="3">
        <label>casacore/casa/aipsenv.h</label>
        <link refid="aipsenv_8h"/>
      </node>
      <node id="1">
        <label>casa/OS/Memory.h</label>
        <link refid="OS_2Memory_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>casacore/casa/stdlib.h</label>
        <link refid="stdlib_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>casacore/casa/aipstype.h</label>
        <link refid="aipstype_8h"/>
      </node>
      <node id="2">
        <label>casacore/casa/aips.h</label>
        <link refid="aips_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>cstdlib</label>
      </node>
      <node id="6">
        <label>casacore/casa/aipsdef.h</label>
        <link refid="aipsdef_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>casacore/casa/aipsxtype.h</label>
        <link refid="aipsxtype_8h"/>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="4">
        <label>casa/System/AppInfo.cc</label>
        <link refid="AppInfo_8cc"/>
      </node>
      <node id="3">
        <label>casa/OS.h</label>
        <link refid="OS_8h"/>
      </node>
      <node id="1">
        <label>casa/OS/Memory.h</label>
        <link refid="OS_2Memory_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>casa/OS/Memory.cc</label>
        <link refid="Memory_8cc"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classcasacore_1_1Memory" prot="public">casacore::Memory</innerclass>
    <innernamespace refid="namespacecasacore">casacore</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//#<sp/>Memory.h:<sp/>Memory<sp/>related<sp/>information<sp/>and<sp/>utilities.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>Copyright<sp/>(C)<sp/>1997,2001</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>Associated<sp/>Universities,<sp/>Inc.<sp/>Washington<sp/>DC,<sp/>USA.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>This<sp/>library<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Library<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>2<sp/>of<sp/>the<sp/>License,<sp/>or<sp/>(at<sp/>your</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>This<sp/>library<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,<sp/>but<sp/>WITHOUT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of<sp/>MERCHANTABILITY<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the<sp/>GNU<sp/>Library<sp/>General<sp/>Public</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>License<sp/>for<sp/>more<sp/>details.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Library<sp/>General<sp/>Public<sp/>License</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>along<sp/>with<sp/>this<sp/>library;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software<sp/>Foundation,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>Inc.,<sp/>675<sp/>Massachusetts<sp/>Ave,<sp/>Cambridge,<sp/>MA<sp/>02139,<sp/>USA.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>Correspondence<sp/>concerning<sp/>AIPS++<sp/>should<sp/>be<sp/>addressed<sp/>as<sp/>follows:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Internet<sp/>email:<sp/>casa-feedback@nrao.edu.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Postal<sp/>address:<sp/>AIPS++<sp/>Project<sp/>Office</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>National<sp/>Radio<sp/>Astronomy<sp/>Observatory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>520<sp/>Edgemont<sp/>Road</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Charlottesville,<sp/>VA<sp/>22903-2475<sp/>USA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>CASA_MEMORY_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CASA_MEMORY_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="aips_8h" kindref="compound">casacore/casa/aips.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>The<sp/>following<sp/>is<sp/>used<sp/>to<sp/>get<sp/>size_t.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="stdlib_8h" kindref="compound">casacore/casa/stdlib.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacecasacore" kindref="compound">casacore</ref><sp/>{<sp/></highlight><highlight class="comment">//#<sp/>NAMESPACE<sp/>CASACORE<sp/>-<sp/>BEGIN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;summary&gt;Memory<sp/>related<sp/>information<sp/>and<sp/>utilities.&lt;/summary&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">//<sp/>use<sp/>visibility=export&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;reviewed<sp/>reviewer=&quot;rmarson&quot;<sp/>date=&quot;1997/11/12&quot;<sp/>tests=&quot;tMemory&quot;<sp/>demos=&quot;&quot;&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;/reviewed&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;prerequisite&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>&lt;li&gt;<sp/>General<sp/>knowledge<sp/>of<sp/>C/C++<sp/>memory<sp/>allocation<sp/>issues.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;/prerequisite&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;synopsis&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>class<sp/>should<sp/>generally<sp/>not<sp/>be<sp/>used<sp/>by<sp/>general<sp/>application<sp/>programmers.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Instead<sp/>you<sp/>should<sp/>use<sp/>the<sp/>memory<sp/>information<sp/>available<sp/>in<sp/>the<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;linkto<sp/>class=AppInfo&gt;AppInfo&lt;/linkto&gt;<sp/>class.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>class<sp/>reports<sp/>on<sp/>the<sp/>dynamic<sp/>(&quot;heap&quot;)<sp/>memory<sp/>used<sp/>by<sp/>this<sp/>process,<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">//<sp/>it<sp/>can<sp/>attempt<sp/>to<sp/>release<sp/>some<sp/>of<sp/>that<sp/>memory<sp/>back<sp/>to<sp/>the<sp/>operating</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">//<sp/>system.<sp/>The<sp/>class<sp/>reports<sp/>on<sp/>&lt;src&gt;allocated&lt;/src&gt;<sp/>memory,<sp/>which<sp/>is<sp/>memory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">//<sp/>that<sp/>the<sp/>process<sp/>has<sp/>actually<sp/>requested,<sp/>typically<sp/>via<sp/>&lt;src&gt;new&lt;/src&gt;,<sp/>but</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">//<sp/>also<sp/>via<sp/>&lt;src&gt;malloc&lt;/src&gt;.<sp/>The<sp/>number<sp/>might<sp/>be<sp/>somewhat<sp/>larger<sp/>than<sp/>actually</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">//<sp/>requested<sp/>by<sp/>the<sp/>programmer<sp/>to<sp/>account<sp/>for<sp/>overhead<sp/>and<sp/>alignment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">//<sp/>considerations.<sp/>The<sp/>class<sp/>also<sp/>reports<sp/>&lt;src&gt;assigned&lt;/src&gt;<sp/>memory,<sp/>which<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>total<sp/>memory<sp/>that<sp/>the<sp/>process<sp/>has<sp/>been<sp/>given,<sp/>not<sp/>all<sp/>of<sp/>which<sp/>has<sp/>been</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">//<sp/>allocated<sp/>by<sp/>the<sp/>programmer.<sp/>Typically<sp/>this<sp/>results<sp/>from<sp/>memory<sp/>which<sp/>has</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="comment">//<sp/>been<sp/>&lt;src&gt;delete&lt;/src&gt;d<sp/>by<sp/>the<sp/>programmer,<sp/>but<sp/>has<sp/>not<sp/>been<sp/>released<sp/>to<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="comment">//<sp/>OS<sp/>on<sp/>the<sp/>assumption<sp/>that<sp/>it<sp/>might<sp/>be<sp/>needed<sp/>again.<sp/>(Getting<sp/>and<sp/>releasing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="comment">//<sp/>memory<sp/>to<sp/>the<sp/>OS<sp/>can<sp/>be<sp/>expensive).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="comment">//<sp/>At<sp/>present,<sp/>the<sp/>values<sp/>for<sp/>allocated<sp/>and<sp/>assigned<sp/>memory<sp/>are<sp/>obtained<sp/>via<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;src&gt;mallinfo()&lt;/src&gt;<sp/>call,<sp/>usually<sp/>defined<sp/>in<sp/>&lt;src&gt;malloc.h&lt;/src&gt;.<sp/>This<sp/>call</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="comment">//<sp/>seems<sp/>to<sp/>be<sp/>adequately<sp/>portable<sp/>for<sp/>Unix.<sp/>Another<sp/>alternative<sp/>would<sp/>be<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">//<sp/>replace<sp/>global<sp/>operators<sp/>&lt;src&gt;new&lt;/src&gt;<sp/>and<sp/>&lt;src&gt;delete&lt;/src&gt;<sp/>for<sp/>systems</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="comment">//<sp/>that<sp/>do<sp/>not<sp/>have<sp/>&lt;src&gt;mallinfo()&lt;/src&gt;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>member<sp/>function<sp/>&lt;src&gt;releaseMemory()&lt;/src&gt;<sp/>on<sp/>some<sp/>system<sp/>will<sp/>attempt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="comment">//<sp/>to<sp/>return<sp/>assigned<sp/>but<sp/>unallocated<sp/>memory<sp/>to<sp/>the<sp/>OS.<sp/>If<sp/>the<sp/>compilation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="comment">//<sp/>system<sp/>cannot<sp/>automatically<sp/>determine<sp/>how<sp/>to<sp/>do<sp/>this<sp/>(at<sp/>present<sp/>it<sp/>only</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="comment">//<sp/>recognizes<sp/>Linux<sp/>systems),<sp/>you<sp/>can<sp/>you<sp/>this<sp/>function<sp/>by<sp/>setting<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="comment">//<sp/>preprocessor<sp/>symbol<sp/>&lt;src&gt;AIPS_RELEASEMEM&lt;/src&gt;<sp/>to<sp/>a<sp/>C++<sp/>statement<sp/>which</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="comment">//<sp/>will<sp/>release<sp/>memory<sp/>to<sp/>the<sp/>OS.<sp/>For<sp/>example,<sp/>if<sp/>you<sp/>are<sp/>using<sp/>GNU<sp/>malloc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>could<sp/>set<sp/>it<sp/>to<sp/>&lt;src&gt;malloc_trim(0)&lt;/src&gt;.<sp/>Note<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;src&gt;releaseMemory()&lt;/src&gt;<sp/>might<sp/>be<sp/>a<sp/>no-op<sp/>on<sp/>many<sp/>systems,<sp/>and<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="comment">//<sp/>calling<sp/>it<sp/>might<sp/>be<sp/>expensive<sp/>so<sp/>it<sp/>should<sp/>not<sp/>be<sp/>called<sp/>in<sp/>tight-loops.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>this<sp/>class<sp/>does<sp/>not<sp/>use<sp/>any<sp/>Casacore<sp/>facilities<sp/>and<sp/>does<sp/>not<sp/>cause</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="comment">//<sp/>any<sp/>Casacore<sp/>code<sp/>to<sp/>be<sp/>linked<sp/>in<sp/>to<sp/>your<sp/>executable.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;/synopsis&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;example&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>could<sp/>attempt<sp/>to<sp/>return<sp/>memory<sp/>to<sp/>the<sp/>OS<sp/>when<sp/>we<sp/>are<sp/>wasting<sp/>a<sp/>lot</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="comment">//<sp/>of<sp/>memory<sp/>as<sp/>follows.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;srcBlock&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="comment">//<sp/>if<sp/>(Memory::assignedMemoryInBytes()<sp/>-<sp/>Memory::allocatedMemoryInBytes()<sp/>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>1024*1024)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>Memory::releaseMemory();<sp/>//<sp/>Attempt<sp/>to<sp/>release<sp/>if<sp/>more<sp/>than<sp/>1M<sp/>&quot;wasted&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;/srcBlock&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;/example&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;motivation&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="comment">//<sp/>At<sp/>run<sp/>time<sp/>we<sp/>need<sp/>to<sp/>be<sp/>able<sp/>to<sp/>make<sp/>decisions<sp/>about<sp/>whether<sp/>we<sp/>should</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="comment">//<sp/>keep<sp/>things<sp/>in<sp/>memory<sp/>or<sp/>about<sp/>whether<sp/>we<sp/>should<sp/>do<sp/>I/O<sp/>(e.g.<sp/>use<sp/>an</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Array<sp/>or<sp/>a<sp/>PagedArray).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;/motivation&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;todo<sp/>asof=&quot;1997/11/10&quot;&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>&lt;li&gt;<sp/>We<sp/>might<sp/>some<sp/>day<sp/>want<sp/>to<sp/>put<sp/>actual<sp/>allocation/deallocation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>functions<sp/>in<sp/>here<sp/>if<sp/>the<sp/>mallinfo()<sp/>interface<sp/>turns<sp/>out<sp/>to<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>be<sp/>portable.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;/todo&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107" refid="classcasacore_1_1Memory" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcasacore_1_1Memory" kindref="compound">Memory</ref></highlight></codeline>
<codeline lineno="108"><highlight class="normal">{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>How<sp/>much<sp/>memory<sp/>has<sp/>been<sp/>allocated<sp/>by<sp/>the<sp/>programmer<sp/>(via<sp/>either</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&lt;src&gt;new&lt;/src&gt;<sp/>or<sp/>&lt;src&gt;malloc&lt;/src&gt;.<sp/>This<sp/>can<sp/>include<sp/>some<sp/>extra</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>overhead<sp/>bytes,<sp/>e.g.<sp/>for<sp/>alignment<sp/>reasons.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classcasacore_1_1Memory_1a35f8328319d5715bb1a01eb76997946b" kindref="member">allocatedMemoryInBytes</ref>();</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>How<sp/>much<sp/>memory<sp/>in<sp/>in<sp/>the<sp/>memory<sp/>&quot;pool&quot;<sp/>of<sp/>this<sp/>process.<sp/>This<sp/>includes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>only<sp/>the<sp/>allocated<sp/>memory,<sp/>but<sp/>some<sp/>memory<sp/>which<sp/>has<sp/>been</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&lt;src&gt;delete&lt;/src&gt;d<sp/>but<sp/>not<sp/>returned<sp/>to<sp/>the<sp/>OS<sp/>on<sp/>the<sp/>assumption<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>it<sp/>might<sp/>be<sp/>needed<sp/>again.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classcasacore_1_1Memory_1a9ed0a869efaa54e11b2b1e92f1de7f01" kindref="member">assignedMemoryInBytes</ref>();</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Attempt<sp/>to<sp/>release<sp/>memory<sp/>which<sp/>has<sp/>been<sp/>assigned<sp/>but<sp/>not<sp/>allocated.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>On<sp/>many<sp/>systems<sp/>this<sp/>will<sp/>be<sp/>a<sp/>no-op,<sp/>and<sp/>even<sp/>on<sp/>systems<sp/>in<sp/>which<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>does<sp/>something<sp/>the<sp/>amount<sp/>of<sp/>reclaimed<sp/>memory<sp/>cannot<sp/>be<sp/>specified.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Since<sp/>this<sp/>function<sp/>may<sp/>be<sp/>somewhat<sp/>expensive<sp/>to<sp/>call<sp/>it<sp/>should<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>be<sp/>called<sp/>too<sp/>often.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcasacore_1_1Memory_1aa8e866f1e69b45db90122a95eb225af2" kindref="member">releaseMemory</ref>();</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>setMemoryOptions<sp/>and<sp/>setMemoryOption<sp/>are<sp/>typically<sp/>front<sp/>ends<sp/>for<sp/>mallopt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>which<sp/>lets<sp/>the<sp/>user<sp/>control<sp/>some<sp/>memory<sp/>allocation<sp/>parameters.<sp/><sp/>setMemoryOptions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>intended<sp/>to<sp/>be<sp/>called<sp/>only<sp/>once<sp/>at<sp/>the<sp/>start<sp/>of<sp/>a<sp/>program<sp/>while<sp/>setMemoryOption</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>could<sp/>be<sp/>called<sp/>where<sp/>desired<sp/>(but<sp/>see<sp/>mallopt<sp/>man<sp/>page<sp/>for<sp/>possible<sp/>side<sp/>effects).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note:<sp/>these<sp/>two<sp/>functions<sp/>were<sp/>added<sp/>to<sp/>address<sp/>in<sp/>a<sp/>general<sp/>way<sp/>a<sp/>memory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fragmentation<sp/>problem<sp/>encountered<sp/>on<sp/>by<sp/>the<sp/>MIPSpro<sp/>C++<sp/>compiler<sp/>on<sp/>the<sp/>SGI.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcasacore_1_1Memory_1af01f1427f08ae2404f10431d03ad202c" kindref="member">setMemoryOptions</ref>();</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><ref refid="classcasacore_1_1Memory_1a5f21f74c8b3aae0e543cbfe77f103ff3" kindref="member">setMemoryOption</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="134"><highlight class="normal">};</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal">}<sp/></highlight><highlight class="comment">//#<sp/>NAMESPACE<sp/>CASACORE<sp/>-<sp/>END</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="casa/OS/Memory.h"/>
  </compounddef>
</doxygen>
