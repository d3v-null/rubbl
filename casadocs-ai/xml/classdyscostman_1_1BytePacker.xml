<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classdyscostman_1_1BytePacker" kind="class" language="C++" prot="public">
    <compoundname>dyscostman::BytePacker</compoundname>
    <includes refid="bytepacker_8h" local="no">bytepacker.h</includes>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classdyscostman_1_1BytePacker_1adf82ac82f5239523bfc13d880b4b8013" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void dyscostman::BytePacker::pack</definition>
        <argsstring>(unsigned bitCount, unsigned char *dest, const unsigned *symbolBuffer, size_t symbolCount)</argsstring>
        <name>pack</name>
        <param>
          <type>unsigned</type>
          <declname>bitCount</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>const unsigned *</type>
          <declname>symbolBuffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>symbolCount</declname>
        </param>
        <briefdescription>
<para>Call a pack..() function for a given bit count. </para>
        </briefdescription>
        <detaileddescription>
<para>Will forward the pack operation to the one for the given bit count. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bitCount</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of bits to use per symbol </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dest</parametername>
</parameternamelist>
<parameterdescription>
<para>output buffer (see class desc for size) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>symbolBuffer</parametername>
</parameternamelist>
<parameterdescription>
<para>the input buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>symbolCount</parametername>
</parameternamelist>
<parameterdescription>
<para>number of symbols in <computeroutput>symbolBuffer</computeroutput>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tables/Dysco/bytepacker.h" line="36" column="15" bodyfile="tables/Dysco/bytepacker.h" bodystart="153" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="classdyscostman_1_1BytePacker_1a94d6deb4b5db5795bb6ce99f6d4131a8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void dyscostman::BytePacker::unpack</definition>
        <argsstring>(unsigned bitCount, unsigned *symbolBuffer, unsigned char *packedBuffer, size_t symbolCount)</argsstring>
        <name>unpack</name>
        <param>
          <type>unsigned</type>
          <declname>bitCount</declname>
        </param>
        <param>
          <type>unsigned *</type>
          <declname>symbolBuffer</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>packedBuffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>symbolCount</declname>
        </param>
        <briefdescription>
<para>Call an unpack..() function for a given bit count. </para>
        </briefdescription>
        <detaileddescription>
<para>Will forward the unpack operation to the one for the given bit count. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bitCount</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of bits used per symbol </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>symbolBuffer</parametername>
</parameternamelist>
<parameterdescription>
<para>output buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>packedBuffer</parametername>
</parameternamelist>
<parameterdescription>
<para>the input buffer with the packed symbols </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>symbolCount</parametername>
</parameternamelist>
<parameterdescription>
<para>number of symbols that will be unpacked into <computeroutput>symbolBuffer</computeroutput>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tables/Dysco/bytepacker.h" line="48" column="15" bodyfile="tables/Dysco/bytepacker.h" bodystart="186" bodyend="218"/>
      </memberdef>
      <memberdef kind="function" id="classdyscostman_1_1BytePacker_1a16fc89e00fdc0948c407ad6c303a05f2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void dyscostman::BytePacker::pack2</definition>
        <argsstring>(unsigned char *dest, const unsigned *symbolBuffer, size_t symbolCount)</argsstring>
        <name>pack2</name>
        <param>
          <type>unsigned char *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>const unsigned *</type>
          <declname>symbolBuffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>symbolCount</declname>
        </param>
        <briefdescription>
<para>Pack the symbols from symbolBuffer into the destination array using bitCount=2. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tables/Dysco/bytepacker.h" line="55" column="15" bodyfile="tables/Dysco/bytepacker.h" bodystart="220" bodyend="251"/>
      </memberdef>
      <memberdef kind="function" id="classdyscostman_1_1BytePacker_1aa71879819e0837f38db199ea4c8fce1a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void dyscostman::BytePacker::unpack2</definition>
        <argsstring>(unsigned *symbolBuffer, unsigned char *packedBuffer, size_t symbolCount)</argsstring>
        <name>unpack2</name>
        <param>
          <type>unsigned *</type>
          <declname>symbolBuffer</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>packedBuffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>symbolCount</declname>
        </param>
        <briefdescription>
<para>Reverse of <ref refid="classdyscostman_1_1BytePacker_1a16fc89e00fdc0948c407ad6c303a05f2" kindref="member">pack2()</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>Will write symbolCount items into the symbolBuffer. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tables/Dysco/bytepacker.h" line="60" column="15" bodyfile="tables/Dysco/bytepacker.h" bodystart="253" bodyend="284"/>
      </memberdef>
      <memberdef kind="function" id="classdyscostman_1_1BytePacker_1a4c51690ebc4c7320c9dc52bdafe0affd" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void dyscostman::BytePacker::pack3</definition>
        <argsstring>(unsigned char *dest, const unsigned *symbolBuffer, size_t symbolCount)</argsstring>
        <name>pack3</name>
        <param>
          <type>unsigned char *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>const unsigned *</type>
          <declname>symbolBuffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>symbolCount</declname>
        </param>
        <briefdescription>
<para>Pack the symbols from symbolBuffer into the destination array using bitCount=3. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tables/Dysco/bytepacker.h" line="67" column="15" bodyfile="tables/Dysco/bytepacker.h" bodystart="286" bodyend="353"/>
      </memberdef>
      <memberdef kind="function" id="classdyscostman_1_1BytePacker_1a8ba85e43a1645d8fa6b92b297d84177f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void dyscostman::BytePacker::unpack3</definition>
        <argsstring>(unsigned *symbolBuffer, unsigned char *packedBuffer, size_t symbolCount)</argsstring>
        <name>unpack3</name>
        <param>
          <type>unsigned *</type>
          <declname>symbolBuffer</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>packedBuffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>symbolCount</declname>
        </param>
        <briefdescription>
<para>Reverse of <ref refid="classdyscostman_1_1BytePacker_1a4c51690ebc4c7320c9dc52bdafe0affd" kindref="member">pack3()</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>Will write symbolCount items into the symbolBuffer. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tables/Dysco/bytepacker.h" line="72" column="15" bodyfile="tables/Dysco/bytepacker.h" bodystart="355" bodyend="431"/>
      </memberdef>
      <memberdef kind="function" id="classdyscostman_1_1BytePacker_1a48c3fa176cff15274ed07843fee7741f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void dyscostman::BytePacker::pack4</definition>
        <argsstring>(unsigned char *dest, const unsigned *symbolBuffer, size_t symbolCount)</argsstring>
        <name>pack4</name>
        <param>
          <type>unsigned char *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>const unsigned *</type>
          <declname>symbolBuffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>symbolCount</declname>
        </param>
        <briefdescription>
<para>Pack the symbols from symbolBuffer into the destination array using bitCount=4. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tables/Dysco/bytepacker.h" line="79" column="15" bodyfile="tables/Dysco/bytepacker.h" bodystart="433" bodyend="445"/>
      </memberdef>
      <memberdef kind="function" id="classdyscostman_1_1BytePacker_1a0daba8561bffded7f80686c692f9fecf" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void dyscostman::BytePacker::unpack4</definition>
        <argsstring>(unsigned *symbolBuffer, unsigned char *packedBuffer, size_t symbolCount)</argsstring>
        <name>unpack4</name>
        <param>
          <type>unsigned *</type>
          <declname>symbolBuffer</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>packedBuffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>symbolCount</declname>
        </param>
        <briefdescription>
<para>Reverse of <ref refid="classdyscostman_1_1BytePacker_1a48c3fa176cff15274ed07843fee7741f" kindref="member">pack4()</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>Will write symbolCount items into the symbolBuffer. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tables/Dysco/bytepacker.h" line="84" column="15" bodyfile="tables/Dysco/bytepacker.h" bodystart="447" bodyend="460"/>
      </memberdef>
      <memberdef kind="function" id="classdyscostman_1_1BytePacker_1a9ec7fb596cdca52fda1512028fa1bd03" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void dyscostman::BytePacker::pack6</definition>
        <argsstring>(unsigned char *dest, const unsigned *symbolBuffer, size_t symbolCount)</argsstring>
        <name>pack6</name>
        <param>
          <type>unsigned char *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>const unsigned *</type>
          <declname>symbolBuffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>symbolCount</declname>
        </param>
        <briefdescription>
<para>Pack the symbols from symbolBuffer into the destination array using bitCount=6. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tables/Dysco/bytepacker.h" line="91" column="15" bodyfile="tables/Dysco/bytepacker.h" bodystart="462" bodyend="508"/>
      </memberdef>
      <memberdef kind="function" id="classdyscostman_1_1BytePacker_1a5a676f3ca5c5cdc3a53d9cf4e183f4de" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void dyscostman::BytePacker::unpack6</definition>
        <argsstring>(unsigned *symbolBuffer, unsigned char *packedBuffer, size_t symbolCount)</argsstring>
        <name>unpack6</name>
        <param>
          <type>unsigned *</type>
          <declname>symbolBuffer</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>packedBuffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>symbolCount</declname>
        </param>
        <briefdescription>
<para>Reverse of <ref refid="classdyscostman_1_1BytePacker_1a9ec7fb596cdca52fda1512028fa1bd03" kindref="member">pack6()</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>Will write symbolCount items into the symbolBuffer. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tables/Dysco/bytepacker.h" line="97" column="15" bodyfile="tables/Dysco/bytepacker.h" bodystart="510" bodyend="554"/>
      </memberdef>
      <memberdef kind="function" id="classdyscostman_1_1BytePacker_1a39f4c62a1689dbeff9a13036b8f783ab" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void dyscostman::BytePacker::pack8</definition>
        <argsstring>(unsigned char *dest, const unsigned *symbolBuffer, size_t symbolCount)</argsstring>
        <name>pack8</name>
        <param>
          <type>unsigned char *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>const unsigned *</type>
          <declname>symbolBuffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>symbolCount</declname>
        </param>
        <briefdescription>
<para>Pack the symbols from symbolBuffer into the destination array using bitCount=8. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tables/Dysco/bytepacker.h" line="104" column="15" bodyfile="tables/Dysco/bytepacker.h" bodystart="556" bodyend="559"/>
      </memberdef>
      <memberdef kind="function" id="classdyscostman_1_1BytePacker_1aff519a70bc9afd64922f9247a96f3866" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void dyscostman::BytePacker::unpack8</definition>
        <argsstring>(unsigned *symbolBuffer, unsigned char *packedBuffer, size_t symbolCount)</argsstring>
        <name>unpack8</name>
        <param>
          <type>unsigned *</type>
          <declname>symbolBuffer</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>packedBuffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>symbolCount</declname>
        </param>
        <briefdescription>
<para>Reverse of <ref refid="classdyscostman_1_1BytePacker_1a39f4c62a1689dbeff9a13036b8f783ab" kindref="member">pack8()</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>Will write symbolCount items into the symbolBuffer. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tables/Dysco/bytepacker.h" line="109" column="15" bodyfile="tables/Dysco/bytepacker.h" bodystart="561" bodyend="565"/>
      </memberdef>
      <memberdef kind="function" id="classdyscostman_1_1BytePacker_1a5774c0e97d2fb9c25083eaeb687f5d03" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void dyscostman::BytePacker::pack10</definition>
        <argsstring>(unsigned char *dest, const unsigned *symbolBuffer, size_t symbolCount)</argsstring>
        <name>pack10</name>
        <param>
          <type>unsigned char *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>const unsigned *</type>
          <declname>symbolBuffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>symbolCount</declname>
        </param>
        <briefdescription>
<para>Pack the symbols from symbolBuffer into the destination array using bitCount=10. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tables/Dysco/bytepacker.h" line="116" column="15" bodyfile="tables/Dysco/bytepacker.h" bodystart="567" bodyend="617"/>
      </memberdef>
      <memberdef kind="function" id="classdyscostman_1_1BytePacker_1ab69732c6dc3ee1321ad3abbd6a180855" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void dyscostman::BytePacker::unpack10</definition>
        <argsstring>(unsigned *symbolBuffer, unsigned char *packedBuffer, size_t symbolCount)</argsstring>
        <name>unpack10</name>
        <param>
          <type>unsigned *</type>
          <declname>symbolBuffer</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>packedBuffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>symbolCount</declname>
        </param>
        <briefdescription>
<para>Reverse of <ref refid="classdyscostman_1_1BytePacker_1a5774c0e97d2fb9c25083eaeb687f5d03" kindref="member">pack10()</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>Will write symbolCount items into the symbolBuffer. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tables/Dysco/bytepacker.h" line="121" column="15" bodyfile="tables/Dysco/bytepacker.h" bodystart="619" bodyend="668"/>
      </memberdef>
      <memberdef kind="function" id="classdyscostman_1_1BytePacker_1aad99f686fba1570f44af31cfcdebccb9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void dyscostman::BytePacker::pack12</definition>
        <argsstring>(unsigned char *dest, const unsigned *symbolBuffer, size_t symbolCount)</argsstring>
        <name>pack12</name>
        <param>
          <type>unsigned char *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>const unsigned *</type>
          <declname>symbolBuffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>symbolCount</declname>
        </param>
        <briefdescription>
<para>Pack the symbols from symbolBuffer into the destination array using bitCount=12. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tables/Dysco/bytepacker.h" line="128" column="15" bodyfile="tables/Dysco/bytepacker.h" bodystart="670" bodyend="693"/>
      </memberdef>
      <memberdef kind="function" id="classdyscostman_1_1BytePacker_1a140cd31ed5c50d087b47a63eca284827" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void dyscostman::BytePacker::unpack12</definition>
        <argsstring>(unsigned *symbolBuffer, unsigned char *packedBuffer, size_t symbolCount)</argsstring>
        <name>unpack12</name>
        <param>
          <type>unsigned *</type>
          <declname>symbolBuffer</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>packedBuffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>symbolCount</declname>
        </param>
        <briefdescription>
<para>Reverse of <ref refid="classdyscostman_1_1BytePacker_1aad99f686fba1570f44af31cfcdebccb9" kindref="member">pack12()</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>Will write symbolCount items into the symbolBuffer. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tables/Dysco/bytepacker.h" line="133" column="15" bodyfile="tables/Dysco/bytepacker.h" bodystart="695" bodyend="716"/>
      </memberdef>
      <memberdef kind="function" id="classdyscostman_1_1BytePacker_1a54619c990eb604b85289b3b0f752dcff" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void dyscostman::BytePacker::pack16</definition>
        <argsstring>(unsigned char *dest, const unsigned *symbolBuffer, size_t symbolCount)</argsstring>
        <name>pack16</name>
        <param>
          <type>unsigned char *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>const unsigned *</type>
          <declname>symbolBuffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>symbolCount</declname>
        </param>
        <briefdescription>
<para>Pack the symbols from symbolBuffer into the destination array using bitCount=16. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tables/Dysco/bytepacker.h" line="140" column="15" bodyfile="tables/Dysco/bytepacker.h" bodystart="718" bodyend="723"/>
      </memberdef>
      <memberdef kind="function" id="classdyscostman_1_1BytePacker_1ab3dfe3bd752012e872ad895800b96049" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void dyscostman::BytePacker::unpack16</definition>
        <argsstring>(unsigned *symbolBuffer, unsigned char *packedBuffer, size_t symbolCount)</argsstring>
        <name>unpack16</name>
        <param>
          <type>unsigned *</type>
          <declname>symbolBuffer</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>packedBuffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>symbolCount</declname>
        </param>
        <briefdescription>
<para>Reverse of <ref refid="classdyscostman_1_1BytePacker_1a54619c990eb604b85289b3b0f752dcff" kindref="member">pack16()</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>Will write symbolCount items into the symbolBuffer. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tables/Dysco/bytepacker.h" line="145" column="15" bodyfile="tables/Dysco/bytepacker.h" bodystart="725" bodyend="730"/>
      </memberdef>
      <memberdef kind="function" id="classdyscostman_1_1BytePacker_1a2e779e768cd7ccbf1de037c033e270aa" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>static size_t dyscostman::BytePacker::bufferSize</definition>
        <argsstring>(size_t nSymbols, size_t nBits)</argsstring>
        <name>bufferSize</name>
        <param>
          <type>size_t</type>
          <declname>nSymbols</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>nBits</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tables/Dysco/bytepacker.h" line="148" column="17" bodyfile="tables/Dysco/bytepacker.h" bodystart="148" bodyend="150"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Class for bit packing of values into bytes. </para>
    </briefdescription>
    <detaileddescription>
<para>Contains several methods that can pack and unpack an array of unsigned values into a bit-packed array, using as few bytes as possible. The number of bits used is fixed for all values in the array. All methods assume that the specified output array has at least enough space to store the packed / unpacked data. When packing, the amount of space needed is ceil(symbolCount / bitCount).</para>
<para>The <ref refid="classdyscostman_1_1BytePacker_1adf82ac82f5239523bfc13d880b4b8013" kindref="member">pack()</ref> and <ref refid="classdyscostman_1_1BytePacker_1a94d6deb4b5db5795bb6ce99f6d4131a8" kindref="member">unpack()</ref> methods can call the method with given bitcount at runtime. If the bitcount is known at compile time, one of the other methods can be used. For each of these calls, the input symbols are assumed to occupy at most the given number of bits. The number of bytes written during pack operations is ceil(symbolCount * bitCount / 8). unpack operations will write symbolCount symbols into the output buffer. </para>
    </detaileddescription>
    <location file="tables/Dysco/bytepacker.h" line="26" column="1" bodyfile="tables/Dysco/bytepacker.h" bodystart="26" bodyend="151"/>
    <listofallmembers>
      <member refid="classdyscostman_1_1BytePacker_1a2e779e768cd7ccbf1de037c033e270aa" prot="public" virt="non-virtual"><scope>dyscostman::BytePacker</scope><name>bufferSize</name></member>
      <member refid="classdyscostman_1_1BytePacker_1adf82ac82f5239523bfc13d880b4b8013" prot="public" virt="non-virtual"><scope>dyscostman::BytePacker</scope><name>pack</name></member>
      <member refid="classdyscostman_1_1BytePacker_1a5774c0e97d2fb9c25083eaeb687f5d03" prot="public" virt="non-virtual"><scope>dyscostman::BytePacker</scope><name>pack10</name></member>
      <member refid="classdyscostman_1_1BytePacker_1aad99f686fba1570f44af31cfcdebccb9" prot="public" virt="non-virtual"><scope>dyscostman::BytePacker</scope><name>pack12</name></member>
      <member refid="classdyscostman_1_1BytePacker_1a54619c990eb604b85289b3b0f752dcff" prot="public" virt="non-virtual"><scope>dyscostman::BytePacker</scope><name>pack16</name></member>
      <member refid="classdyscostman_1_1BytePacker_1a16fc89e00fdc0948c407ad6c303a05f2" prot="public" virt="non-virtual"><scope>dyscostman::BytePacker</scope><name>pack2</name></member>
      <member refid="classdyscostman_1_1BytePacker_1a4c51690ebc4c7320c9dc52bdafe0affd" prot="public" virt="non-virtual"><scope>dyscostman::BytePacker</scope><name>pack3</name></member>
      <member refid="classdyscostman_1_1BytePacker_1a48c3fa176cff15274ed07843fee7741f" prot="public" virt="non-virtual"><scope>dyscostman::BytePacker</scope><name>pack4</name></member>
      <member refid="classdyscostman_1_1BytePacker_1a9ec7fb596cdca52fda1512028fa1bd03" prot="public" virt="non-virtual"><scope>dyscostman::BytePacker</scope><name>pack6</name></member>
      <member refid="classdyscostman_1_1BytePacker_1a39f4c62a1689dbeff9a13036b8f783ab" prot="public" virt="non-virtual"><scope>dyscostman::BytePacker</scope><name>pack8</name></member>
      <member refid="classdyscostman_1_1BytePacker_1a94d6deb4b5db5795bb6ce99f6d4131a8" prot="public" virt="non-virtual"><scope>dyscostman::BytePacker</scope><name>unpack</name></member>
      <member refid="classdyscostman_1_1BytePacker_1ab69732c6dc3ee1321ad3abbd6a180855" prot="public" virt="non-virtual"><scope>dyscostman::BytePacker</scope><name>unpack10</name></member>
      <member refid="classdyscostman_1_1BytePacker_1a140cd31ed5c50d087b47a63eca284827" prot="public" virt="non-virtual"><scope>dyscostman::BytePacker</scope><name>unpack12</name></member>
      <member refid="classdyscostman_1_1BytePacker_1ab3dfe3bd752012e872ad895800b96049" prot="public" virt="non-virtual"><scope>dyscostman::BytePacker</scope><name>unpack16</name></member>
      <member refid="classdyscostman_1_1BytePacker_1aa71879819e0837f38db199ea4c8fce1a" prot="public" virt="non-virtual"><scope>dyscostman::BytePacker</scope><name>unpack2</name></member>
      <member refid="classdyscostman_1_1BytePacker_1a8ba85e43a1645d8fa6b92b297d84177f" prot="public" virt="non-virtual"><scope>dyscostman::BytePacker</scope><name>unpack3</name></member>
      <member refid="classdyscostman_1_1BytePacker_1a0daba8561bffded7f80686c692f9fecf" prot="public" virt="non-virtual"><scope>dyscostman::BytePacker</scope><name>unpack4</name></member>
      <member refid="classdyscostman_1_1BytePacker_1a5a676f3ca5c5cdc3a53d9cf4e183f4de" prot="public" virt="non-virtual"><scope>dyscostman::BytePacker</scope><name>unpack6</name></member>
      <member refid="classdyscostman_1_1BytePacker_1aff519a70bc9afd64922f9247a96f3866" prot="public" virt="non-virtual"><scope>dyscostman::BytePacker</scope><name>unpack8</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
