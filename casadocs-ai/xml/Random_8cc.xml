<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="Random_8cc" kind="file" language="C++">
    <compoundname>Random.cc</compoundname>
    <includes refid="Random_8h" local="no">casacore/casa/BasicMath/Random.h</includes>
    <includes refid="Constants_8h" local="no">casacore/casa/BasicSL/Constants.h</includes>
    <includes refid="Error_8h" local="no">casacore/casa/Exceptions/Error.h</includes>
    <includes refid="Assert_8h" local="no">casacore/casa/Utilities/Assert.h</includes>
    <includes refid="String_8h" local="no">casacore/casa/BasicSL/String.h</includes>
    <includes refid="Vector_8h" local="no">casacore/casa/Arrays/Vector.h</includes>
    <includes local="no">memory</includes>
    <incdepgraph>
      <node id="8">
        <label>casacore/casa/BasicMath/Math.h</label>
        <link refid="Math_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>casacore/casa/aipsenv.h</label>
        <link refid="aipsenv_8h"/>
      </node>
      <node id="19">
        <label>casacore/casa/Exceptions/Error.h</label>
        <link refid="Error_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>iterator</label>
      </node>
      <node id="17">
        <label>float.h</label>
      </node>
      <node id="52">
        <label>ArrayStr.tcc</label>
        <link refid="ArrayStr_8tcc"/>
      </node>
      <node id="26">
        <label>casacore/casa/iostream.h</label>
        <link refid="iostream_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>casacore/casa/stdlib.h</label>
        <link refid="stdlib_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>Array.h</label>
        <link refid="Array_8h"/>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>casacore/casa/iosfwd.h</label>
        <link refid="iosfwd_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>cmath</label>
      </node>
      <node id="42">
        <label>stdexcept</label>
      </node>
      <node id="5">
        <label>casacore/casa/aipstype.h</label>
        <link refid="aipstype_8h"/>
      </node>
      <node id="22">
        <label>casacore/casa/iosstrfwd.h</label>
        <link refid="iosstrfwd_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>casacore/casa/math.h</label>
        <link refid="math_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>string</label>
      </node>
      <node id="18">
        <label>values.h</label>
      </node>
      <node id="49">
        <label>ArrayStr.h</label>
        <link refid="ArrayStr_8h"/>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>ArrayError.h</label>
        <link refid="ArrayError_8h"/>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>casacore/casa/aips.h</label>
        <link refid="aips_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>casacore/casa/Arrays/Vector.h</label>
        <link refid="Vector_8h"/>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>exception</label>
      </node>
      <node id="51">
        <label>ostream</label>
      </node>
      <node id="16">
        <label>limits.h</label>
      </node>
      <node id="55">
        <label>Vector2.tcc</label>
        <link refid="Vector2_8tcc"/>
      </node>
      <node id="30">
        <label>sys/types.h</label>
      </node>
      <node id="1">
        <label>casa/BasicMath/Random.cc</label>
        <link refid="Random_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>casacore/casa/BasicMath/Random.h</label>
        <link refid="Random_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>Storage.h</label>
        <link refid="Storage_8h"/>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>IPosition.h</label>
        <link refid="IPosition_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>Array.tcc</label>
        <link refid="Array_8tcc"/>
      </node>
      <node id="38">
        <label>vector</label>
      </node>
      <node id="33">
        <label>casacore/casa/Utilities/Assert.tcc</label>
        <link refid="Assert_8tcc"/>
      </node>
      <node id="28">
        <label>sstream</label>
      </node>
      <node id="24">
        <label>iosfwd</label>
      </node>
      <node id="12">
        <label>cstdlib</label>
      </node>
      <node id="27">
        <label>iostream</label>
      </node>
      <node id="7">
        <label>casacore/casa/aipsdef.h</label>
        <link refid="aipsdef_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>cstddef</label>
      </node>
      <node id="54">
        <label>Vector.tcc</label>
        <link refid="Vector_8tcc"/>
      </node>
      <node id="25">
        <label>casacore/casa/sstream.h</label>
        <link refid="sstream_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>casacore/casa/BasicSL/Constants.h</label>
        <link refid="Constants_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>type_traits</label>
      </node>
      <node id="31">
        <label>casacore/casa/Exceptions/Error.tcc</label>
        <link refid="Error_8tcc"/>
      </node>
      <node id="46">
        <label>complex</label>
      </node>
      <node id="13">
        <label>casacore/casa/Arrays/ArrayFwd.h</label>
        <link refid="ArrayFwd_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>ArrayBase.h</label>
        <link refid="ArrayBase_8h"/>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>casacore/casa/aipsxtype.h</label>
        <link refid="aipsxtype_8h"/>
      </node>
      <node id="45">
        <label>cstring</label>
      </node>
      <node id="20">
        <label>casacore/casa/BasicSL/String.h</label>
        <link refid="String_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>memory</label>
      </node>
      <node id="50">
        <label>istream</label>
      </node>
      <node id="40">
        <label>initializer_list</label>
      </node>
      <node id="32">
        <label>casacore/casa/Utilities/Assert.h</label>
        <link refid="Assert_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>MaskLogiArrFwd.h</label>
        <link refid="MaskLogiArrFwd_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacecasacore">casacore</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="Random_8cc_1ae054512a09c5a98f4f3a96401beaf194" prot="public" static="no">
        <name>RANDOM_PERM_SIZE</name>
        <initializer>64</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/BasicMath/Random.cc" line="196" column="9" bodyfile="casa/BasicMath/Random.cc" bodystart="196" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="Random_8cc_1a4685a2bfb7ca9037547ec96982b8ccd0" prot="public" static="no">
        <name>SEED_TABLE_SIZE</name>
        <initializer>32</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/BasicMath/Random.cc" line="220" column="9" bodyfile="casa/BasicMath/Random.cc" bodystart="220" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//#<sp/>Random.cc:<sp/>Random<sp/>number<sp/>classes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>Copyright<sp/>(C)<sp/>1992,1993,1994,1995,1998,1999,2000,2001</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>Associated<sp/>Universities,<sp/>Inc.<sp/>Washington<sp/>DC,<sp/>USA.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>This<sp/>library<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Library<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>2<sp/>of<sp/>the<sp/>License,<sp/>or<sp/>(at<sp/>your</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>This<sp/>library<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,<sp/>but<sp/>WITHOUT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of<sp/>MERCHANTABILITY<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the<sp/>GNU<sp/>Library<sp/>General<sp/>Public</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>License<sp/>for<sp/>more<sp/>details.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Library<sp/>General<sp/>Public<sp/>License</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>along<sp/>with<sp/>this<sp/>library;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software<sp/>Foundation,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>Inc.,<sp/>675<sp/>Massachusetts<sp/>Ave,<sp/>Cambridge,<sp/>MA<sp/>02139,<sp/>USA.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>Correspondence<sp/>concerning<sp/>AIPS++<sp/>should<sp/>be<sp/>addressed<sp/>as<sp/>follows:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Internet<sp/>email:<sp/>casa-feedback@nrao.edu.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Postal<sp/>address:<sp/>AIPS++<sp/>Project<sp/>Office</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>National<sp/>Radio<sp/>Astronomy<sp/>Observatory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>520<sp/>Edgemont<sp/>Road</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Charlottesville,<sp/>VA<sp/>22903-2475<sp/>USA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="Random_8h" kindref="compound">casacore/casa/BasicMath/Random.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="Constants_8h" kindref="compound">casacore/casa/BasicSL/Constants.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="Error_8h" kindref="compound">casacore/casa/Exceptions/Error.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="Assert_8h" kindref="compound">casacore/casa/Utilities/Assert.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="String_8h" kindref="compound">casacore/casa/BasicSL/String.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="Vector_8h" kindref="compound">casacore/casa/Arrays/Vector.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacecasacore" kindref="compound">casacore</ref><sp/>{<sp/></highlight><highlight class="comment">//#<sp/>NAMESPACE<sp/>CASACORE<sp/>-<sp/>BEGIN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><ref refid="classcasacore_1_1RNG_1a1680cd0582bb9a11c8727ce51efa8ad7" kindref="member">RNG::~RNG</ref>()<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal">}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><ref refid="namespacecasacore_1a8e2f856944a61553ab74cd041314f696" kindref="member">Float</ref><sp/><ref refid="classcasacore_1_1RNG_1aa66563b8513e66e8a88896bd35846909" kindref="member">RNG::asFloat</ref>()<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>used<sp/>to<sp/>access<sp/>floats<sp/>as<sp/>unsigned<sp/>Int&apos;s</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">PrivateRNGSingleType<sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacecasacore_1a8e2f856944a61553ab74cd041314f696" kindref="member">Float</ref><sp/>flt;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacecasacore_1a5c559d8d8bf2ae7f67b439955d6be88a" kindref="member">uInt</ref><sp/>intgr;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>PrivateRNGSingleType<sp/>result;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>result.flt<sp/>=<sp/>1.0f;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>result.intgr<sp/>|=<sp/>(<ref refid="classcasacore_1_1RNG_1af0875fba3169114899eeedc90cec3b0a" kindref="member">asuInt</ref>()<sp/>&amp;<sp/>0x7fffff);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>result.flt<sp/>-=<sp/>1.0;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><ref refid="Assert_8h_1a3630afed5d5376567ad23703d3676be3" kindref="member">AlwaysAssert</ref>(result.flt<sp/>&lt;<sp/>1.0f<sp/>&amp;&amp;<sp/>result.flt<sp/>&gt;=<sp/>0.0f,<sp/>AipsError);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result.flt;</highlight></codeline>
<codeline lineno="51"><highlight class="normal">}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref><sp/><ref refid="classcasacore_1_1RNG_1a273d30f8b9e0841263d2a157314c339d" kindref="member">RNG::asDouble</ref>()<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>used<sp/>to<sp/>access<sp/>Doubles<sp/>as<sp/>two<sp/>unsigned<sp/>integers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">PrivateRNGDoubleType<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref><sp/>dbl;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacecasacore_1a5c559d8d8bf2ae7f67b439955d6be88a" kindref="member">uInt</ref><sp/>intgr[2];</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>PrivateRNGDoubleType<sp/>result;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>result.dbl<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><ref refid="namespacecasacore_1a5c559d8d8bf2ae7f67b439955d6be88a" kindref="member">uInt</ref><sp/>iMsb<sp/>=<sp/><ref refid="classcasacore_1_1RNG_1af0875fba3169114899eeedc90cec3b0a" kindref="member">asuInt</ref>()<sp/>&amp;<sp/>0xfffff;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><ref refid="namespacecasacore_1a5c559d8d8bf2ae7f67b439955d6be88a" kindref="member">uInt</ref><sp/>iLsb<sp/>=<sp/><ref refid="classcasacore_1_1RNG_1af0875fba3169114899eeedc90cec3b0a" kindref="member">asuInt</ref>();</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(AIPS_LITTLE_ENDIAN)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>result.intgr[0]<sp/>|=<sp/>iLsb;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>result.intgr[1]<sp/>|=<sp/>iMsb;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>result.intgr[1]<sp/>|=<sp/>iLsb;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>result.intgr[0]<sp/>|=<sp/>iMsb;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>result.dbl<sp/>-=<sp/>1.0;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><ref refid="Assert_8h_1a3630afed5d5376567ad23703d3676be3" kindref="member">AlwaysAssert</ref>(result.dbl<sp/>&lt;<sp/>1.0f<sp/>&amp;&amp;<sp/>result.dbl<sp/>&gt;=<sp/>0.0f,<sp/>AipsError);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result.dbl;</highlight></codeline>
<codeline lineno="74"><highlight class="normal">}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>is<sp/>an<sp/>extension<sp/>of<sp/>the<sp/>older<sp/>implementation<sp/>of<sp/>Algorithm<sp/>M</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>which<sp/>I<sp/>previously<sp/>supplied.<sp/>The<sp/>main<sp/>difference<sp/>between<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>version<sp/>and<sp/>the<sp/>old<sp/>code<sp/>are:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>Andres<sp/>searched<sp/>high<sp/>&amp;<sp/>low<sp/>for<sp/>good<sp/>constants<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>LCG.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>theres<sp/>more<sp/>bit<sp/>chopping<sp/>going<sp/>on.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>following<sp/>contains<sp/>his<sp/>comments.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>agn@UNH.CS.CMU.EDU<sp/>sez..</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>generator<sp/>below<sp/>is<sp/>based<sp/>on<sp/>2<sp/>well<sp/>known</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>methods:<sp/>Linear<sp/>Congruential<sp/>(LCGs)<sp/>and<sp/>Additive</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>Congruential<sp/>generators<sp/>(ACGs).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>LCG<sp/>produces<sp/>the<sp/>longest<sp/>possible<sp/>sequence</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>of<sp/>32<sp/>bit<sp/>random<sp/>numbers,<sp/>each<sp/>being<sp/>unique<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>that<sp/>sequence<sp/>(it<sp/>has<sp/>only<sp/>32<sp/>bits<sp/>of<sp/>state).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>It<sp/>suffers<sp/>from<sp/>2<sp/>problems:<sp/>a)<sp/>Independence</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>isnt<sp/>great,<sp/>that<sp/>is<sp/>the<sp/>(n+1)th<sp/>number<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>somewhat<sp/>related<sp/>to<sp/>the<sp/>preceding<sp/>one,<sp/>unlike</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>flipping<sp/>a<sp/>coin<sp/>where<sp/>knowing<sp/>the<sp/>past<sp/>outcomes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>dont<sp/>help<sp/>to<sp/>predict<sp/>the<sp/>next<sp/>result.<sp/><sp/>b)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>Taking<sp/>parts<sp/>of<sp/>a<sp/>LCG<sp/>generated<sp/>number<sp/>can<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>quite<sp/>non-random:<sp/>for<sp/>example,<sp/>looking<sp/>at<sp/>only</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>least<sp/>significant<sp/>byte<sp/>gives<sp/>a<sp/>permuted</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>8-bit<sp/>counter<sp/>(that<sp/>has<sp/>a<sp/>period<sp/>length<sp/>of<sp/>only</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>256).<sp/><sp/>The<sp/>advantage<sp/>of<sp/>an<sp/>LCA<sp/>is<sp/>that<sp/>it<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>perfectly<sp/>uniform<sp/>when<sp/>run<sp/>for<sp/>the<sp/>entire<sp/>period</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>length<sp/>(and<sp/>very<sp/>uniform<sp/>for<sp/>smaller<sp/>sequences</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>too,<sp/>if<sp/>the<sp/>parameters<sp/>are<sp/>chosen<sp/>carefully).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>ACGs<sp/>have<sp/>extremly<sp/>long<sp/>period<sp/>lengths<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>provide<sp/>good<sp/>independence.<sp/><sp/>Unfortunately,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>uniformity<sp/>isnt<sp/>not<sp/>too<sp/>great.<sp/>Furthermore,<sp/>I</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>didnt<sp/>find<sp/>any<sp/>theoretically<sp/>analysis<sp/>of<sp/>ACGs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>that<sp/>addresses<sp/>uniformity.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>RNG<sp/>given<sp/>below<sp/>will<sp/>return<sp/>numbers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>generated<sp/>by<sp/>an<sp/>LCA<sp/>that<sp/>are<sp/>permuted<sp/>under</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>control<sp/>of<sp/>a<sp/>ACG.<sp/>2<sp/>permutations<sp/>take<sp/>place:<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>4<sp/>bytes<sp/>of<sp/>one<sp/>LCG<sp/>generated<sp/>number<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>subjected<sp/>to<sp/>one<sp/>of<sp/>16<sp/>permutations<sp/>selected<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>4<sp/>bits<sp/>of<sp/>the<sp/>ACG.<sp/>The<sp/>permutation<sp/>a<sp/>such<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>byte<sp/>of<sp/>the<sp/>result<sp/>may<sp/>come<sp/>from<sp/>each<sp/>byte<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>LCG<sp/>number.<sp/>This<sp/>effectively<sp/>destroys<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>structure<sp/>within<sp/>a<sp/>word.<sp/>Finally,<sp/>the<sp/>sequence</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>of<sp/>such<sp/>numbers<sp/>is<sp/>permuted<sp/>within<sp/>a<sp/>range<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>256<sp/>numbers.<sp/>This<sp/>greatly<sp/>improves<sp/>independence.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Algorithm<sp/>M<sp/>as<sp/>describes<sp/>in<sp/>Knuths<sp/>&quot;Art<sp/>of<sp/>Computer<sp/>Programming&quot;,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>Vol<sp/>2.<sp/>1969</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>is<sp/>used<sp/>with<sp/>a<sp/>linear<sp/>congruential<sp/>generator<sp/>(to<sp/>get<sp/>a<sp/>good<sp/>uniform</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>distribution)<sp/>that<sp/>is<sp/>permuted<sp/>with<sp/>a<sp/>Fibonacci<sp/>additive<sp/>congruential</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>generator<sp/>to<sp/>get<sp/>good<sp/>independence.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Bit,<sp/>byte,<sp/>and<sp/>word<sp/>distributions<sp/>were<sp/>extensively<sp/>tested<sp/>and<sp/>pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Chi-squared<sp/>test<sp/>near<sp/>perfect<sp/>scores<sp/>(&gt;7E8<sp/>numbers<sp/>tested,<sp/>Uniformity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>assumption<sp/>holds<sp/>with<sp/>probability<sp/>&gt;<sp/>0.999)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Run-up<sp/>tests<sp/>for<sp/>on<sp/>7E8<sp/>numbers<sp/>confirm<sp/>independence<sp/>with</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>probability<sp/>&gt;<sp/>0.97.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Plotting<sp/>random<sp/>points<sp/>in<sp/>2d<sp/>reveals<sp/>no<sp/>apparent<sp/>structure.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Autocorrelation<sp/>on<sp/>sequences<sp/>of<sp/>5E5<sp/>numbers<sp/>(A(i)<sp/>=<sp/>SUM<sp/>X(n)*X(n-i),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>i=1..512)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>results<sp/>in<sp/>no<sp/>obvious<sp/>structure<sp/>(A(i)<sp/>~<sp/>const).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Except<sp/>for<sp/>speed<sp/>and<sp/>memory<sp/>requirements,<sp/>this<sp/>generator<sp/>outperforms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>random()<sp/>for<sp/>all<sp/>tests.<sp/>(random()<sp/>scored<sp/>rather<sp/>low<sp/>on<sp/>uniformity<sp/>tests,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>while<sp/>independence<sp/>test<sp/>differences<sp/>were<sp/>less<sp/>dramatic).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>AGN<sp/>would<sp/>like<sp/>to..</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>thanks<sp/>to<sp/>M.Mauldin,<sp/>H.Walker,<sp/>J.Saxe<sp/>and<sp/>M.Molloy<sp/>for<sp/>inspiration<sp/>&amp;<sp/>help.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>And<sp/>I<sp/>would<sp/>(DGC)<sp/>would<sp/>like<sp/>to<sp/>thank<sp/>Donald<sp/>Kunth<sp/>for<sp/>AGN<sp/>for<sp/>letting<sp/>me</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>use<sp/>his<sp/>extensions<sp/>in<sp/>this<sp/>implementation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>Part<sp/>of<sp/>the<sp/>table<sp/>on<sp/>page<sp/>28<sp/>of<sp/>Knuth,<sp/>vol<sp/>II.<sp/>This<sp/>allows<sp/>us</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>to<sp/>adjust<sp/>the<sp/>size<sp/>of<sp/>the<sp/>table<sp/>at<sp/>the<sp/>expense<sp/>of<sp/>shorter<sp/>sequences.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="namespacecasacore_1abb6e2c1bac472ca1ebadadf96cc8426f" kindref="member">Int</ref><sp/>randomStateTable[][3]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/>{3,7,16},<sp/></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>{4,9,<sp/>32},<sp/></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/>{3,10,<sp/>32},</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>{1,11,<sp/>32},<sp/></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>{1,15,64},<sp/></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/>{3,17,128},</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/>{7,18,128},<sp/></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/>{3,20,128},</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/>{2,21,<sp/>128},</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/>{1,22,<sp/>128},</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/>{5,23,<sp/>128},</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/>{3,25,<sp/>128},</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/>{2,29,<sp/>128},</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/>{3,31,<sp/>128},</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/>{13,33,<sp/>256},</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/>{2,35,<sp/>256},</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/>{11,36,<sp/>256},</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/>{14,39,256},</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/>{3,41,256},</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/>{9,49,256},</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/>{3,52,256},<sp/></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/>{24,55,256},<sp/></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/>{7,57,<sp/>256},</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/>{19,58,256},<sp/></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/>{38,89,512},</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>{17,95,512},<sp/></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/>{6,97,512},<sp/></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/>{11,98,512},<sp/></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/>{-1,-1,-1}</highlight></codeline>
<codeline lineno="192"><highlight class="normal">};</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="comment">//<sp/>spatial<sp/>permutation<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>RANDOM_PERM_SIZE<sp/>must<sp/>be<sp/>a<sp/>power<sp/>of<sp/>two</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RANDOM_PERM_SIZE<sp/>64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><ref refid="namespacecasacore_1a5c559d8d8bf2ae7f67b439955d6be88a" kindref="member">uInt</ref><sp/><ref refid="namespacecasacore_1a2a055c0c494dcf2927e1437f695062be" kindref="member">randomPermutations</ref>[<ref refid="Random_8cc_1ae054512a09c5a98f4f3a96401beaf194" kindref="member">RANDOM_PERM_SIZE</ref>]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal">0xffffffff,<sp/>0x00000000,<sp/><sp/>0x00000000,<sp/><sp/>0x00000000,<sp/><sp/></highlight><highlight class="comment">//<sp/>3210</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal">0x0000ffff,<sp/>0x00ff0000,<sp/><sp/>0x00000000,<sp/><sp/>0xff000000,<sp/><sp/></highlight><highlight class="comment">//<sp/>2310</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal">0xff0000ff,<sp/>0x0000ff00,<sp/><sp/>0x00000000,<sp/><sp/>0x00ff0000,<sp/><sp/></highlight><highlight class="comment">//<sp/>3120</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal">0x00ff00ff,<sp/>0x00000000,<sp/><sp/>0xff00ff00,<sp/><sp/>0x00000000,<sp/><sp/></highlight><highlight class="comment">//<sp/>1230</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal">0xffff0000,<sp/>0x000000ff,<sp/><sp/>0x00000000,<sp/><sp/>0x0000ff00,<sp/><sp/></highlight><highlight class="comment">//<sp/>3201</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal">0x00000000,<sp/>0x00ff00ff,<sp/><sp/>0x00000000,<sp/><sp/>0xff00ff00,<sp/><sp/></highlight><highlight class="comment">//<sp/>2301</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal">0xff000000,<sp/>0x00000000,<sp/><sp/>0x000000ff,<sp/><sp/>0x00ffff00,<sp/><sp/></highlight><highlight class="comment">//<sp/>3102</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal">0x00000000,<sp/>0x00000000,<sp/><sp/>0x00000000,<sp/><sp/>0xffffffff,<sp/><sp/></highlight><highlight class="comment">//<sp/>2103</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal">0xff00ff00,<sp/>0x00000000,<sp/><sp/>0x00ff00ff,<sp/><sp/>0x00000000,<sp/><sp/></highlight><highlight class="comment">//<sp/>3012</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal">0x0000ff00,<sp/>0x00000000,<sp/><sp/>0x00ff0000,<sp/><sp/>0xff0000ff,<sp/><sp/></highlight><highlight class="comment">//<sp/>2013</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal">0x00000000,<sp/>0x00000000,<sp/><sp/>0xffffffff,<sp/><sp/>0x00000000,<sp/><sp/></highlight><highlight class="comment">//<sp/>1032</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal">0x00000000,<sp/>0x0000ff00,<sp/><sp/>0xffff0000,<sp/><sp/>0x000000ff,<sp/><sp/></highlight><highlight class="comment">//<sp/>1023</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal">0x00000000,<sp/>0xffffffff,<sp/><sp/>0x00000000,<sp/><sp/>0x00000000,<sp/><sp/></highlight><highlight class="comment">//<sp/>0321</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal">0x00ffff00,<sp/>0xff000000,<sp/><sp/>0x00000000,<sp/><sp/>0x000000ff,<sp/><sp/></highlight><highlight class="comment">//<sp/>0213</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal">0x00000000,<sp/>0xff000000,<sp/><sp/>0x0000ffff,<sp/><sp/>0x00ff0000,<sp/><sp/></highlight><highlight class="comment">//<sp/>0132</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal">0x00000000,<sp/>0xff00ff00,<sp/><sp/>0x00000000,<sp/><sp/>0x00ff00ff<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>0123</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal">};</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>SEED_TABLE_SIZE<sp/>must<sp/>be<sp/>a<sp/>power<sp/>of<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SEED_TABLE_SIZE<sp/>32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="namespacecasacore_1a5c559d8d8bf2ae7f67b439955d6be88a" kindref="member">uInt</ref><sp/>seedTable[<ref refid="Random_8cc_1a4685a2bfb7ca9037547ec96982b8ccd0" kindref="member">SEED_TABLE_SIZE</ref>]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/>0xbdcc47e5,<sp/>0x54aea45d,<sp/>0xec0df859,<sp/>0xda84637b,</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/>0xc8c6cb4f,<sp/>0x35574b01,<sp/>0x28260b7d,<sp/>0x0d07fdbf,</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/>0x9faaeeb0,<sp/>0x613dd169,<sp/>0x5ce2d818,<sp/>0x85b9e706,</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/>0xab2469db,<sp/>0xda02b0dc,<sp/>0x45c60d6e,<sp/>0xffe49d10,</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/>0x7224fea3,<sp/>0xf9684fc9,<sp/>0xfc7ee074,<sp/>0x326ce92a,</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/>0x366d13b5,<sp/>0x17aaa731,<sp/>0xeb83a675,<sp/>0x7781cb32,</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/>0x4ec7c92d,<sp/>0x7f187521,<sp/>0x2cf346b4,<sp/>0xad13310f,</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/>0xb89cff2b,<sp/>0x12164de1,<sp/>0xa865168d,<sp/>0x32b56cdf</highlight></codeline>
<codeline lineno="230"><highlight class="normal">};</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>LCG<sp/>used<sp/>to<sp/>scramble<sp/>the<sp/>ACG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LC-parameter<sp/>selection<sp/>follows<sp/>recommendations<sp/>in<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&quot;Handbook<sp/>of<sp/>Mathematical<sp/>Functions&quot;<sp/>by<sp/>Abramowitz<sp/>&amp;<sp/>Stegun<sp/>10th,<sp/>edi.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LC_A<sp/>=<sp/>251^2,<sp/>~=<sp/>sqrt(2^32)<sp/>=<sp/>66049</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LC_C<sp/>=<sp/>result<sp/>of<sp/>a<sp/>long<sp/>trial<sp/>&amp;<sp/>error<sp/>series<sp/>=<sp/>3907864577</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacecasacore_1a5c559d8d8bf2ae7f67b439955d6be88a" kindref="member">uInt</ref><sp/>LC_A<sp/>=<sp/>66049;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacecasacore_1a5c559d8d8bf2ae7f67b439955d6be88a" kindref="member">uInt</ref><sp/>LC_C<sp/>=<sp/>3907864577u;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="namespacecasacore_1a5c559d8d8bf2ae7f67b439955d6be88a" kindref="member">uInt</ref><sp/>LCG(<ref refid="namespacecasacore_1a5c559d8d8bf2ae7f67b439955d6be88a" kindref="member">uInt</ref><sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x<sp/>*<sp/>LC_A<sp/>+<sp/>LC_C;</highlight></codeline>
<codeline lineno="243"><highlight class="normal">}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><ref refid="classcasacore_1_1ACG_1a7b614a85d99624e8dbca9f6aee5fa7cb" kindref="member">ACG::ACG</ref>(<ref refid="namespacecasacore_1a5c559d8d8bf2ae7f67b439955d6be88a" kindref="member">uInt</ref><sp/>seed,<sp/><ref refid="namespacecasacore_1abb6e2c1bac472ca1ebadadf96cc8426f" kindref="member">Int</ref><sp/>size)<sp/></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/>:itsInitSeed(seed),</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/>itsInitTblEntry(0),</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/>itsStatePtr(0),</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/>itsAuxStatePtr(0),</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/>itsStateSize(0),</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/>itsAuxSize(0),</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/>lcgRecurr(0),</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/>itsJ(0),</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/>itsK(0)</highlight></codeline>
<codeline lineno="255"><highlight class="normal">{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>Determine<sp/>the<sp/>size<sp/>of<sp/>the<sp/>state<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><ref refid="namespacecasacore_1abb6e2c1bac472ca1ebadadf96cc8426f" kindref="member">Int</ref><sp/>l;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(l<sp/>=<sp/>0;<sp/></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>randomStateTable[l][0]<sp/>!=<sp/>-1<sp/>&amp;&amp;<sp/>randomStateTable[l][1]<sp/>&lt;<sp/>size;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>l++)<sp/>{}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(randomStateTable[l][1]<sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>l--;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/>itsInitTblEntry<sp/>=<sp/>l;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/>itsStateSize<sp/>=<sp/>randomStateTable[<sp/>itsInitTblEntry<sp/>][<sp/>1<sp/>];</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/>itsAuxSize<sp/>=<sp/>randomStateTable[<sp/>itsInitTblEntry<sp/>][<sp/>2<sp/>];</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>Allocate<sp/>the<sp/>state<sp/>table<sp/>&amp;<sp/>the<sp/>auxillary<sp/>table<sp/>in<sp/>a<sp/>single<sp/>malloc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/>itsStatePtr<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="namespacecasacore_1a5c559d8d8bf2ae7f67b439955d6be88a" kindref="member">uInt</ref>[itsStateSize<sp/>+<sp/>itsAuxSize];</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><ref refid="Assert_8h_1a3630afed5d5376567ad23703d3676be3" kindref="member">AlwaysAssert</ref>(itsStatePtr<sp/>!=<sp/>0,<sp/>AipsError);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/>itsAuxStatePtr<sp/>=<sp/>&amp;itsStatePtr[itsStateSize];</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/>reset();</highlight></codeline>
<codeline lineno="276"><highlight class="normal">}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ACG::reset()<sp/>{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><ref refid="namespacecasacore_1a5c559d8d8bf2ae7f67b439955d6be88a" kindref="member">uInt</ref><sp/>u;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(itsInitSeed<sp/>&lt;<sp/><ref refid="Random_8cc_1a4685a2bfb7ca9037547ec96982b8ccd0" kindref="member">SEED_TABLE_SIZE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>u<sp/>=<sp/>seedTable[<sp/>itsInitSeed<sp/>];</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>u<sp/>=<sp/>itsInitSeed<sp/>^<sp/>seedTable[<sp/>itsInitSeed<sp/>&amp;<sp/>(<ref refid="Random_8cc_1a4685a2bfb7ca9037547ec96982b8ccd0" kindref="member">SEED_TABLE_SIZE</ref>-1)<sp/>];</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/>itsJ<sp/>=<sp/>randomStateTable[<sp/>itsInitTblEntry<sp/>][<sp/>0<sp/>]<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/>itsK<sp/>=<sp/>randomStateTable[<sp/>itsInitTblEntry<sp/>][<sp/>1<sp/>]<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="namespacecasacore_1abb6e2c1bac472ca1ebadadf96cc8426f" kindref="member">Int</ref><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>itsStateSize;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>itsStatePtr[i]<sp/>=<sp/>u<sp/>=<sp/>LCG(u);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="namespacecasacore_1abb6e2c1bac472ca1ebadadf96cc8426f" kindref="member">Int</ref><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>itsAuxSize;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>itsAuxStatePtr[i]<sp/>=<sp/>u<sp/>=<sp/>LCG(u);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>rid<sp/>of<sp/>compiler<sp/>warning<sp/>-<sp/>hopefully<sp/>the<sp/>authors<sp/>of<sp/>this<sp/>class<sp/>knew</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>what<sp/>they<sp/>were<sp/>doing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/>itsK<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="namespacecasacore_1a53f2a3afd42e85d94a0a009052a442a6" kindref="member">Short</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(u<sp/>%<sp/>itsStateSize);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><ref refid="namespacecasacore_1abb6e2c1bac472ca1ebadadf96cc8426f" kindref="member">Int</ref><sp/>tailBehind<sp/>=<sp/>(itsStateSize<sp/>-<sp/>randomStateTable[<sp/>itsInitTblEntry<sp/>][<sp/>0<sp/>]);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/>itsJ<sp/>=<sp/>itsK<sp/>-<sp/>tailBehind;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(itsJ<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>itsJ<sp/>+=<sp/>itsStateSize;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/>lcgRecurr<sp/>=<sp/>u;</highlight></codeline>
<codeline lineno="306"><highlight class="normal">}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal">ACG::~ACG()<sp/>{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>itsStatePtr;<sp/></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>delete<sp/>itsAuxStatePtr,<sp/>it&apos;s<sp/>really<sp/>an<sp/>alias<sp/>for<sp/>itsStatePtr.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/>itsAuxStatePtr<sp/>=<sp/>itsStatePtr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="312"><highlight class="normal">}</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><ref refid="namespacecasacore_1a5c559d8d8bf2ae7f67b439955d6be88a" kindref="member">uInt</ref><sp/>ACG::asuInt()</highlight></codeline>
<codeline lineno="315"><highlight class="normal">{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><ref refid="namespacecasacore_1a5c559d8d8bf2ae7f67b439955d6be88a" kindref="member">uInt</ref><sp/>result<sp/>=<sp/>itsStatePtr[itsK]<sp/>+<sp/>itsStatePtr[itsJ];</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/>itsStatePtr[itsK]<sp/>=<sp/>result;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/>itsJ<sp/>=<sp/>(itsJ<sp/>&lt;=<sp/>0)<sp/>?<sp/>(itsStateSize-1)<sp/>:<sp/>(itsJ-1);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/>itsK<sp/>=<sp/>(itsK<sp/>&lt;=<sp/>0)<sp/>?<sp/>(itsStateSize-1)<sp/>:<sp/>(itsK-1);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>rid<sp/>of<sp/>compiler<sp/>warning<sp/>-<sp/>hopefully<sp/>the<sp/>authors<sp/>of<sp/>this<sp/>class<sp/>knew</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>what<sp/>they<sp/>were<sp/>doing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><ref refid="namespacecasacore_1a53f2a3afd42e85d94a0a009052a442a6" kindref="member">Short</ref><sp/>auxIndex<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="namespacecasacore_1a53f2a3afd42e85d94a0a009052a442a6" kindref="member">Short</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">((result<sp/>&gt;&gt;<sp/>24)<sp/>&amp;<sp/>(itsAuxSize<sp/>-<sp/>1));</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><ref refid="namespacecasacore_1a5c559d8d8bf2ae7f67b439955d6be88a" kindref="member">uInt</ref><sp/>auxACG<sp/>=<sp/>itsAuxStatePtr[auxIndex];</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/>itsAuxStatePtr[auxIndex]<sp/>=<sp/>lcgRecurr<sp/>=<sp/>LCG(lcgRecurr);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>3c<sp/>is<sp/>a<sp/>magic<sp/>number.<sp/>We<sp/>are<sp/>doing<sp/>four<sp/>masks<sp/>here,<sp/>so<sp/>we</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>do<sp/>not<sp/>want<sp/>to<sp/>run<sp/>off<sp/>the<sp/>end<sp/>of<sp/>the<sp/>permutation<sp/>table.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>insures<sp/>that<sp/>we<sp/>have<sp/>always<sp/>got<sp/>four<sp/>entries<sp/>left.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><ref refid="namespacecasacore_1a5c559d8d8bf2ae7f67b439955d6be88a" kindref="member">uInt</ref>*<sp/>perm<sp/>=<sp/>&amp;<ref refid="namespacecasacore_1a2a055c0c494dcf2927e1437f695062be" kindref="member">randomPermutations</ref>[result<sp/>&amp;<sp/>0x3c];</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/>result<sp/>=<sp/><sp/>*(perm++)<sp/>&amp;<sp/>auxACG;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/>result<sp/>|=<sp/>*(perm++)<sp/>&amp;<sp/>((auxACG<sp/>&lt;&lt;<sp/>24)</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>((auxACG<sp/>&gt;&gt;<sp/>8)<sp/><sp/>&amp;<sp/>0xffffff));</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/>result<sp/>|=<sp/>*(perm++)<sp/>&amp;<sp/>((auxACG<sp/>&lt;&lt;<sp/>16)</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>((auxACG<sp/>&gt;&gt;<sp/>16)<sp/>&amp;<sp/>0xffff));</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/>result<sp/>|=<sp/>*(perm++)<sp/>&amp;<sp/>((auxACG<sp/>&lt;&lt;<sp/><sp/>8)</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>((auxACG<sp/>&gt;&gt;<sp/>24)<sp/>&amp;<sp/><sp/><sp/>0xff));</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="339"><highlight class="normal">}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal">MLCG::MLCG(<ref refid="namespacecasacore_1abb6e2c1bac472ca1ebadadf96cc8426f" kindref="member">Int</ref><sp/>seed1,<sp/><ref refid="namespacecasacore_1abb6e2c1bac472ca1ebadadf96cc8426f" kindref="member">Int</ref><sp/>seed2):</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/>itsInitSeedOne(seed1),</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/>itsInitSeedTwo(seed2)</highlight></codeline>
<codeline lineno="344"><highlight class="normal">{</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/>reset();</highlight></codeline>
<codeline lineno="346"><highlight class="normal">}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal">MLCG::~MLCG()<sp/>{</highlight></codeline>
<codeline lineno="349"><highlight class="normal">}</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MLCG::reset()<sp/>{</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><ref refid="namespacecasacore_1abb6e2c1bac472ca1ebadadf96cc8426f" kindref="member">Int</ref><sp/>seed1<sp/>=<sp/>itsInitSeedOne;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><ref refid="namespacecasacore_1abb6e2c1bac472ca1ebadadf96cc8426f" kindref="member">Int</ref><sp/>seed2<sp/>=<sp/>itsInitSeedTwo;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>Most<sp/>people<sp/>pick<sp/>stupid<sp/>seed<sp/>numbers<sp/>that<sp/>do<sp/>not<sp/>have<sp/>enough</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>bits.<sp/>In<sp/>this<sp/>case,<sp/>if<sp/>they<sp/>pick<sp/>a<sp/>small<sp/>seed<sp/>number,<sp/>we</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>map<sp/>that<sp/>to<sp/>a<sp/>specific<sp/>seed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(seed1<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>seed1<sp/>=<sp/>(seed1<sp/>+<sp/>2147483561);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>seed1<sp/>=<sp/>(seed1<sp/>&lt;<sp/>0)<sp/>?<sp/>-seed1<sp/>:<sp/>seed1;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(seed2<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>seed2<sp/>=<sp/>(seed2<sp/>+<sp/>2147483561);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>seed2<sp/>=<sp/>(seed2<sp/>&lt;<sp/>0)<sp/>?<sp/>-seed2<sp/>:<sp/>seed2;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(seed1<sp/>&gt;<sp/>-1<sp/>&amp;&amp;<sp/>seed1<sp/>&lt;<sp/><ref refid="Random_8cc_1a4685a2bfb7ca9037547ec96982b8ccd0" kindref="member">SEED_TABLE_SIZE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>itsSeedOne<sp/>=<sp/>seedTable[seed1];</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/>itsSeedOne<sp/>=<sp/>seed1<sp/>^<sp/>seedTable[seed1<sp/>&amp;<sp/>(<ref refid="Random_8cc_1a4685a2bfb7ca9037547ec96982b8ccd0" kindref="member">SEED_TABLE_SIZE</ref>-1)];</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(seed2<sp/>&gt;<sp/>-1<sp/>&amp;&amp;<sp/>seed2<sp/>&lt;<sp/><ref refid="Random_8cc_1a4685a2bfb7ca9037547ec96982b8ccd0" kindref="member">SEED_TABLE_SIZE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>itsSeedTwo<sp/>=<sp/>seedTable[seed2];</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>itsSeedTwo<sp/>=<sp/>seed2<sp/>^<sp/>seedTable[<sp/>seed2<sp/>&amp;<sp/>(<ref refid="Random_8cc_1a4685a2bfb7ca9037547ec96982b8ccd0" kindref="member">SEED_TABLE_SIZE</ref>-1)<sp/>];</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/>itsSeedOne<sp/>=<sp/>(itsSeedOne<sp/>%<sp/>2147483561)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/>itsSeedTwo<sp/>=<sp/>(itsSeedTwo<sp/>%<sp/>2147483397)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="381"><highlight class="normal">}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><ref refid="namespacecasacore_1a5c559d8d8bf2ae7f67b439955d6be88a" kindref="member">uInt</ref><sp/>MLCG::asuInt()</highlight></codeline>
<codeline lineno="384"><highlight class="normal">{</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><ref refid="namespacecasacore_1abb6e2c1bac472ca1ebadadf96cc8426f" kindref="member">Int</ref><sp/>k<sp/>=<sp/>itsSeedOne<sp/>%<sp/>53668;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/>itsSeedOne<sp/>=<sp/>40014<sp/>*<sp/>(itsSeedOne-k<sp/>*<sp/>53668)<sp/>-<sp/>k<sp/>*<sp/>12211;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(itsSeedOne<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/>itsSeedOne<sp/>+=<sp/>2147483563;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/>k<sp/>=<sp/>itsSeedTwo<sp/>%<sp/>52774;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/>itsSeedTwo<sp/>=<sp/>40692<sp/>*<sp/>(itsSeedTwo<sp/>-<sp/>k<sp/>*<sp/>52774)<sp/>-<sp/>k<sp/>*<sp/>3791;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(itsSeedTwo<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/>itsSeedTwo<sp/>+=<sp/>2147483399;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><ref refid="namespacecasacore_1abb6e2c1bac472ca1ebadadf96cc8426f" kindref="member">Int</ref><sp/>z<sp/>=<sp/>itsSeedOne<sp/>-<sp/>itsSeedTwo;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(z<sp/>&lt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>z<sp/>+=<sp/>2147483562;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="namespacecasacore_1a5c559d8d8bf2ae7f67b439955d6be88a" kindref="member">uInt</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(z);</highlight></codeline>
<codeline lineno="403"><highlight class="normal">}</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal">Random::~Random()<sp/>{</highlight></codeline>
<codeline lineno="406"><highlight class="normal">}</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal">String<sp/>Random::asString(Random::Types<sp/>type)<sp/>{</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(type)<sp/>{</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>BINOMIAL:</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>String(</highlight><highlight class="stringliteral">&quot;BINOMIAL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>DISCRETEUNIFORM:</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>String(</highlight><highlight class="stringliteral">&quot;DISCRETEUNIFORM&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ERLANG:</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>String(</highlight><highlight class="stringliteral">&quot;ERLANG&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GEOMETRIC:</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>String(</highlight><highlight class="stringliteral">&quot;GEOMETRIC&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>HYPERGEOMETRIC:</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>String(</highlight><highlight class="stringliteral">&quot;HYPERGEOMETRIC&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>NORMAL:</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>String(</highlight><highlight class="stringliteral">&quot;NORMAL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>LOGNORMAL:</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>String(</highlight><highlight class="stringliteral">&quot;LOGNORMAL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>NEGATIVEEXPONENTIAL:</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>String(</highlight><highlight class="stringliteral">&quot;NEGATIVEEXPONENTIAL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>POISSON:</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>String(</highlight><highlight class="stringliteral">&quot;POISSON&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>UNIFORM:</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>String(</highlight><highlight class="stringliteral">&quot;UNIFORM&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WEIBULL:</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>String(</highlight><highlight class="stringliteral">&quot;WEIBULL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>UNKNOWN:</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>String(</highlight><highlight class="stringliteral">&quot;UNKNOWN&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>NUMBER_TYPES:<sp/></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">(AipsError(</highlight><highlight class="stringliteral">&quot;NUMBER_TYPES<sp/>has<sp/>no<sp/>string<sp/>equivalent&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">(AipsError(</highlight><highlight class="stringliteral">&quot;Unknown<sp/>Random::Types<sp/>enumerator&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="439"><highlight class="normal">}</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal">Random::Types<sp/>Random::asType(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>String&amp;<sp/>str)<sp/>{</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/>String<sp/>canonicalCase(str);</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/>canonicalCase.upcase();</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/>Random::Types<sp/>t;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/>String<sp/>s2;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="namespacecasacore_1a5c559d8d8bf2ae7f67b439955d6be88a" kindref="member">uInt</ref><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>NUMBER_TYPES;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">Random::Types</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(i);</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/>s2<sp/>=<sp/>Random::asString(t);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s2.matches(canonicalCase))<sp/>{</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>t;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Random::UNKNOWN;</highlight></codeline>
<codeline lineno="454"><highlight class="normal">}</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal">Random*<sp/>Random::construct(Random::Types<sp/>type,<sp/>RNG*<sp/>gen)<sp/>{</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(type)<sp/>{</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>BINOMIAL:</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Binomial(gen);</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>DISCRETEUNIFORM:</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>DiscreteUniform(gen);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>ERLANG:</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Erlang(gen);</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GEOMETRIC:</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Geometric(gen);</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>HYPERGEOMETRIC:</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>HyperGeometric(gen);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>NORMAL:</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Normal(gen);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>LOGNORMAL:</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>LogNormal(gen);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>NEGATIVEEXPONENTIAL:</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>NegativeExpntl(gen);</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>POISSON:</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Poisson(gen);</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>UNIFORM:</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Uniform(gen);</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WEIBULL:</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Weibull(gen);</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>UNKNOWN:</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>NUMBER_TYPES:</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="485"><highlight class="normal">}</highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal">Vector&lt;Double&gt;<sp/>Random::defaultParameters<sp/>(Random::Types<sp/>type)<sp/>{</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/>MLCG<sp/>gen;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::unique_ptr&lt;Random&gt;<sp/>ranPtr(construct(type,<sp/>&amp;gen));</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ranPtr)<sp/>{</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Vector&lt;Double&gt;();</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ranPtr-&gt;parameters();</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="495"><highlight class="normal">}</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal">Binomial::~Binomial()<sp/>{</highlight></codeline>
<codeline lineno="498"><highlight class="normal">}</highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal">Binomial::Binomial(RNG*<sp/>gen,<sp/><ref refid="namespacecasacore_1a5c559d8d8bf2ae7f67b439955d6be88a" kindref="member">uInt</ref><sp/>n,<sp/><ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref><sp/>p)</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/>:Random(gen),</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/>itsN(n),</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/>itsP(p)</highlight></codeline>
<codeline lineno="504"><highlight class="normal">{</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><ref refid="Assert_8h_1a3630afed5d5376567ad23703d3676be3" kindref="member">AlwaysAssert</ref>(<sp/>p<sp/>&gt;=<sp/>0.0<sp/>&amp;&amp;<sp/>p<sp/>&lt;=<sp/>1.0<sp/>&amp;&amp;<sp/>n<sp/>&gt;<sp/>0,<sp/>AipsError);</highlight></codeline>
<codeline lineno="506"><highlight class="normal">}</highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref><sp/>Binomial::operator()()<sp/>{</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(asInt());</highlight></codeline>
<codeline lineno="510"><highlight class="normal">}</highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><ref refid="namespacecasacore_1a5c559d8d8bf2ae7f67b439955d6be88a" kindref="member">uInt</ref><sp/>Binomial::asInt()<sp/>{</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><ref refid="namespacecasacore_1a5c559d8d8bf2ae7f67b439955d6be88a" kindref="member">uInt</ref><sp/>result<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="namespacecasacore_1a5c559d8d8bf2ae7f67b439955d6be88a" kindref="member">uInt</ref><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>itsN;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(itsRNG-&gt;asDouble()<sp/>&lt;<sp/>itsP)<sp/>{</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result++;</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="520"><highlight class="normal">}</highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Binomial::n(<ref refid="namespacecasacore_1a5c559d8d8bf2ae7f67b439955d6be88a" kindref="member">uInt</ref><sp/>newN)<sp/>{</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><ref refid="Assert_8h_1a3630afed5d5376567ad23703d3676be3" kindref="member">AlwaysAssert</ref>(newN<sp/>&gt;<sp/>0,<sp/>AipsError);</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/>itsN<sp/>=<sp/>newN;</highlight></codeline>
<codeline lineno="525"><highlight class="normal">}</highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Binomial::n(<ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref><sp/>newN)<sp/>{</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><ref refid="Assert_8h_1a3630afed5d5376567ad23703d3676be3" kindref="member">AlwaysAssert</ref>(newN<sp/>&gt;=<sp/>0.5,<sp/>AipsError);</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/>n(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="namespacecasacore_1a5c559d8d8bf2ae7f67b439955d6be88a" kindref="member">uInt</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(newN));</highlight></codeline>
<codeline lineno="530"><highlight class="normal">}</highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Binomial::p(<ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref><sp/>newP)<sp/>{</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><ref refid="Assert_8h_1a3630afed5d5376567ad23703d3676be3" kindref="member">AlwaysAssert</ref>(newP<sp/>&gt;=<sp/>0.0<sp/>&amp;&amp;<sp/>newP<sp/>&lt;=<sp/>1.0,<sp/>AipsError);</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/>itsP<sp/>=<sp/>newP;</highlight></codeline>
<codeline lineno="535"><highlight class="normal">}</highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Binomial::setParameters(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&lt;Double&gt;&amp;<sp/>pars)<sp/>{</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><ref refid="Assert_8h_1a3630afed5d5376567ad23703d3676be3" kindref="member">AlwaysAssert</ref>(checkParameters(pars),<sp/>AipsError);</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/>n(pars(0));</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/>p(pars(1));</highlight></codeline>
<codeline lineno="541"><highlight class="normal">}</highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal">Vector&lt;Double&gt;<sp/>Binomial::parameters()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/>Vector&lt;Double&gt;<sp/>retVal(2);</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/>retVal(0)<sp/>=<sp/>n();</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/>retVal(1)<sp/>=<sp/>p();</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>retVal;</highlight></codeline>
<codeline lineno="548"><highlight class="normal">}</highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><ref refid="namespacecasacore_1abd5691f9e13acc90d901e4007740ff98" kindref="member">Bool</ref><sp/>Binomial::checkParameters(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&lt;Double&gt;&amp;<sp/>pars)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pars.nelements()<sp/>==<sp/>2<sp/>&amp;&amp;<sp/></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/>pars(0)<sp/>&gt;=<sp/>0.5<sp/>&amp;&amp;<sp/></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/>pars(1)<sp/>&gt;=<sp/>0.0<sp/>&amp;&amp;<sp/>pars(1)<sp/>&lt;=<sp/>1.0;</highlight></codeline>
<codeline lineno="554"><highlight class="normal">}</highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal">DiscreteUniform::DiscreteUniform(RNG*<sp/>gen,<sp/><ref refid="namespacecasacore_1abb6e2c1bac472ca1ebadadf96cc8426f" kindref="member">Int</ref><sp/>low,<sp/><ref refid="namespacecasacore_1abb6e2c1bac472ca1ebadadf96cc8426f" kindref="member">Int</ref><sp/>high)</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/>:Random(gen),</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/>itsLow(low),</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/>itsHigh(high),</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/>itsDelta(calcDelta(itsLow,<sp/>itsHigh))</highlight></codeline>
<codeline lineno="561"><highlight class="normal">{</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><ref refid="Assert_8h_1a3630afed5d5376567ad23703d3676be3" kindref="member">AlwaysAssert</ref>(itsLow<sp/>&lt;=<sp/>itsHigh,<sp/>AipsError);</highlight></codeline>
<codeline lineno="563"><highlight class="normal">}</highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal">DiscreteUniform::~DiscreteUniform()<sp/>{</highlight></codeline>
<codeline lineno="566"><highlight class="normal">}</highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref><sp/>DiscreteUniform::operator()()<sp/>{</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(asInt());</highlight></codeline>
<codeline lineno="570"><highlight class="normal">}</highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><ref refid="namespacecasacore_1abb6e2c1bac472ca1ebadadf96cc8426f" kindref="member">Int</ref><sp/>DiscreteUniform::asInt()<sp/>{</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>itsLow<sp/>+<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="namespacecasacore_1abb6e2c1bac472ca1ebadadf96cc8426f" kindref="member">Int</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="namespacecasacore_1aa1012d41fa360fd916f47e006d8fb93b" kindref="member">std::floor</ref>(itsDelta<sp/>*<sp/>itsRNG-&gt;asDouble()));</highlight></codeline>
<codeline lineno="574"><highlight class="normal">}</highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DiscreteUniform::low(<ref refid="namespacecasacore_1abb6e2c1bac472ca1ebadadf96cc8426f" kindref="member">Int</ref><sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><ref refid="Assert_8h_1a3630afed5d5376567ad23703d3676be3" kindref="member">AlwaysAssert</ref>(x<sp/>&lt;=<sp/>itsHigh,<sp/>AipsError);</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/>itsLow<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/>itsDelta<sp/>=<sp/>calcDelta(itsLow,<sp/>itsHigh);</highlight></codeline>
<codeline lineno="580"><highlight class="normal">}</highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DiscreteUniform::high(<ref refid="namespacecasacore_1abb6e2c1bac472ca1ebadadf96cc8426f" kindref="member">Int</ref><sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><ref refid="Assert_8h_1a3630afed5d5376567ad23703d3676be3" kindref="member">AlwaysAssert</ref>(itsLow<sp/>&lt;=<sp/>x,<sp/>AipsError);</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/>itsHigh<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/>itsDelta<sp/>=<sp/>calcDelta(itsLow,<sp/>itsHigh);</highlight></codeline>
<codeline lineno="586"><highlight class="normal">}</highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DiscreteUniform::range(<ref refid="namespacecasacore_1abb6e2c1bac472ca1ebadadf96cc8426f" kindref="member">Int</ref><sp/>low,<sp/><ref refid="namespacecasacore_1abb6e2c1bac472ca1ebadadf96cc8426f" kindref="member">Int</ref><sp/>high)<sp/>{</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><ref refid="Assert_8h_1a3630afed5d5376567ad23703d3676be3" kindref="member">AlwaysAssert</ref>(low<sp/>&lt;=<sp/>high,<sp/>AipsError);</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/>itsLow<sp/>=<sp/>low;</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/>itsHigh<sp/>=<sp/>high;</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/>itsDelta<sp/>=<sp/>calcDelta(itsLow,<sp/>itsHigh);</highlight></codeline>
<codeline lineno="593"><highlight class="normal">}</highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DiscreteUniform::setParameters(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&lt;Double&gt;&amp;<sp/>pars)<sp/>{</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><ref refid="Assert_8h_1a3630afed5d5376567ad23703d3676be3" kindref="member">AlwaysAssert</ref>(checkParameters(pars),<sp/>AipsError);</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/>range(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="namespacecasacore_1abb6e2c1bac472ca1ebadadf96cc8426f" kindref="member">Int</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pars(0)),<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="namespacecasacore_1abb6e2c1bac472ca1ebadadf96cc8426f" kindref="member">Int</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pars(1)));</highlight></codeline>
<codeline lineno="598"><highlight class="normal">}</highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal">Vector&lt;Double&gt;<sp/>DiscreteUniform::parameters()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/>Vector&lt;Double&gt;<sp/>retVal(2);</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/>retVal(0)<sp/>=<sp/>low();</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/>retVal(1)<sp/>=<sp/>high();</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>retVal;</highlight></codeline>
<codeline lineno="605"><highlight class="normal">}</highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"><ref refid="namespacecasacore_1abd5691f9e13acc90d901e4007740ff98" kindref="member">Bool</ref><sp/>DiscreteUniform::checkParameters(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&lt;Double&gt;&amp;<sp/>pars)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pars.nelements()<sp/>==<sp/>2<sp/>&amp;&amp;<sp/>pars(0)<sp/>&lt;=<sp/>pars(1);</highlight></codeline>
<codeline lineno="609"><highlight class="normal">}</highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"><ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref><sp/>DiscreteUniform::calcDelta(<ref refid="namespacecasacore_1abb6e2c1bac472ca1ebadadf96cc8426f" kindref="member">Int</ref><sp/>low,<sp/><ref refid="namespacecasacore_1abb6e2c1bac472ca1ebadadf96cc8426f" kindref="member">Int</ref><sp/>high)<sp/>{</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">((high<sp/>-<sp/>low)<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="613"><highlight class="normal">}</highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal">Erlang::~Erlang()<sp/>{</highlight></codeline>
<codeline lineno="616"><highlight class="normal">}</highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Erlang::setState()<sp/>{</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><ref refid="Assert_8h_1a3630afed5d5376567ad23703d3676be3" kindref="member">AlwaysAssert</ref>(!<ref refid="namespacecasacore_1a541672c0365ea093e63238bc34b4e175" kindref="member">nearAbs</ref>(itsMean,<sp/>0.0),<sp/>AipsError);</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><ref refid="Assert_8h_1a3630afed5d5376567ad23703d3676be3" kindref="member">AlwaysAssert</ref>(itsVariance<sp/>&gt;<sp/>0,<sp/>AipsError);</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/>itsK<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="namespacecasacore_1abb6e2c1bac472ca1ebadadf96cc8426f" kindref="member">Int</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">((itsMean<sp/>*<sp/>itsMean<sp/>)<sp/>/<sp/>itsVariance<sp/>+<sp/>0.5<sp/>);</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/>itsK<sp/>=<sp/>(itsK<sp/>&gt;<sp/>0)<sp/>?<sp/>itsK<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/>itsA<sp/>=<sp/>itsK<sp/>/<sp/>itsMean;</highlight></codeline>
<codeline lineno="624"><highlight class="normal">}</highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref><sp/>Erlang::operator()()<sp/>{</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref><sp/>prod<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="namespacecasacore_1abb6e2c1bac472ca1ebadadf96cc8426f" kindref="member">Int</ref><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>itsK;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/>prod<sp/>*=<sp/>itsRNG-&gt;asDouble();</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-<ref refid="namespacecasacore_1a166a5aef3b512cfe046a53c0cccea66b" kindref="member">log</ref>(prod)/itsA;</highlight></codeline>
<codeline lineno="632"><highlight class="normal">}</highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Erlang::setParameters(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&lt;Double&gt;&amp;<sp/>pars)<sp/>{</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><ref refid="Assert_8h_1a3630afed5d5376567ad23703d3676be3" kindref="member">AlwaysAssert</ref>(checkParameters(pars),<sp/>AipsError);</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><ref refid="namespacecasacore_1a2e26b614348e1bd5bb067d8f136257cb" kindref="member">mean</ref>(pars(0));</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><ref refid="namespacecasacore_1afff21c193856c2f80da90f58266d5812" kindref="member">variance</ref>(pars(1));</highlight></codeline>
<codeline lineno="638"><highlight class="normal">}</highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal">Vector&lt;Double&gt;<sp/>Erlang::parameters()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/>Vector&lt;Double&gt;<sp/>retVal(2);</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/>retVal(0)<sp/>=<sp/><ref refid="namespacecasacore_1a2e26b614348e1bd5bb067d8f136257cb" kindref="member">mean</ref>();</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/>retVal(1)<sp/>=<sp/><ref refid="namespacecasacore_1afff21c193856c2f80da90f58266d5812" kindref="member">variance</ref>();</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>retVal;</highlight></codeline>
<codeline lineno="645"><highlight class="normal">}</highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"><ref refid="namespacecasacore_1abd5691f9e13acc90d901e4007740ff98" kindref="member">Bool</ref><sp/>Erlang::checkParameters(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&lt;Double&gt;&amp;<sp/>pars)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pars.nelements()<sp/>==<sp/>2<sp/>&amp;&amp;<sp/></highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/>!<ref refid="namespacecasacore_1a541672c0365ea093e63238bc34b4e175" kindref="member">nearAbs</ref>(pars(0),<sp/>0.0)<sp/>&amp;&amp;<sp/></highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/>pars(1)<sp/>&gt;<sp/>0.0;</highlight></codeline>
<codeline lineno="651"><highlight class="normal">}</highlight></codeline>
<codeline lineno="652"><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal">Geometric::Geometric(RNG*<sp/>gen,<sp/><ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref><sp/>probability)<sp/></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/>:Random(gen),</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/>itsProbability(probability)</highlight></codeline>
<codeline lineno="656"><highlight class="normal">{</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><ref refid="Assert_8h_1a3630afed5d5376567ad23703d3676be3" kindref="member">AlwaysAssert</ref>(itsProbability<sp/>&gt;=<sp/>0.0<sp/>&amp;&amp;<sp/>itsProbability<sp/>&lt;<sp/>1.0,<sp/>AipsError);</highlight></codeline>
<codeline lineno="658"><highlight class="normal">}</highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal">Geometric::~Geometric()<sp/>{</highlight></codeline>
<codeline lineno="661"><highlight class="normal">}</highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"><ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref><sp/>Geometric::operator()()<sp/>{</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(asInt());</highlight></codeline>
<codeline lineno="665"><highlight class="normal">}</highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"><ref refid="namespacecasacore_1a5c559d8d8bf2ae7f67b439955d6be88a" kindref="member">uInt</ref><sp/>Geometric::asInt()<sp/>{</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><ref refid="namespacecasacore_1a5c559d8d8bf2ae7f67b439955d6be88a" kindref="member">uInt</ref><sp/>samples;</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(samples<sp/>=<sp/>0;<sp/>itsRNG-&gt;asDouble()<sp/>&gt;<sp/>itsProbability;<sp/>samples++)<sp/>{}</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>samples;</highlight></codeline>
<codeline lineno="671"><highlight class="normal">}</highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Geometric::probability(<ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref><sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/>itsProbability<sp/>=<sp/>x;<sp/></highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><ref refid="Assert_8h_1a3630afed5d5376567ad23703d3676be3" kindref="member">AlwaysAssert</ref>(itsProbability<sp/>&gt;=<sp/>0.0<sp/>&amp;&amp;<sp/>itsProbability<sp/>&lt;<sp/>1.0,<sp/>AipsError);</highlight></codeline>
<codeline lineno="676"><highlight class="normal">}</highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Geometric::setParameters(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&lt;Double&gt;&amp;<sp/>pars)<sp/>{</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><ref refid="Assert_8h_1a3630afed5d5376567ad23703d3676be3" kindref="member">AlwaysAssert</ref>(checkParameters(pars),<sp/>AipsError);</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/>probability(pars(0));</highlight></codeline>
<codeline lineno="681"><highlight class="normal">}</highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal">Vector&lt;Double&gt;<sp/>Geometric::parameters()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Vector&lt;Double&gt;(1,<sp/>probability());</highlight></codeline>
<codeline lineno="685"><highlight class="normal">}</highlight></codeline>
<codeline lineno="686"><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"><ref refid="namespacecasacore_1abd5691f9e13acc90d901e4007740ff98" kindref="member">Bool</ref><sp/>Geometric::checkParameters(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&lt;Double&gt;&amp;<sp/>pars)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pars.nelements()<sp/>==<sp/>1<sp/>&amp;&amp;<sp/></highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/>pars(0)<sp/>&gt;=<sp/>0.0<sp/>&amp;&amp;<sp/>pars(0)<sp/>&lt;<sp/>1.0;</highlight></codeline>
<codeline lineno="690"><highlight class="normal">}</highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal">HyperGeometric::~HyperGeometric()<sp/>{</highlight></codeline>
<codeline lineno="693"><highlight class="normal">}</highlight></codeline>
<codeline lineno="694"><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"><ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref><sp/>HyperGeometric::operator()()<sp/>{</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref><sp/>d<sp/>=<sp/>(itsRNG-&gt;asDouble()<sp/>&gt;<sp/>itsP)<sp/>?<sp/>(1.0<sp/>-<sp/>itsP)<sp/>:<sp/><sp/>itsP;</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-itsMean<sp/>*<sp/><ref refid="namespacecasacore_1a166a5aef3b512cfe046a53c0cccea66b" kindref="member">log</ref>(itsRNG-&gt;asDouble())<sp/>/<sp/>(2.0<sp/>*<sp/>d);</highlight></codeline>
<codeline lineno="698"><highlight class="normal">}</highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>HyperGeometric::setParameters(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&lt;Double&gt;&amp;<sp/>pars)<sp/>{</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><ref refid="Assert_8h_1a3630afed5d5376567ad23703d3676be3" kindref="member">AlwaysAssert</ref>(checkParameters(pars),<sp/>AipsError);</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><ref refid="namespacecasacore_1a2e26b614348e1bd5bb067d8f136257cb" kindref="member">mean</ref>(pars(0));</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><ref refid="namespacecasacore_1afff21c193856c2f80da90f58266d5812" kindref="member">variance</ref>(pars(1));</highlight></codeline>
<codeline lineno="704"><highlight class="normal">}</highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal">Vector&lt;Double&gt;<sp/>HyperGeometric::parameters()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/>Vector&lt;Double&gt;<sp/>retVal(2);</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/>retVal(0)<sp/>=<sp/><ref refid="namespacecasacore_1a2e26b614348e1bd5bb067d8f136257cb" kindref="member">mean</ref>();</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/>retVal(1)<sp/>=<sp/><ref refid="namespacecasacore_1afff21c193856c2f80da90f58266d5812" kindref="member">variance</ref>();</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>retVal;</highlight></codeline>
<codeline lineno="711"><highlight class="normal">}</highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"><ref refid="namespacecasacore_1abd5691f9e13acc90d901e4007740ff98" kindref="member">Bool</ref><sp/>HyperGeometric::checkParameters(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&lt;Double&gt;&amp;<sp/>pars)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pars.nelements()<sp/>==<sp/>2<sp/>&amp;&amp;<sp/></highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/>!<ref refid="namespacecasacore_1a541672c0365ea093e63238bc34b4e175" kindref="member">nearAbs</ref>(pars(0),<sp/>0.0)<sp/>&amp;&amp;<sp/></highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/>pars(1)<sp/>&gt;<sp/>0.0<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacecasacore_1a8dd1bae2626176b371eb553595306774" kindref="member">square</ref>(pars(0))<sp/>&lt;=<sp/><sp/>pars(1);</highlight></codeline>
<codeline lineno="718"><highlight class="normal">}</highlight></codeline>
<codeline lineno="719"><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>HyperGeometric::setState()<sp/>{</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><ref refid="Assert_8h_1a3630afed5d5376567ad23703d3676be3" kindref="member">AlwaysAssert</ref>(itsVariance<sp/>&gt;<sp/>0.0,<sp/>AipsError);</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><ref refid="Assert_8h_1a3630afed5d5376567ad23703d3676be3" kindref="member">AlwaysAssert</ref>(!<ref refid="namespacecasacore_1a0ef2489b302c373f7780762742c11b57" kindref="member">near</ref>(itsMean,<sp/>0.0),<sp/>AipsError);</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><ref refid="Assert_8h_1a3630afed5d5376567ad23703d3676be3" kindref="member">AlwaysAssert</ref>(itsMean*itsMean<sp/>&lt;=<sp/>itsVariance,<sp/>AipsError);</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref><sp/>z<sp/>=<sp/>itsVariance<sp/>/<sp/>(itsMean<sp/>*<sp/>itsMean);</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/>itsP<sp/>=<sp/>0.5<sp/>*<sp/>(1.0<sp/>-<sp/><ref refid="namespacecasacore_1a7007a6f0ac4c37df2376110ec50f65d1" kindref="member">sqrt</ref>((z<sp/>-<sp/>1.0)<sp/>/<sp/>(<sp/>z<sp/>+<sp/>1.0<sp/>)));</highlight></codeline>
<codeline lineno="726"><highlight class="normal">}</highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal">Normal::Normal(RNG*<sp/>gen,<sp/><ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref><sp/><ref refid="namespacecasacore_1a2e26b614348e1bd5bb067d8f136257cb" kindref="member">mean</ref>,<sp/><ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref><sp/><ref refid="namespacecasacore_1afff21c193856c2f80da90f58266d5812" kindref="member">variance</ref>)</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/>:Random(gen),</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/>itsMean(<ref refid="namespacecasacore_1a2e26b614348e1bd5bb067d8f136257cb" kindref="member">mean</ref>),</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/>itsVariance(<ref refid="namespacecasacore_1afff21c193856c2f80da90f58266d5812" kindref="member">variance</ref>),</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/>itsCached(<ref refid="namespacecasacore_1a11ef6530f2dc946f54d220fe416bfd41" kindref="member">False</ref>),</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/>itsCachedValue(0)</highlight></codeline>
<codeline lineno="734"><highlight class="normal">{</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><ref refid="Assert_8h_1a3630afed5d5376567ad23703d3676be3" kindref="member">AlwaysAssert</ref>(itsVariance<sp/>&gt;<sp/>0.0,<sp/>AipsError);</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/>itsStdDev<sp/>=<sp/><ref refid="namespacecasacore_1a7007a6f0ac4c37df2376110ec50f65d1" kindref="member">sqrt</ref>(itsVariance);</highlight></codeline>
<codeline lineno="737"><highlight class="normal">}</highlight></codeline>
<codeline lineno="738"><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal">Normal::~Normal()<sp/>{</highlight></codeline>
<codeline lineno="740"><highlight class="normal">}</highlight></codeline>
<codeline lineno="741"><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>See<sp/>Simulation,<sp/>Modelling<sp/>&amp;<sp/>Analysis<sp/>by<sp/>Law<sp/>&amp;<sp/>Kelton,<sp/>pp259</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="743"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>is<sp/>the<sp/>``polar&apos;&apos;<sp/>method.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>We<sp/>actually<sp/>generate<sp/>two<sp/>IID<sp/>normal<sp/>distribution<sp/>variables.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>We<sp/>cache<sp/>the<sp/>one<sp/>&amp;<sp/>return<sp/>the<sp/>other.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"><ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref><sp/>Normal::operator()()<sp/>{</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(itsCached)<sp/>{</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/>itsCached<sp/>=<sp/><ref refid="namespacecasacore_1a11ef6530f2dc946f54d220fe416bfd41" kindref="member">False</ref>;</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>itsCachedValue<sp/>*<sp/>itsStdDev<sp/>+<sp/>itsMean;</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="751"><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;;)<sp/>{</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref><sp/>u1<sp/>=<sp/>itsRNG-&gt;asDouble();</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref><sp/>u2<sp/>=<sp/>itsRNG-&gt;asDouble();</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref><sp/>v1<sp/>=<sp/>2<sp/>*<sp/>u1<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref><sp/>v2<sp/>=<sp/>2<sp/>*<sp/>u2<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref><sp/>w<sp/>=<sp/>(v1<sp/>*<sp/>v1)<sp/>+<sp/>(v2<sp/>*<sp/>v2);</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(w<sp/>&lt;=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref><sp/>y<sp/>=<sp/><ref refid="namespacecasacore_1a7007a6f0ac4c37df2376110ec50f65d1" kindref="member">sqrt</ref>(<sp/>(-2<sp/>*<sp/><ref refid="namespacecasacore_1a166a5aef3b512cfe046a53c0cccea66b" kindref="member">log</ref>(w))<sp/>/<sp/>w);</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref><sp/>x1<sp/>=<sp/>v1<sp/>*<sp/>y;</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>itsCachedValue<sp/>=<sp/>v2<sp/>*<sp/>y;</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>itsCached<sp/>=<sp/><ref refid="namespacecasacore_1ad5c850f9e177173e0f7d0ad57091501d" kindref="member">True</ref>;</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x1<sp/>*<sp/>itsStdDev<sp/>+<sp/>itsMean;</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="766"><highlight class="normal">}</highlight></codeline>
<codeline lineno="767"><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacecasacore_1a2e26b614348e1bd5bb067d8f136257cb" kindref="member">Normal::mean</ref>(<ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref><sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/>itsMean<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="770"><highlight class="normal">}</highlight></codeline>
<codeline lineno="771"><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacecasacore_1afff21c193856c2f80da90f58266d5812" kindref="member">Normal::variance</ref>(<ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref><sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/>itsVariance<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><ref refid="Assert_8h_1a3630afed5d5376567ad23703d3676be3" kindref="member">AlwaysAssert</ref>(itsVariance<sp/>&gt;<sp/>0.0,<sp/>AipsError);</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/>itsStdDev<sp/>=<sp/><ref refid="namespacecasacore_1a7007a6f0ac4c37df2376110ec50f65d1" kindref="member">sqrt</ref>(itsVariance);</highlight></codeline>
<codeline lineno="776"><highlight class="normal">}</highlight></codeline>
<codeline lineno="777"><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Normal::setParameters(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&lt;Double&gt;&amp;<sp/>pars)<sp/>{</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><ref refid="Assert_8h_1a3630afed5d5376567ad23703d3676be3" kindref="member">AlwaysAssert</ref>(checkParameters(pars),<sp/>AipsError);</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><ref refid="namespacecasacore_1a2e26b614348e1bd5bb067d8f136257cb" kindref="member">mean</ref>(pars(0));</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><ref refid="namespacecasacore_1afff21c193856c2f80da90f58266d5812" kindref="member">variance</ref>(pars(1));</highlight></codeline>
<codeline lineno="782"><highlight class="normal">}</highlight></codeline>
<codeline lineno="783"><highlight class="normal"></highlight></codeline>
<codeline lineno="784"><highlight class="normal">Vector&lt;Double&gt;<sp/>Normal::parameters()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/>Vector&lt;Double&gt;<sp/>retVal(2);</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/>retVal(0)<sp/>=<sp/><ref refid="namespacecasacore_1a2e26b614348e1bd5bb067d8f136257cb" kindref="member">mean</ref>();</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/>retVal(1)<sp/>=<sp/><ref refid="namespacecasacore_1afff21c193856c2f80da90f58266d5812" kindref="member">variance</ref>();</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>retVal;</highlight></codeline>
<codeline lineno="789"><highlight class="normal">}</highlight></codeline>
<codeline lineno="790"><highlight class="normal"></highlight></codeline>
<codeline lineno="791"><highlight class="normal"><ref refid="namespacecasacore_1abd5691f9e13acc90d901e4007740ff98" kindref="member">Bool</ref><sp/>Normal::checkParameters(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&lt;Double&gt;&amp;<sp/>pars)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pars.nelements()<sp/>==<sp/>2<sp/>&amp;&amp;<sp/></highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/>pars(1)<sp/>&gt;<sp/>0.0;</highlight></codeline>
<codeline lineno="794"><highlight class="normal">}</highlight></codeline>
<codeline lineno="795"><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal">LogNormal::LogNormal(RNG*<sp/>gen,<sp/><ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref><sp/><ref refid="namespacecasacore_1a2e26b614348e1bd5bb067d8f136257cb" kindref="member">mean</ref>,<sp/><ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref><sp/><ref refid="namespacecasacore_1afff21c193856c2f80da90f58266d5812" kindref="member">variance</ref>)</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/>:Normal(gen),</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/>itsLogMean(<ref refid="namespacecasacore_1a2e26b614348e1bd5bb067d8f136257cb" kindref="member">mean</ref>),</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/>itsLogVar(<ref refid="namespacecasacore_1afff21c193856c2f80da90f58266d5812" kindref="member">variance</ref>)</highlight></codeline>
<codeline lineno="800"><highlight class="normal">{</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/>setState();</highlight></codeline>
<codeline lineno="802"><highlight class="normal">}</highlight></codeline>
<codeline lineno="803"><highlight class="normal"></highlight></codeline>
<codeline lineno="804"><highlight class="normal">LogNormal::~LogNormal()<sp/>{</highlight></codeline>
<codeline lineno="805"><highlight class="normal">}</highlight></codeline>
<codeline lineno="806"><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>See<sp/>Simulation,<sp/>Modelling<sp/>&amp;<sp/>Analysis<sp/>by<sp/>Law<sp/>&amp;<sp/>Kelton,<sp/>pp260</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="normal"><ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref><sp/>LogNormal::operator()()<sp/>{</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacecasacore_1ab0d7878bae9acd24b749588b60076192" kindref="member">std::pow</ref>(<ref refid="namespacecasacore_1_1C_1affe3d5b244c2ac147c007388050bae03" kindref="member">C::e</ref>,<sp/>this-&gt;Normal::operator()()<sp/>);</highlight></codeline>
<codeline lineno="810"><highlight class="normal">}</highlight></codeline>
<codeline lineno="811"><highlight class="normal"></highlight></codeline>
<codeline lineno="812"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacecasacore_1a2e26b614348e1bd5bb067d8f136257cb" kindref="member">LogNormal::mean</ref>(<ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref><sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/>itsLogMean<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/>setState();</highlight></codeline>
<codeline lineno="815"><highlight class="normal">}</highlight></codeline>
<codeline lineno="816"><highlight class="normal"></highlight></codeline>
<codeline lineno="817"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacecasacore_1afff21c193856c2f80da90f58266d5812" kindref="member">LogNormal::variance</ref>(<ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref><sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/>itsLogVar<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/>setState();</highlight></codeline>
<codeline lineno="820"><highlight class="normal">}</highlight></codeline>
<codeline lineno="821"><highlight class="normal"></highlight></codeline>
<codeline lineno="822"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LogNormal::setState()<sp/>{</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref><sp/>m2<sp/>=<sp/>itsLogMean<sp/>*<sp/>itsLogMean;</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><ref refid="Assert_8h_1a3630afed5d5376567ad23703d3676be3" kindref="member">AlwaysAssert</ref>(!<ref refid="namespacecasacore_1a0ef2489b302c373f7780762742c11b57" kindref="member">near</ref>(m2,<sp/>0.0),<sp/>AipsError);</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="namespacecasacore_1a2e26b614348e1bd5bb067d8f136257cb" kindref="member">Normal::mean</ref>(<ref refid="namespacecasacore_1a166a5aef3b512cfe046a53c0cccea66b" kindref="member">log</ref>(m2<sp/>/<sp/><ref refid="namespacecasacore_1a7007a6f0ac4c37df2376110ec50f65d1" kindref="member">sqrt</ref>(itsLogVar<sp/>+<sp/>m2)<sp/>));</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><ref refid="Assert_8h_1a3630afed5d5376567ad23703d3676be3" kindref="member">AlwaysAssert</ref>(!<ref refid="namespacecasacore_1a0ef2489b302c373f7780762742c11b57" kindref="member">near</ref>(m2+itsLogVar,<sp/>0.0),<sp/>AipsError);</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="namespacecasacore_1afff21c193856c2f80da90f58266d5812" kindref="member">Normal::variance</ref>(<ref refid="namespacecasacore_1a166a5aef3b512cfe046a53c0cccea66b" kindref="member">log</ref>((itsLogVar<sp/>+<sp/>m2)/m2<sp/>));<sp/></highlight></codeline>
<codeline lineno="828"><highlight class="normal">}</highlight></codeline>
<codeline lineno="829"><highlight class="normal"></highlight></codeline>
<codeline lineno="830"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LogNormal::setParameters(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&lt;Double&gt;&amp;<sp/>pars)<sp/>{</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><ref refid="Assert_8h_1a3630afed5d5376567ad23703d3676be3" kindref="member">AlwaysAssert</ref>(checkParameters(pars),<sp/>AipsError);</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><ref refid="namespacecasacore_1a2e26b614348e1bd5bb067d8f136257cb" kindref="member">mean</ref>(pars(0));</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><ref refid="namespacecasacore_1afff21c193856c2f80da90f58266d5812" kindref="member">variance</ref>(pars(1));</highlight></codeline>
<codeline lineno="834"><highlight class="normal">}</highlight></codeline>
<codeline lineno="835"><highlight class="normal"></highlight></codeline>
<codeline lineno="836"><highlight class="normal">Vector&lt;Double&gt;<sp/>LogNormal::parameters()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/>Vector&lt;Double&gt;<sp/>retVal(2);</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/>retVal(0)<sp/>=<sp/><ref refid="namespacecasacore_1a2e26b614348e1bd5bb067d8f136257cb" kindref="member">mean</ref>();</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/>retVal(1)<sp/>=<sp/><ref refid="namespacecasacore_1afff21c193856c2f80da90f58266d5812" kindref="member">variance</ref>();</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>retVal;</highlight></codeline>
<codeline lineno="841"><highlight class="normal">}</highlight></codeline>
<codeline lineno="842"><highlight class="normal"></highlight></codeline>
<codeline lineno="843"><highlight class="normal"><ref refid="namespacecasacore_1abd5691f9e13acc90d901e4007740ff98" kindref="member">Bool</ref><sp/>LogNormal::checkParameters(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&lt;Double&gt;&amp;<sp/>pars)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pars.nelements()<sp/>==<sp/>2<sp/>&amp;&amp;<sp/></highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/>!<ref refid="namespacecasacore_1a541672c0365ea093e63238bc34b4e175" kindref="member">nearAbs</ref>(pars(0),<sp/>0.0)<sp/>&amp;&amp;<sp/></highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/>pars(1)<sp/>&gt;<sp/>0.0;</highlight></codeline>
<codeline lineno="847"><highlight class="normal">}</highlight></codeline>
<codeline lineno="848"><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal">NegativeExpntl::NegativeExpntl(RNG*<sp/>gen,<sp/><ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref><sp/><ref refid="namespacecasacore_1a2e26b614348e1bd5bb067d8f136257cb" kindref="member">mean</ref>)</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/>:Random(gen)</highlight></codeline>
<codeline lineno="851"><highlight class="normal">{</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/>itsMean<sp/>=<sp/><ref refid="namespacecasacore_1a2e26b614348e1bd5bb067d8f136257cb" kindref="member">mean</ref>;</highlight></codeline>
<codeline lineno="853"><highlight class="normal">}</highlight></codeline>
<codeline lineno="854"><highlight class="normal"></highlight></codeline>
<codeline lineno="855"><highlight class="normal">NegativeExpntl::~NegativeExpntl()<sp/>{</highlight></codeline>
<codeline lineno="856"><highlight class="normal">}</highlight></codeline>
<codeline lineno="857"><highlight class="normal"></highlight></codeline>
<codeline lineno="858"><highlight class="normal"><ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref><sp/>NegativeExpntl::operator()()<sp/>{</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-itsMean<sp/>*<sp/><ref refid="namespacecasacore_1a166a5aef3b512cfe046a53c0cccea66b" kindref="member">log</ref>(itsRNG-&gt;asDouble());</highlight></codeline>
<codeline lineno="860"><highlight class="normal">}</highlight></codeline>
<codeline lineno="861"><highlight class="normal"></highlight></codeline>
<codeline lineno="862"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacecasacore_1a2e26b614348e1bd5bb067d8f136257cb" kindref="member">NegativeExpntl::mean</ref>(<ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref><sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/>itsMean<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="864"><highlight class="normal">}</highlight></codeline>
<codeline lineno="865"><highlight class="normal"></highlight></codeline>
<codeline lineno="866"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>NegativeExpntl::setParameters(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&lt;Double&gt;&amp;<sp/>pars)<sp/>{</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><ref refid="Assert_8h_1a3630afed5d5376567ad23703d3676be3" kindref="member">AlwaysAssert</ref>(checkParameters(pars),<sp/>AipsError);</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><ref refid="namespacecasacore_1a2e26b614348e1bd5bb067d8f136257cb" kindref="member">mean</ref>(pars(0));</highlight></codeline>
<codeline lineno="869"><highlight class="normal">}</highlight></codeline>
<codeline lineno="870"><highlight class="normal"></highlight></codeline>
<codeline lineno="871"><highlight class="normal">Vector&lt;Double&gt;<sp/>NegativeExpntl::parameters()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Vector&lt;Double&gt;(1,<sp/><ref refid="namespacecasacore_1a2e26b614348e1bd5bb067d8f136257cb" kindref="member">mean</ref>());</highlight></codeline>
<codeline lineno="873"><highlight class="normal">}</highlight></codeline>
<codeline lineno="874"><highlight class="normal"></highlight></codeline>
<codeline lineno="875"><highlight class="normal"><ref refid="namespacecasacore_1abd5691f9e13acc90d901e4007740ff98" kindref="member">Bool</ref><sp/>NegativeExpntl::checkParameters(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&lt;Double&gt;&amp;<sp/>pars)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pars.nelements()<sp/>==<sp/>1;<sp/></highlight></codeline>
<codeline lineno="877"><highlight class="normal">}</highlight></codeline>
<codeline lineno="878"><highlight class="normal"></highlight></codeline>
<codeline lineno="879"><highlight class="normal">Poisson::Poisson(RNG*<sp/>gen,<sp/><ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref><sp/><ref refid="namespacecasacore_1a2e26b614348e1bd5bb067d8f136257cb" kindref="member">mean</ref>)</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/>:Random(gen)<sp/></highlight></codeline>
<codeline lineno="881"><highlight class="normal">{</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><ref refid="Assert_8h_1a3630afed5d5376567ad23703d3676be3" kindref="member">AlwaysAssert</ref>(<ref refid="namespacecasacore_1a2e26b614348e1bd5bb067d8f136257cb" kindref="member">mean</ref><sp/>&gt;=<sp/>0.0,<sp/>AipsError);</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/>itsMean<sp/>=<sp/><ref refid="namespacecasacore_1a2e26b614348e1bd5bb067d8f136257cb" kindref="member">mean</ref>;</highlight></codeline>
<codeline lineno="884"><highlight class="normal">}</highlight></codeline>
<codeline lineno="885"><highlight class="normal"></highlight></codeline>
<codeline lineno="886"><highlight class="normal">Poisson::~Poisson()<sp/>{</highlight></codeline>
<codeline lineno="887"><highlight class="normal">}</highlight></codeline>
<codeline lineno="888"><highlight class="normal"></highlight></codeline>
<codeline lineno="889"><highlight class="normal"><ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref><sp/>Poisson::operator()()<sp/>{</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(asInt());</highlight></codeline>
<codeline lineno="891"><highlight class="normal">}</highlight></codeline>
<codeline lineno="892"><highlight class="normal"></highlight></codeline>
<codeline lineno="893"><highlight class="normal"><ref refid="namespacecasacore_1a5c559d8d8bf2ae7f67b439955d6be88a" kindref="member">uInt</ref><sp/>Poisson::asInt()<sp/>{</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref><sp/>bound<sp/>=<sp/><ref refid="namespacecasacore_1a1dbb4935d3112011f371b90a74fb778b" kindref="member">exp</ref>(-1.0<sp/>*<sp/>itsMean);</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><ref refid="namespacecasacore_1a5c559d8d8bf2ae7f67b439955d6be88a" kindref="member">uInt</ref><sp/>count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref><sp/><ref refid="namespacecasacore_1a822cd8c7c28fee1811751a6f5e06464a" kindref="member">product</ref><sp/>=<sp/>1.0;<sp/><ref refid="namespacecasacore_1a822cd8c7c28fee1811751a6f5e06464a" kindref="member">product</ref><sp/>&gt;=<sp/>bound;<sp/><ref refid="namespacecasacore_1a822cd8c7c28fee1811751a6f5e06464a" kindref="member">product</ref><sp/>*=<sp/>itsRNG-&gt;asDouble())<sp/>{</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/>count++;</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>count<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="901"><highlight class="normal">}</highlight></codeline>
<codeline lineno="902"><highlight class="normal"></highlight></codeline>
<codeline lineno="903"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacecasacore_1a2e26b614348e1bd5bb067d8f136257cb" kindref="member">Poisson::mean</ref>(<ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref><sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><ref refid="Assert_8h_1a3630afed5d5376567ad23703d3676be3" kindref="member">AlwaysAssert</ref>(x<sp/>&gt;=<sp/>0.0,<sp/>AipsError);</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/>itsMean<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="906"><highlight class="normal">}</highlight></codeline>
<codeline lineno="907"><highlight class="normal"></highlight></codeline>
<codeline lineno="908"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Poisson::setParameters(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&lt;Double&gt;&amp;<sp/>pars)<sp/>{</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><ref refid="Assert_8h_1a3630afed5d5376567ad23703d3676be3" kindref="member">AlwaysAssert</ref>(checkParameters(pars),<sp/>AipsError);</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><ref refid="namespacecasacore_1a2e26b614348e1bd5bb067d8f136257cb" kindref="member">mean</ref>(pars(0));</highlight></codeline>
<codeline lineno="911"><highlight class="normal">}</highlight></codeline>
<codeline lineno="912"><highlight class="normal"></highlight></codeline>
<codeline lineno="913"><highlight class="normal">Vector&lt;Double&gt;<sp/>Poisson::parameters()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Vector&lt;Double&gt;(1,<sp/><ref refid="namespacecasacore_1a2e26b614348e1bd5bb067d8f136257cb" kindref="member">mean</ref>());</highlight></codeline>
<codeline lineno="915"><highlight class="normal">}</highlight></codeline>
<codeline lineno="916"><highlight class="normal"></highlight></codeline>
<codeline lineno="917"><highlight class="normal"><ref refid="namespacecasacore_1abd5691f9e13acc90d901e4007740ff98" kindref="member">Bool</ref><sp/>Poisson::checkParameters(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&lt;Double&gt;&amp;<sp/>pars)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pars.nelements()<sp/>==<sp/>1<sp/>&amp;&amp;<sp/>pars(0)<sp/>&gt;=<sp/>0.0;</highlight></codeline>
<codeline lineno="919"><highlight class="normal">}</highlight></codeline>
<codeline lineno="920"><highlight class="normal"></highlight></codeline>
<codeline lineno="921"><highlight class="normal">Uniform::Uniform(RNG*<sp/>gen,<sp/><ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref><sp/>low,<sp/><ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref><sp/>high)</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/>:Random(gen),</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/>itsLow(low),</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/>itsHigh(high),</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/>itsDelta(calcDelta(itsLow,<sp/>itsHigh))</highlight></codeline>
<codeline lineno="926"><highlight class="normal">{</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><ref refid="Assert_8h_1a3630afed5d5376567ad23703d3676be3" kindref="member">AlwaysAssert</ref>(itsLow<sp/>&lt;<sp/>itsHigh,<sp/>AipsError);</highlight></codeline>
<codeline lineno="928"><highlight class="normal">}</highlight></codeline>
<codeline lineno="929"><highlight class="normal"></highlight></codeline>
<codeline lineno="930"><highlight class="normal">Uniform::~Uniform()<sp/>{</highlight></codeline>
<codeline lineno="931"><highlight class="normal">}</highlight></codeline>
<codeline lineno="932"><highlight class="normal"></highlight></codeline>
<codeline lineno="933"><highlight class="normal"><ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref><sp/>Uniform::operator()()<sp/>{</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>itsLow<sp/>+<sp/>itsDelta<sp/>*<sp/>itsRNG-&gt;asDouble();</highlight></codeline>
<codeline lineno="935"><highlight class="normal">}</highlight></codeline>
<codeline lineno="936"><highlight class="normal"></highlight></codeline>
<codeline lineno="937"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Uniform::low(<ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref><sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><ref refid="Assert_8h_1a3630afed5d5376567ad23703d3676be3" kindref="member">AlwaysAssert</ref>(x<sp/>&lt;<sp/>itsHigh,<sp/>AipsError);</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/>itsLow<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/>itsDelta<sp/>=<sp/>calcDelta(itsLow,<sp/>itsHigh);</highlight></codeline>
<codeline lineno="941"><highlight class="normal">}</highlight></codeline>
<codeline lineno="942"><highlight class="normal"></highlight></codeline>
<codeline lineno="943"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Uniform::high(<ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref><sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><ref refid="Assert_8h_1a3630afed5d5376567ad23703d3676be3" kindref="member">AlwaysAssert</ref>(itsLow<sp/>&lt;<sp/>x,<sp/>AipsError);</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/>itsHigh<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/>itsDelta<sp/>=<sp/>calcDelta(itsLow,<sp/>itsHigh);</highlight></codeline>
<codeline lineno="947"><highlight class="normal">}</highlight></codeline>
<codeline lineno="948"><highlight class="normal"></highlight></codeline>
<codeline lineno="949"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Uniform::range(<ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref><sp/>low,<sp/><ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref><sp/>high)<sp/>{</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><ref refid="Assert_8h_1a3630afed5d5376567ad23703d3676be3" kindref="member">AlwaysAssert</ref>(low<sp/>&lt;<sp/>high,<sp/>AipsError);</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/>itsHigh<sp/>=<sp/>high;</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/>itsLow<sp/>=<sp/>low;</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/>itsDelta<sp/>=<sp/>calcDelta(itsLow,<sp/>itsHigh);</highlight></codeline>
<codeline lineno="954"><highlight class="normal">}</highlight></codeline>
<codeline lineno="955"><highlight class="normal"></highlight></codeline>
<codeline lineno="956"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Uniform::setParameters(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&lt;Double&gt;&amp;<sp/>pars)<sp/>{</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><ref refid="Assert_8h_1a3630afed5d5376567ad23703d3676be3" kindref="member">AlwaysAssert</ref>(checkParameters(pars),<sp/>AipsError);</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/>range(pars(0),<sp/>pars(1));</highlight></codeline>
<codeline lineno="959"><highlight class="normal">}</highlight></codeline>
<codeline lineno="960"><highlight class="normal"></highlight></codeline>
<codeline lineno="961"><highlight class="normal">Vector&lt;Double&gt;<sp/>Uniform::parameters()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/>Vector&lt;Double&gt;<sp/>retVal(2);</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/>retVal(0)<sp/>=<sp/>low();</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/>retVal(1)<sp/>=<sp/>high();</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>retVal;</highlight></codeline>
<codeline lineno="966"><highlight class="normal">}</highlight></codeline>
<codeline lineno="967"><highlight class="normal"></highlight></codeline>
<codeline lineno="968"><highlight class="normal"><ref refid="namespacecasacore_1abd5691f9e13acc90d901e4007740ff98" kindref="member">Bool</ref><sp/>Uniform::checkParameters(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&lt;Double&gt;&amp;<sp/>pars)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pars.nelements()<sp/>==<sp/>2<sp/>&amp;&amp;<sp/></highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/>pars(0)<sp/>&lt;<sp/>pars(1);</highlight></codeline>
<codeline lineno="971"><highlight class="normal">}</highlight></codeline>
<codeline lineno="972"><highlight class="normal"></highlight></codeline>
<codeline lineno="973"><highlight class="normal"><ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref><sp/>Uniform::calcDelta(<ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref><sp/>low,<sp/><ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref><sp/>high)<sp/>{</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(high<sp/>-<sp/>low);</highlight></codeline>
<codeline lineno="975"><highlight class="normal">}</highlight></codeline>
<codeline lineno="976"><highlight class="normal"></highlight></codeline>
<codeline lineno="977"><highlight class="normal">Weibull::~Weibull()<sp/>{</highlight></codeline>
<codeline lineno="978"><highlight class="normal">}</highlight></codeline>
<codeline lineno="979"><highlight class="normal"></highlight></codeline>
<codeline lineno="980"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>See<sp/>Simulation,<sp/>Modelling<sp/>&amp;<sp/>Analysis<sp/>by<sp/>Law<sp/>&amp;<sp/>Kelton,<sp/>pp259</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="981"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>is<sp/>the<sp/>``polar&apos;&apos;<sp/>method.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="982"><highlight class="normal">Weibull::Weibull(RNG*<sp/>gen,<sp/><ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref><sp/>alpha,<sp/><ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref><sp/>beta)</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/>:Random(gen),</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/>itsAlpha(alpha),</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/>itsBeta(beta),</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/>itsInvAlpha(0)</highlight></codeline>
<codeline lineno="987"><highlight class="normal">{</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/>setState();</highlight></codeline>
<codeline lineno="989"><highlight class="normal">}</highlight></codeline>
<codeline lineno="990"><highlight class="normal"></highlight></codeline>
<codeline lineno="991"><highlight class="normal"><ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref><sp/>Weibull::operator()()<sp/>{</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacecasacore_1ab0d7878bae9acd24b749588b60076192" kindref="member">std::pow</ref>(itsBeta<sp/>*<sp/>(<sp/>-<sp/><ref refid="namespacecasacore_1a166a5aef3b512cfe046a53c0cccea66b" kindref="member">log</ref>(1.0<sp/>-<sp/>itsRNG-&gt;asDouble())<sp/>),<sp/>itsInvAlpha);</highlight></codeline>
<codeline lineno="993"><highlight class="normal">}</highlight></codeline>
<codeline lineno="994"><highlight class="normal"></highlight></codeline>
<codeline lineno="995"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Weibull::alpha(<ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref><sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/>itsAlpha<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/>setState();</highlight></codeline>
<codeline lineno="998"><highlight class="normal">}</highlight></codeline>
<codeline lineno="999"><highlight class="normal"></highlight></codeline>
<codeline lineno="1000"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Weibull::beta(<ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref><sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/>itsBeta<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="1002"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"></highlight></codeline>
<codeline lineno="1004"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Weibull::setParameters(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&lt;Double&gt;&amp;<sp/>pars)<sp/>{</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><ref refid="Assert_8h_1a3630afed5d5376567ad23703d3676be3" kindref="member">AlwaysAssert</ref>(checkParameters(pars),<sp/>AipsError);</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/>alpha(pars(0));</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/>beta(pars(1));</highlight></codeline>
<codeline lineno="1008"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"></highlight></codeline>
<codeline lineno="1010"><highlight class="normal">Vector&lt;Double&gt;<sp/>Weibull::parameters()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/>Vector&lt;Double&gt;<sp/>retVal(2);</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/>retVal(0)<sp/>=<sp/>alpha();</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/>retVal(1)<sp/>=<sp/>beta();</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>retVal;</highlight></codeline>
<codeline lineno="1015"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"></highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><ref refid="namespacecasacore_1abd5691f9e13acc90d901e4007740ff98" kindref="member">Bool</ref><sp/>Weibull::checkParameters(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&lt;Double&gt;&amp;<sp/>pars)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pars.nelements()<sp/>==<sp/>2<sp/>&amp;&amp;<sp/></highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/>!<ref refid="namespacecasacore_1a541672c0365ea093e63238bc34b4e175" kindref="member">nearAbs</ref>(pars(0),<sp/>0.0)<sp/>&amp;&amp;<sp/></highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/>pars(1)<sp/>&gt;<sp/>0.0;</highlight></codeline>
<codeline lineno="1021"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"></highlight></codeline>
<codeline lineno="1023"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Weibull::setState()<sp/>{</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><ref refid="Assert_8h_1a3630afed5d5376567ad23703d3676be3" kindref="member">AlwaysAssert</ref>(!<ref refid="namespacecasacore_1a0ef2489b302c373f7780762742c11b57" kindref="member">near</ref>(itsAlpha,<sp/>0.0),<sp/>AipsError);</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/>itsInvAlpha<sp/>=<sp/>1.0<sp/>/<sp/>itsAlpha;</highlight></codeline>
<codeline lineno="1026"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1028"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Local<sp/>Variables:<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1029"><highlight class="normal"></highlight><highlight class="comment">//<sp/>compile-command:<sp/>&quot;gmake<sp/>XLIBLIST=0<sp/>Random&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1030"><highlight class="normal"></highlight><highlight class="comment">//<sp/>End:<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1031"><highlight class="normal"></highlight></codeline>
<codeline lineno="1032"><highlight class="normal">}<sp/></highlight><highlight class="comment">//#<sp/>NAMESPACE<sp/>CASACORE<sp/>-<sp/>END</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1033"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="casa/BasicMath/Random.cc"/>
  </compounddef>
</doxygen>
