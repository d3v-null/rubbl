<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classcasacore_1_1MVRadialVelocity" kind="class" language="C++" prot="public">
    <compoundname>casacore::MVRadialVelocity</compoundname>
    <basecompoundref refid="classcasacore_1_1MeasValue" prot="public" virt="non-virtual">casacore::MeasValue</basecompoundref>
    <includes refid="MVRadialVelocity_8h" local="no">MVRadialVelocity.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classcasacore_1_1MVRadialVelocity_1af0e159e08a56e8990ccf655d4da73653" prot="private" static="no" mutable="no">
        <type><ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref></type>
        <definition>Double casacore::MVRadialVelocity::val</definition>
        <argsstring></argsstring>
        <name>val</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVRadialVelocity.h" line="181" column="10" bodyfile="casa/Quanta/MVRadialVelocity.h" bodystart="181" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classcasacore_1_1MVRadialVelocity_1a7deedb5b064d37f2f434a7ad25c9dfb1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>casacore::MVRadialVelocity::MVRadialVelocity</definition>
        <argsstring>()</argsstring>
        <name>MVRadialVelocity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVRadialVelocity.h" line="97" column="3" bodyfile="casa/Quanta/MVRadialVelocity.cc" bodystart="41" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVRadialVelocity_1a711919601c4b0121f096c4720a3e68e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>casacore::MVRadialVelocity::MVRadialVelocity</definition>
        <argsstring>(const MVRadialVelocity &amp;other)</argsstring>
        <name>MVRadialVelocity</name>
        <param>
          <type>const <ref refid="classcasacore_1_1MVRadialVelocity" kindref="compound">MVRadialVelocity</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVRadialVelocity.h" line="99" column="3" bodyfile="casa/Quanta/MVRadialVelocity.cc" bodystart="47" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVRadialVelocity_1afdcc9ad6f1f90cee97effba0a754d90f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classcasacore_1_1MVRadialVelocity" kindref="compound">MVRadialVelocity</ref> &amp;</type>
        <definition>MVRadialVelocity &amp; casacore::MVRadialVelocity::operator=</definition>
        <argsstring>(const MVRadialVelocity &amp;other)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classcasacore_1_1MVRadialVelocity" kindref="compound">MVRadialVelocity</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVRadialVelocity.h" line="101" column="20" bodyfile="casa/Quanta/MVRadialVelocity.cc" bodystart="86" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVRadialVelocity_1ac4f942c174373b258b051ddd8927607c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>casacore::MVRadialVelocity::MVRadialVelocity</definition>
        <argsstring>(Double d)</argsstring>
        <name>MVRadialVelocity</name>
        <param>
          <type><ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref></type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVRadialVelocity.h" line="103" column="3" bodyfile="casa/Quanta/MVRadialVelocity.cc" bodystart="44" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVRadialVelocity_1a6b60398983425a3e0b6c1d74291d61de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>casacore::MVRadialVelocity::MVRadialVelocity</definition>
        <argsstring>(const Quantity &amp;other)</argsstring>
        <name>MVRadialVelocity</name>
        <param>
          <type>const <ref refid="namespacecasacore_1ad5429fefc00b65ab7ddb394a0e3fa410" kindref="member">Quantity</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVRadialVelocity.h" line="106" column="3" bodyfile="casa/Quanta/MVRadialVelocity.cc" bodystart="52" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVRadialVelocity_1ac6e26f450d27c8ca20e636699033cdc2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>casacore::MVRadialVelocity::MVRadialVelocity</definition>
        <argsstring>(const Quantum&lt; Vector&lt; Double &gt; &gt; &amp;other)</argsstring>
        <name>MVRadialVelocity</name>
        <param>
          <type>const <ref refid="classcasacore_1_1Quantum" kindref="compound">Quantum</ref>&lt; <ref refid="classcasacore_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref> &gt; &gt; &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVRadialVelocity.h" line="107" column="3" bodyfile="casa/Quanta/MVRadialVelocity.cc" bodystart="56" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVRadialVelocity_1a02ede291ae504666fefaaddb6d764e90" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>casacore::MVRadialVelocity::MVRadialVelocity</definition>
        <argsstring>(const Vector&lt; Double &gt; &amp;other)</argsstring>
        <name>MVRadialVelocity</name>
        <param>
          <type>const <ref refid="classcasacore_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref> &gt; &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVRadialVelocity.h" line="115" column="3" bodyfile="casa/Quanta/MVRadialVelocity.cc" bodystart="69" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVRadialVelocity_1a04ceef7fc7f2605b852da979ab7bd5a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>casacore::MVRadialVelocity::MVRadialVelocity</definition>
        <argsstring>(const Vector&lt; Quantity &gt; &amp;other)</argsstring>
        <name>MVRadialVelocity</name>
        <param>
          <type>const <ref refid="classcasacore_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespacecasacore_1ad5429fefc00b65ab7ddb394a0e3fa410" kindref="member">Quantity</ref> &gt; &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVRadialVelocity.h" line="116" column="3" bodyfile="casa/Quanta/MVRadialVelocity.cc" bodystart="80" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVRadialVelocity_1a88ec542bc314db98ca3e37abdf38117d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>casacore::MVRadialVelocity::~MVRadialVelocity</definition>
        <argsstring>()</argsstring>
        <name>~MVRadialVelocity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVRadialVelocity.h" line="120" column="3" bodyfile="casa/Quanta/MVRadialVelocity.cc" bodystart="94" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVRadialVelocity_1a99bb8b30de314637e7101a7a203a11fd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>casacore::MVRadialVelocity::operator Double</definition>
        <argsstring>() const</argsstring>
        <name>operator Double</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVRadialVelocity.h" line="124" column="3" bodyfile="casa/Quanta/MVRadialVelocity.cc" bodystart="97" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVRadialVelocity_1a47e9ebafe4f610e2f8f0b8b3ea0c9519" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classcasacore_1_1MVRadialVelocity" kindref="compound">MVRadialVelocity</ref> &amp;</type>
        <definition>MVRadialVelocity &amp; casacore::MVRadialVelocity::operator+=</definition>
        <argsstring>(const MVRadialVelocity &amp;other)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const <ref refid="classcasacore_1_1MVRadialVelocity" kindref="compound">MVRadialVelocity</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVRadialVelocity.h" line="128" column="20" bodyfile="casa/Quanta/MVRadialVelocity.cc" bodystart="101" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVRadialVelocity_1a751f13c29837644ba25aa537460d9003" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classcasacore_1_1MVRadialVelocity" kindref="compound">MVRadialVelocity</ref> &amp;</type>
        <definition>MVRadialVelocity &amp; casacore::MVRadialVelocity::operator-=</definition>
        <argsstring>(const MVRadialVelocity &amp;other)</argsstring>
        <name>operator-=</name>
        <param>
          <type>const <ref refid="classcasacore_1_1MVRadialVelocity" kindref="compound">MVRadialVelocity</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVRadialVelocity.h" line="129" column="20" bodyfile="casa/Quanta/MVRadialVelocity.cc" bodystart="106" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVRadialVelocity_1a42980fc10144ed1a65d3ab6d85ee38a5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacecasacore_1abd5691f9e13acc90d901e4007740ff98" kindref="member">Bool</ref></type>
        <definition>Bool casacore::MVRadialVelocity::operator==</definition>
        <argsstring>(const MVRadialVelocity &amp;other) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classcasacore_1_1MVRadialVelocity" kindref="compound">MVRadialVelocity</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVRadialVelocity.h" line="133" column="8" bodyfile="casa/Quanta/MVRadialVelocity.cc" bodystart="111" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVRadialVelocity_1a2c81745787a6497a75c4019a59250889" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacecasacore_1abd5691f9e13acc90d901e4007740ff98" kindref="member">Bool</ref></type>
        <definition>Bool casacore::MVRadialVelocity::operator!=</definition>
        <argsstring>(const MVRadialVelocity &amp;other) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classcasacore_1_1MVRadialVelocity" kindref="compound">MVRadialVelocity</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVRadialVelocity.h" line="134" column="8" bodyfile="casa/Quanta/MVRadialVelocity.cc" bodystart="115" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVRadialVelocity_1ace57be181148a5be8da541b89d7f82d2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacecasacore_1abd5691f9e13acc90d901e4007740ff98" kindref="member">Bool</ref></type>
        <definition>Bool casacore::MVRadialVelocity::near</definition>
        <argsstring>(const MVRadialVelocity &amp;other, Double tol=1e-13) const</argsstring>
        <name>near</name>
        <param>
          <type>const <ref refid="classcasacore_1_1MVRadialVelocity" kindref="compound">MVRadialVelocity</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <param>
          <type><ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref></type>
          <declname>tol</declname>
          <defval>1e-13</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVRadialVelocity.h" line="135" column="8" bodyfile="casa/Quanta/MVRadialVelocity.cc" bodystart="119" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVRadialVelocity_1a20a500100d3600a9da19aa512a193948" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacecasacore_1abd5691f9e13acc90d901e4007740ff98" kindref="member">Bool</ref></type>
        <definition>Bool casacore::MVRadialVelocity::nearAbs</definition>
        <argsstring>(const MVRadialVelocity &amp;other, Double tol=1e-13) const</argsstring>
        <name>nearAbs</name>
        <param>
          <type>const <ref refid="classcasacore_1_1MVRadialVelocity" kindref="compound">MVRadialVelocity</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <param>
          <type><ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref></type>
          <declname>tol</declname>
          <defval>1e-13</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVRadialVelocity.h" line="136" column="8" bodyfile="casa/Quanta/MVRadialVelocity.cc" bodystart="123" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVRadialVelocity_1a642dce9c672bd528307930c2e25929af" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void casacore::MVRadialVelocity::print</definition>
        <argsstring>(ostream &amp;os) const</argsstring>
        <name>print</name>
        <reimplements refid="classcasacore_1_1MeasValue_1a716675982631833dc629df28d442b044">print</reimplements>
        <param>
          <type>ostream &amp;</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVRadialVelocity.h" line="147" column="16" bodyfile="casa/Quanta/MVRadialVelocity.cc" bodystart="135" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVRadialVelocity_1a76f70f632ad771bbdb4a8a0c9ff1a66e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classcasacore_1_1MeasValue" kindref="compound">MeasValue</ref> *</type>
        <definition>MeasValue * casacore::MVRadialVelocity::clone</definition>
        <argsstring>() const</argsstring>
        <name>clone</name>
        <reimplements refid="classcasacore_1_1MeasValue_1a5bba6fea0b17795f8653a130e0cfc224">clone</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVRadialVelocity.h" line="149" column="21" bodyfile="casa/Quanta/MVRadialVelocity.cc" bodystart="139" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVRadialVelocity_1ad4c841a4f1a88cff05f629e921447bf3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref></type>
        <definition>Double casacore::MVRadialVelocity::getValue</definition>
        <argsstring>() const</argsstring>
        <name>getValue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVRadialVelocity.h" line="152" column="10" bodyfile="casa/Quanta/MVRadialVelocity.cc" bodystart="143" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVRadialVelocity_1a8ebbe8ffb1c1234d9144465423ffe847" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacecasacore_1ad5429fefc00b65ab7ddb394a0e3fa410" kindref="member">Quantity</ref></type>
        <definition>Quantity casacore::MVRadialVelocity::get</definition>
        <argsstring>() const</argsstring>
        <name>get</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVRadialVelocity.h" line="154" column="12" bodyfile="casa/Quanta/MVRadialVelocity.cc" bodystart="147" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVRadialVelocity_1ae5d24f7787684070c41dd764fb0d21f7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacecasacore_1ad5429fefc00b65ab7ddb394a0e3fa410" kindref="member">Quantity</ref></type>
        <definition>Quantity casacore::MVRadialVelocity::get</definition>
        <argsstring>(const Unit &amp;unit) const</argsstring>
        <name>get</name>
        <param>
          <type>const <ref refid="classcasacore_1_1Unit" kindref="compound">Unit</ref> &amp;</type>
          <declname>unit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVRadialVelocity.h" line="156" column="12" bodyfile="casa/Quanta/MVRadialVelocity.cc" bodystart="151" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVRadialVelocity_1ac9e8e435bd39040732645b3c84e6ced8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classcasacore_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref> &gt;</type>
        <definition>Vector&lt; Double &gt; casacore::MVRadialVelocity::getVector</definition>
        <argsstring>() const</argsstring>
        <name>getVector</name>
        <reimplements refid="classcasacore_1_1MeasValue_1aaca85a82a8f69baad3083dd105fc579f">getVector</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVRadialVelocity.h" line="158" column="18" bodyfile="casa/Quanta/MVRadialVelocity.cc" bodystart="155" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVRadialVelocity_1a7fcd326f464ba774d4eb1d8290022785" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void casacore::MVRadialVelocity::putVector</definition>
        <argsstring>(const Vector&lt; Double &gt; &amp;in)</argsstring>
        <name>putVector</name>
        <reimplements refid="classcasacore_1_1MeasValue_1a12d50c3e5db0e002f6575f4972b16eae">putVector</reimplements>
        <param>
          <type>const <ref refid="classcasacore_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref> &gt; &amp;</type>
          <declname>in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVRadialVelocity.h" line="160" column="16" bodyfile="casa/Quanta/MVRadialVelocity.cc" bodystart="161" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVRadialVelocity_1aa87fce7c40cd8947c0661219bbf7f9d5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classcasacore_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classcasacore_1_1Quantum" kindref="compound">Quantum</ref>&lt; <ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref> &gt; &gt;</type>
        <definition>Vector&lt; Quantum&lt; Double &gt; &gt; casacore::MVRadialVelocity::getRecordValue</definition>
        <argsstring>() const</argsstring>
        <name>getRecordValue</name>
        <reimplements refid="classcasacore_1_1MeasValue_1ac7bacf620e474a54fd4184b83ad8c3b3">getRecordValue</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVRadialVelocity.h" line="165" column="18" bodyfile="casa/Quanta/MVRadialVelocity.cc" bodystart="169" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVRadialVelocity_1a5c8fc11f5246fa35a3043cca11e461e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespacecasacore_1abd5691f9e13acc90d901e4007740ff98" kindref="member">Bool</ref></type>
        <definition>Bool casacore::MVRadialVelocity::putValue</definition>
        <argsstring>(const Vector&lt; Quantum&lt; Double &gt; &gt; &amp;in)</argsstring>
        <name>putValue</name>
        <reimplements refid="classcasacore_1_1MeasValue_1abdc9f23a6f2583e686952d982812da69">putValue</reimplements>
        <param>
          <type>const <ref refid="classcasacore_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classcasacore_1_1Quantum" kindref="compound">Quantum</ref>&lt; <ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref> &gt; &gt; &amp;</type>
          <declname>in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVRadialVelocity.h" line="168" column="16" bodyfile="casa/Quanta/MVRadialVelocity.cc" bodystart="175" bodyend="191"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVRadialVelocity_1a54aec3aae79cfde90005e4dc194792cb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classcasacore_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref> &gt;</type>
        <definition>Vector&lt; Double &gt; casacore::MVRadialVelocity::shiftFrequency</definition>
        <argsstring>(const Vector&lt; Double &gt; &amp;freq) const</argsstring>
        <name>shiftFrequency</name>
        <param>
          <type>const <ref refid="classcasacore_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref> &gt; &amp;</type>
          <declname>freq</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVRadialVelocity.h" line="173" column="10" bodyfile="casa/Quanta/MVRadialVelocity.cc" bodystart="194" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVRadialVelocity_1a5a09375e8d66b497324ec8adf95bd416" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classcasacore_1_1Quantum" kindref="compound">Quantum</ref>&lt; <ref refid="classcasacore_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref> &gt; &gt;</type>
        <definition>Quantum&lt; Vector&lt; Double &gt; &gt; casacore::MVRadialVelocity::shiftFrequency</definition>
        <argsstring>(const Quantum&lt; Vector&lt; Double &gt; &gt; &amp;freq) const</argsstring>
        <name>shiftFrequency</name>
        <param>
          <type>const <ref refid="classcasacore_1_1Quantum" kindref="compound">Quantum</ref>&lt; <ref refid="classcasacore_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref> &gt; &gt; &amp;</type>
          <declname>freq</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVRadialVelocity.h" line="175" column="5" bodyfile="casa/Quanta/MVRadialVelocity.cc" bodystart="203" bodyend="216"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classcasacore_1_1MVRadialVelocity_1a815f2145ec3a80f085016daf44b596ba" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void casacore::MVRadialVelocity::assure</definition>
        <argsstring>(const MeasValue &amp;in)</argsstring>
        <name>assure</name>
        <param>
          <type>const <ref refid="classcasacore_1_1MeasValue" kindref="compound">MeasValue</ref> &amp;</type>
          <declname>in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVRadialVelocity.h" line="143" column="15" bodyfile="casa/Quanta/MVRadialVelocity.cc" bodystart="129" bodyend="133"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classcasacore_1_1MVRadialVelocity_1a12e66bebd574cb416167a7d61ef2b503" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref></type>
        <definition>Double casacore::MVRadialVelocity::makeF</definition>
        <argsstring>(const Unit &amp;dt) const</argsstring>
        <name>makeF</name>
        <param>
          <type>const <ref refid="classcasacore_1_1Unit" kindref="compound">Unit</ref> &amp;</type>
          <declname>dt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVRadialVelocity.h" line="185" column="10" bodyfile="casa/Quanta/MVRadialVelocity.cc" bodystart="218" bodyend="222"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>casacore::MVRadialVelocity</label>
        <link refid="classcasacore_1_1MVRadialVelocity"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>casacore::MeasValue</label>
        <link refid="classcasacore_1_1MeasValue"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>casacore::MVRadialVelocity</label>
        <link refid="classcasacore_1_1MVRadialVelocity"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>casacore::MeasValue</label>
        <link refid="classcasacore_1_1MeasValue"/>
      </node>
    </collaborationgraph>
    <location file="casa/Quanta/MVRadialVelocity.h" line="91" column="1" bodyfile="casa/Quanta/MVRadialVelocity.h" bodystart="91" bodyend="186"/>
    <listofallmembers>
      <member refid="classcasacore_1_1MeasValue_1a350b5664f240c9054bf27b72e8d41d7a" prot="public" virt="virtual"><scope>casacore::MVRadialVelocity</scope><name>adjust</name></member>
      <member refid="classcasacore_1_1MeasValue_1a09f28dd3fff38b052f9b6638647eb41f" prot="public" virt="virtual"><scope>casacore::MVRadialVelocity</scope><name>adjust</name></member>
      <member refid="classcasacore_1_1MVRadialVelocity_1a815f2145ec3a80f085016daf44b596ba" prot="public" virt="non-virtual"><scope>casacore::MVRadialVelocity</scope><name>assure</name></member>
      <member refid="classcasacore_1_1MVRadialVelocity_1a76f70f632ad771bbdb4a8a0c9ff1a66e" prot="public" virt="virtual"><scope>casacore::MVRadialVelocity</scope><name>clone</name></member>
      <member refid="classcasacore_1_1MeasValue_1ad7a17bbec23ae48f4dafa55dbaea9b66" prot="public" virt="non-virtual"><scope>casacore::MVRadialVelocity</scope><name>dummy_constr</name></member>
      <member refid="classcasacore_1_1MeasValue_1add17b17e91be8f0d36e718a93514eca1" prot="public" virt="non-virtual"><scope>casacore::MVRadialVelocity</scope><name>dummy_operator</name></member>
      <member refid="classcasacore_1_1MVRadialVelocity_1a8ebbe8ffb1c1234d9144465423ffe847" prot="public" virt="non-virtual"><scope>casacore::MVRadialVelocity</scope><name>get</name></member>
      <member refid="classcasacore_1_1MVRadialVelocity_1ae5d24f7787684070c41dd764fb0d21f7" prot="public" virt="non-virtual"><scope>casacore::MVRadialVelocity</scope><name>get</name></member>
      <member refid="classcasacore_1_1MVRadialVelocity_1aa87fce7c40cd8947c0661219bbf7f9d5" prot="public" virt="virtual"><scope>casacore::MVRadialVelocity</scope><name>getRecordValue</name></member>
      <member refid="classcasacore_1_1MeasValue_1a401ff3a87fbaf2900d6c4bf6404ed531" prot="public" virt="virtual"><scope>casacore::MVRadialVelocity</scope><name>getTMRecordValue</name></member>
      <member refid="classcasacore_1_1MVRadialVelocity_1ad4c841a4f1a88cff05f629e921447bf3" prot="public" virt="non-virtual"><scope>casacore::MVRadialVelocity</scope><name>getValue</name></member>
      <member refid="classcasacore_1_1MVRadialVelocity_1ac9e8e435bd39040732645b3c84e6ced8" prot="public" virt="virtual"><scope>casacore::MVRadialVelocity</scope><name>getVector</name></member>
      <member refid="classcasacore_1_1MeasValue_1a05d77da82e54471f3ffc0d76133f94a2" prot="public" virt="virtual"><scope>casacore::MVRadialVelocity</scope><name>getXRecordValue</name></member>
      <member refid="classcasacore_1_1MVRadialVelocity_1a12e66bebd574cb416167a7d61ef2b503" prot="private" virt="non-virtual"><scope>casacore::MVRadialVelocity</scope><name>makeF</name></member>
      <member refid="classcasacore_1_1MVRadialVelocity_1a7deedb5b064d37f2f434a7ad25c9dfb1" prot="public" virt="non-virtual"><scope>casacore::MVRadialVelocity</scope><name>MVRadialVelocity</name></member>
      <member refid="classcasacore_1_1MVRadialVelocity_1a711919601c4b0121f096c4720a3e68e8" prot="public" virt="non-virtual"><scope>casacore::MVRadialVelocity</scope><name>MVRadialVelocity</name></member>
      <member refid="classcasacore_1_1MVRadialVelocity_1ac4f942c174373b258b051ddd8927607c" prot="public" virt="non-virtual"><scope>casacore::MVRadialVelocity</scope><name>MVRadialVelocity</name></member>
      <member refid="classcasacore_1_1MVRadialVelocity_1a6b60398983425a3e0b6c1d74291d61de" prot="public" virt="non-virtual"><scope>casacore::MVRadialVelocity</scope><name>MVRadialVelocity</name></member>
      <member refid="classcasacore_1_1MVRadialVelocity_1ac6e26f450d27c8ca20e636699033cdc2" prot="public" virt="non-virtual"><scope>casacore::MVRadialVelocity</scope><name>MVRadialVelocity</name></member>
      <member refid="classcasacore_1_1MVRadialVelocity_1a02ede291ae504666fefaaddb6d764e90" prot="public" virt="non-virtual"><scope>casacore::MVRadialVelocity</scope><name>MVRadialVelocity</name></member>
      <member refid="classcasacore_1_1MVRadialVelocity_1a04ceef7fc7f2605b852da979ab7bd5a5" prot="public" virt="non-virtual"><scope>casacore::MVRadialVelocity</scope><name>MVRadialVelocity</name></member>
      <member refid="classcasacore_1_1MVRadialVelocity_1ace57be181148a5be8da541b89d7f82d2" prot="public" virt="non-virtual"><scope>casacore::MVRadialVelocity</scope><name>near</name></member>
      <member refid="classcasacore_1_1MVRadialVelocity_1a20a500100d3600a9da19aa512a193948" prot="public" virt="non-virtual"><scope>casacore::MVRadialVelocity</scope><name>nearAbs</name></member>
      <member refid="classcasacore_1_1MVRadialVelocity_1a99bb8b30de314637e7101a7a203a11fd" prot="public" virt="non-virtual"><scope>casacore::MVRadialVelocity</scope><name>operator Double</name></member>
      <member refid="classcasacore_1_1MVRadialVelocity_1a2c81745787a6497a75c4019a59250889" prot="public" virt="non-virtual"><scope>casacore::MVRadialVelocity</scope><name>operator!=</name></member>
      <member refid="classcasacore_1_1MVRadialVelocity_1a47e9ebafe4f610e2f8f0b8b3ea0c9519" prot="public" virt="non-virtual"><scope>casacore::MVRadialVelocity</scope><name>operator+=</name></member>
      <member refid="classcasacore_1_1MVRadialVelocity_1a751f13c29837644ba25aa537460d9003" prot="public" virt="non-virtual"><scope>casacore::MVRadialVelocity</scope><name>operator-=</name></member>
      <member refid="classcasacore_1_1MVRadialVelocity_1afdcc9ad6f1f90cee97effba0a754d90f" prot="public" virt="non-virtual"><scope>casacore::MVRadialVelocity</scope><name>operator=</name></member>
      <member refid="classcasacore_1_1MVRadialVelocity_1a42980fc10144ed1a65d3ab6d85ee38a5" prot="public" virt="non-virtual"><scope>casacore::MVRadialVelocity</scope><name>operator==</name></member>
      <member refid="classcasacore_1_1MVRadialVelocity_1a642dce9c672bd528307930c2e25929af" prot="public" virt="virtual"><scope>casacore::MVRadialVelocity</scope><name>print</name></member>
      <member refid="classcasacore_1_1MVRadialVelocity_1a5c8fc11f5246fa35a3043cca11e461e3" prot="public" virt="virtual"><scope>casacore::MVRadialVelocity</scope><name>putValue</name></member>
      <member refid="classcasacore_1_1MVRadialVelocity_1a7fcd326f464ba774d4eb1d8290022785" prot="public" virt="virtual"><scope>casacore::MVRadialVelocity</scope><name>putVector</name></member>
      <member refid="classcasacore_1_1MeasValue_1a0559353e6ae41bb0b35ef95ff30428e7" prot="public" virt="virtual"><scope>casacore::MVRadialVelocity</scope><name>readjust</name></member>
      <member refid="classcasacore_1_1MVRadialVelocity_1a54aec3aae79cfde90005e4dc194792cb" prot="public" virt="non-virtual"><scope>casacore::MVRadialVelocity</scope><name>shiftFrequency</name></member>
      <member refid="classcasacore_1_1MVRadialVelocity_1a5a09375e8d66b497324ec8adf95bd416" prot="public" virt="non-virtual"><scope>casacore::MVRadialVelocity</scope><name>shiftFrequency</name></member>
      <member refid="classcasacore_1_1MVRadialVelocity_1af0e159e08a56e8990ccf655d4da73653" prot="private" virt="non-virtual"><scope>casacore::MVRadialVelocity</scope><name>val</name></member>
      <member refid="classcasacore_1_1MeasValue_1a70316dc2a17d2d9471f858df3001817c" prot="public" virt="virtual"><scope>casacore::MVRadialVelocity</scope><name>~MeasValue</name></member>
      <member refid="classcasacore_1_1MVRadialVelocity_1a88ec542bc314db98ca3e37abdf38117d" prot="public" virt="non-virtual"><scope>casacore::MVRadialVelocity</scope><name>~MVRadialVelocity</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
