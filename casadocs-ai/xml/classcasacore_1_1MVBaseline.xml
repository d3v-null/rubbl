<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classcasacore_1_1MVBaseline" kind="class" language="C++" prot="public">
    <compoundname>casacore::MVBaseline</compoundname>
    <basecompoundref refid="classcasacore_1_1MVPosition" prot="public" virt="non-virtual">casacore::MVPosition</basecompoundref>
    <includes refid="MVBaseline_8h" local="no">MVBaseline.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classcasacore_1_1MVBaseline_1a7d602b6b286ae54af91d6b6e5e911690" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>casacore::MVBaseline::MVBaseline</definition>
        <argsstring>()</argsstring>
        <name>MVBaseline</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVBaseline.h" line="114" column="3" bodyfile="casa/Quanta/MVBaseline.cc" bodystart="43" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVBaseline_1ab3631808731ea37c34333c359e524164" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>casacore::MVBaseline::MVBaseline</definition>
        <argsstring>(const MVPosition &amp;other)</argsstring>
        <name>MVBaseline</name>
        <param>
          <type>const <ref refid="classcasacore_1_1MVPosition" kindref="compound">MVPosition</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVBaseline.h" line="116" column="3" bodyfile="casa/Quanta/MVBaseline.cc" bodystart="84" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVBaseline_1a4e571c111f0eff02c8fb605a62f86e19" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>casacore::MVBaseline::MVBaseline</definition>
        <argsstring>(Double in0, Double in1, Double in2)</argsstring>
        <name>MVBaseline</name>
        <param>
          <type><ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref></type>
          <declname>in0</declname>
        </param>
        <param>
          <type><ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref></type>
          <declname>in1</declname>
        </param>
        <param>
          <type><ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref></type>
          <declname>in2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVBaseline.h" line="118" column="3" bodyfile="casa/Quanta/MVBaseline.cc" bodystart="52" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVBaseline_1a8eb240fdbf7dbf4b4f74ffa62ab67d92" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>casacore::MVBaseline::MVBaseline</definition>
        <argsstring>(Double in0)</argsstring>
        <name>MVBaseline</name>
        <param>
          <type><ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref></type>
          <declname>in0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVBaseline.h" line="121" column="12" bodyfile="casa/Quanta/MVBaseline.cc" bodystart="46" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVBaseline_1a8dea946778ff3b216695a5ea4525878b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>casacore::MVBaseline::MVBaseline</definition>
        <argsstring>(const Quantity &amp;l)</argsstring>
        <name>MVBaseline</name>
        <param>
          <type>const <ref refid="namespacecasacore_1ad5429fefc00b65ab7ddb394a0e3fa410" kindref="member">Quantity</ref> &amp;</type>
          <declname>l</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVBaseline.h" line="122" column="3" bodyfile="casa/Quanta/MVBaseline.cc" bodystart="49" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVBaseline_1af1c7d9fe9bc425fb5bdd12c7105ca263" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>casacore::MVBaseline::MVBaseline</definition>
        <argsstring>(const Quantity &amp;l, Double angle0, Double angle1)</argsstring>
        <name>MVBaseline</name>
        <param>
          <type>const <ref refid="namespacecasacore_1ad5429fefc00b65ab7ddb394a0e3fa410" kindref="member">Quantity</ref> &amp;</type>
          <declname>l</declname>
        </param>
        <param>
          <type><ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref></type>
          <declname>angle0</declname>
        </param>
        <param>
          <type><ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref></type>
          <declname>angle1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVBaseline.h" line="125" column="3" bodyfile="casa/Quanta/MVBaseline.cc" bodystart="55" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVBaseline_1a7d48efb9aba0a9f6d4893d7a1438ae7b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>casacore::MVBaseline::MVBaseline</definition>
        <argsstring>(const Quantity &amp;l, const Quantity &amp;angle0, const Quantity &amp;angle1)</argsstring>
        <name>MVBaseline</name>
        <param>
          <type>const <ref refid="namespacecasacore_1ad5429fefc00b65ab7ddb394a0e3fa410" kindref="member">Quantity</ref> &amp;</type>
          <declname>l</declname>
        </param>
        <param>
          <type>const <ref refid="namespacecasacore_1ad5429fefc00b65ab7ddb394a0e3fa410" kindref="member">Quantity</ref> &amp;</type>
          <declname>angle0</declname>
        </param>
        <param>
          <type>const <ref refid="namespacecasacore_1ad5429fefc00b65ab7ddb394a0e3fa410" kindref="member">Quantity</ref> &amp;</type>
          <declname>angle1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVBaseline.h" line="131" column="3" bodyfile="casa/Quanta/MVBaseline.cc" bodystart="58" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVBaseline_1a814e27662db75ba8c12c567252bf87cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>casacore::MVBaseline::MVBaseline</definition>
        <argsstring>(const Quantum&lt; Vector&lt; Double &gt; &gt; &amp;angle)</argsstring>
        <name>MVBaseline</name>
        <param>
          <type>const <ref refid="classcasacore_1_1Quantum" kindref="compound">Quantum</ref>&lt; <ref refid="classcasacore_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref> &gt; &gt; &amp;</type>
          <declname>angle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVBaseline.h" line="134" column="3" bodyfile="casa/Quanta/MVBaseline.cc" bodystart="62" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVBaseline_1af5833008cc3c6419f69104c2d32ca95d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>casacore::MVBaseline::MVBaseline</definition>
        <argsstring>(const Quantity &amp;l, const Quantum&lt; Vector&lt; Double &gt; &gt; &amp;angle)</argsstring>
        <name>MVBaseline</name>
        <param>
          <type>const <ref refid="namespacecasacore_1ad5429fefc00b65ab7ddb394a0e3fa410" kindref="member">Quantity</ref> &amp;</type>
          <declname>l</declname>
        </param>
        <param>
          <type>const <ref refid="classcasacore_1_1Quantum" kindref="compound">Quantum</ref>&lt; <ref refid="classcasacore_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref> &gt; &gt; &amp;</type>
          <declname>angle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVBaseline.h" line="135" column="3" bodyfile="casa/Quanta/MVBaseline.cc" bodystart="65" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVBaseline_1a3910b32bc361b3682ad73de9c2d7735b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>casacore::MVBaseline::MVBaseline</definition>
        <argsstring>(const Vector&lt; Double &gt; &amp;other)</argsstring>
        <name>MVBaseline</name>
        <param>
          <type>const <ref refid="classcasacore_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref> &gt; &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVBaseline.h" line="139" column="3" bodyfile="casa/Quanta/MVBaseline.cc" bodystart="69" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVBaseline_1a478761aff160cb26a5e21e1212d30532" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>casacore::MVBaseline::MVBaseline</definition>
        <argsstring>(const Vector&lt; Quantity &gt; &amp;other)</argsstring>
        <name>MVBaseline</name>
        <param>
          <type>const <ref refid="classcasacore_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespacecasacore_1ad5429fefc00b65ab7ddb394a0e3fa410" kindref="member">Quantity</ref> &gt; &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVBaseline.h" line="140" column="3" bodyfile="casa/Quanta/MVBaseline.cc" bodystart="72" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVBaseline_1a89150dd5ab17857d2170fef3772f178c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>casacore::MVBaseline::MVBaseline</definition>
        <argsstring>(const MVPosition &amp;pos, const MVPosition &amp;base)</argsstring>
        <name>MVBaseline</name>
        <param>
          <type>const <ref refid="classcasacore_1_1MVPosition" kindref="compound">MVPosition</ref> &amp;</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>const <ref refid="classcasacore_1_1MVPosition" kindref="compound">MVPosition</ref> &amp;</type>
          <declname>base</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVBaseline.h" line="144" column="3" bodyfile="casa/Quanta/MVBaseline.cc" bodystart="79" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVBaseline_1ac4ddfdc7b291b83985f4153cf7968385" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref></type>
        <definition>Double casacore::MVBaseline::operator*</definition>
        <argsstring>(const MVBaseline &amp;other) const</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="classcasacore_1_1MVBaseline" kindref="compound">MVBaseline</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVBaseline.h" line="150" column="10" bodyfile="casa/Quanta/MVBaseline.cc" bodystart="114" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVBaseline_1a7b892d9d6d80ce7cdd5d0cf56bd17a08" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacecasacore_1abd5691f9e13acc90d901e4007740ff98" kindref="member">Bool</ref></type>
        <definition>Bool casacore::MVBaseline::operator==</definition>
        <argsstring>(const MVBaseline &amp;other) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classcasacore_1_1MVBaseline" kindref="compound">MVBaseline</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVBaseline.h" line="155" column="8" bodyfile="casa/Quanta/MVBaseline.cc" bodystart="89" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVBaseline_1a1fc1b275117442d8d1e618757319f550" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacecasacore_1abd5691f9e13acc90d901e4007740ff98" kindref="member">Bool</ref></type>
        <definition>Bool casacore::MVBaseline::operator!=</definition>
        <argsstring>(const MVBaseline &amp;other) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classcasacore_1_1MVBaseline" kindref="compound">MVBaseline</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVBaseline.h" line="156" column="8" bodyfile="casa/Quanta/MVBaseline.cc" bodystart="94" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVBaseline_1a3876e2c4d09f002cdeebba3df2ae545c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacecasacore_1abd5691f9e13acc90d901e4007740ff98" kindref="member">Bool</ref></type>
        <definition>Bool casacore::MVBaseline::near</definition>
        <argsstring>(const MVBaseline &amp;other, Double tol=1e-13) const</argsstring>
        <name>near</name>
        <param>
          <type>const <ref refid="classcasacore_1_1MVBaseline" kindref="compound">MVBaseline</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <param>
          <type><ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref></type>
          <declname>tol</declname>
          <defval>1e-13</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVBaseline.h" line="157" column="8" bodyfile="casa/Quanta/MVBaseline.cc" bodystart="99" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVBaseline_1a17f2afb67bb4527d43fb67f834db1ff1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacecasacore_1abd5691f9e13acc90d901e4007740ff98" kindref="member">Bool</ref></type>
        <definition>Bool casacore::MVBaseline::near</definition>
        <argsstring>(const MVBaseline &amp;other, Quantity tol) const</argsstring>
        <name>near</name>
        <param>
          <type>const <ref refid="classcasacore_1_1MVBaseline" kindref="compound">MVBaseline</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <param>
          <type><ref refid="namespacecasacore_1ad5429fefc00b65ab7ddb394a0e3fa410" kindref="member">Quantity</ref></type>
          <declname>tol</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVBaseline.h" line="158" column="8" bodyfile="casa/Quanta/MVBaseline.cc" bodystart="104" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVBaseline_1ad15eb23e8e1436d02904c00d0c8cd2d1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacecasacore_1abd5691f9e13acc90d901e4007740ff98" kindref="member">Bool</ref></type>
        <definition>Bool casacore::MVBaseline::nearAbs</definition>
        <argsstring>(const MVBaseline &amp;other, Double tol=1e-13) const</argsstring>
        <name>nearAbs</name>
        <param>
          <type>const <ref refid="classcasacore_1_1MVBaseline" kindref="compound">MVBaseline</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <param>
          <type><ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref></type>
          <declname>tol</declname>
          <defval>1e-13</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVBaseline.h" line="159" column="8" bodyfile="casa/Quanta/MVBaseline.cc" bodystart="109" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVBaseline_1a7c35019e67a0eef78518daddca4b6589" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classcasacore_1_1MVBaseline" kindref="compound">MVBaseline</ref></type>
        <definition>MVBaseline casacore::MVBaseline::operator-</definition>
        <argsstring>() const</argsstring>
        <name>operator-</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVBaseline.h" line="164" column="14" bodyfile="casa/Quanta/MVBaseline.cc" bodystart="122" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVBaseline_1af954c1eefcc2343f664de63145923de8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classcasacore_1_1MVBaseline" kindref="compound">MVBaseline</ref> &amp;</type>
        <definition>MVBaseline &amp; casacore::MVBaseline::operator+=</definition>
        <argsstring>(const MVBaseline &amp;right)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const <ref refid="classcasacore_1_1MVBaseline" kindref="compound">MVBaseline</ref> &amp;</type>
          <declname>right</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVBaseline.h" line="165" column="14" bodyfile="casa/Quanta/MVBaseline.cc" bodystart="128" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVBaseline_1a059d0ae20235d5455d5cc27c8e55ef7e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classcasacore_1_1MVBaseline" kindref="compound">MVBaseline</ref></type>
        <definition>MVBaseline casacore::MVBaseline::operator+</definition>
        <argsstring>(const MVBaseline &amp;right) const</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="classcasacore_1_1MVBaseline" kindref="compound">MVBaseline</ref> &amp;</type>
          <declname>right</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVBaseline.h" line="166" column="14" bodyfile="casa/Quanta/MVBaseline.cc" bodystart="133" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVBaseline_1af35933c6e79fa7d9544d7aa48ffed068" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classcasacore_1_1MVBaseline" kindref="compound">MVBaseline</ref> &amp;</type>
        <definition>MVBaseline &amp; casacore::MVBaseline::operator-=</definition>
        <argsstring>(const MVBaseline &amp;right)</argsstring>
        <name>operator-=</name>
        <param>
          <type>const <ref refid="classcasacore_1_1MVBaseline" kindref="compound">MVBaseline</ref> &amp;</type>
          <declname>right</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVBaseline.h" line="167" column="14" bodyfile="casa/Quanta/MVBaseline.cc" bodystart="139" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVBaseline_1ae908d3cd29787e78016dddf97ae71c2e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classcasacore_1_1MVBaseline" kindref="compound">MVBaseline</ref></type>
        <definition>MVBaseline casacore::MVBaseline::operator-</definition>
        <argsstring>(const MVBaseline &amp;right) const</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="classcasacore_1_1MVBaseline" kindref="compound">MVBaseline</ref> &amp;</type>
          <declname>right</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVBaseline.h" line="168" column="14" bodyfile="casa/Quanta/MVBaseline.cc" bodystart="144" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVBaseline_1a8e30d6fa838e81f574025be3d2b05fbf" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void casacore::MVBaseline::adjust</definition>
        <argsstring>()</argsstring>
        <name>adjust</name>
        <reimplements refid="classcasacore_1_1MVPosition_1acabaf16edfb55c50ed5cf957fd9cd577">adjust</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVBaseline.h" line="180" column="16" bodyfile="casa/Quanta/MVBaseline.cc" bodystart="158" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVBaseline_1ab0027fc452d42a6429319de143e7a1e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void casacore::MVBaseline::adjust</definition>
        <argsstring>(Double &amp;res)</argsstring>
        <name>adjust</name>
        <reimplements refid="classcasacore_1_1MVPosition_1afe19293de36f0fafd5c970405febc65b">adjust</reimplements>
        <param>
          <type><ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref> &amp;</type>
          <declname>res</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVBaseline.h" line="181" column="16" bodyfile="casa/Quanta/MVBaseline.cc" bodystart="160" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVBaseline_1a129d06e0487dce1276a4780e769a986e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void casacore::MVBaseline::readjust</definition>
        <argsstring>(Double res)</argsstring>
        <name>readjust</name>
        <reimplements refid="classcasacore_1_1MVPosition_1aa23861f4d6690deef7859592d8b30168">readjust</reimplements>
        <param>
          <type><ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref></type>
          <declname>res</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVBaseline.h" line="182" column="16" bodyfile="casa/Quanta/MVBaseline.cc" bodystart="167" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVBaseline_1a822c5314134033da2c39f3a11078e589" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref></type>
        <definition>Double casacore::MVBaseline::radius</definition>
        <argsstring>()</argsstring>
        <name>radius</name>
        <reimplements refid="classcasacore_1_1MVPosition_1aebfd2bfb4a082d8d13421e77cea3d594">radius</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVBaseline.h" line="185" column="18" bodyfile="casa/Quanta/MVBaseline.cc" bodystart="175" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVBaseline_1ac592621a7360177edc7afef01142a703" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classcasacore_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref> &gt;</type>
        <definition>Vector&lt; Double &gt; casacore::MVBaseline::get</definition>
        <argsstring>() const</argsstring>
        <name>get</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVBaseline.h" line="187" column="10" bodyfile="casa/Quanta/MVBaseline.cc" bodystart="179" bodyend="191"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVBaseline_1ab5096790ca02ded0e12db38b75e3fea4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classcasacore_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref> &gt; &amp;</type>
        <definition>const Vector&lt; Double &gt; &amp; casacore::MVBaseline::getValue</definition>
        <argsstring>() const</argsstring>
        <name>getValue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVBaseline.h" line="189" column="16" bodyfile="casa/Quanta/MVBaseline.cc" bodystart="193" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVBaseline_1a512d1e8f6beffd197a72a4fca2715fa6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classcasacore_1_1Quantum" kindref="compound">Quantum</ref>&lt; <ref refid="classcasacore_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref> &gt; &gt;</type>
        <definition>Quantum&lt; Vector&lt; Double &gt; &gt; casacore::MVBaseline::getAngle</definition>
        <argsstring>() const</argsstring>
        <name>getAngle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVBaseline.h" line="191" column="11" bodyfile="casa/Quanta/MVBaseline.cc" bodystart="197" bodyend="203"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVBaseline_1aaebfc657fd811d424e2eb2783361a102" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classcasacore_1_1Quantum" kindref="compound">Quantum</ref>&lt; <ref refid="classcasacore_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref> &gt; &gt;</type>
        <definition>Quantum&lt; Vector&lt; Double &gt; &gt; casacore::MVBaseline::getAngle</definition>
        <argsstring>(const Unit &amp;unit) const</argsstring>
        <name>getAngle</name>
        <param>
          <type>const <ref refid="classcasacore_1_1Unit" kindref="compound">Unit</ref> &amp;</type>
          <declname>unit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVBaseline.h" line="193" column="11" bodyfile="casa/Quanta/MVBaseline.cc" bodystart="205" bodyend="207"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVBaseline_1a3091c714f779cc5f4574b604d93bcbcc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacecasacore_1ad5429fefc00b65ab7ddb394a0e3fa410" kindref="member">Quantity</ref></type>
        <definition>Quantity casacore::MVBaseline::getLength</definition>
        <argsstring>() const</argsstring>
        <name>getLength</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVBaseline.h" line="195" column="12" bodyfile="casa/Quanta/MVBaseline.cc" bodystart="209" bodyend="212"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVBaseline_1a495574c6d951335f2b23feeae16855d0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacecasacore_1ad5429fefc00b65ab7ddb394a0e3fa410" kindref="member">Quantity</ref></type>
        <definition>Quantity casacore::MVBaseline::getLength</definition>
        <argsstring>(const Unit &amp;unit) const</argsstring>
        <name>getLength</name>
        <param>
          <type>const <ref refid="classcasacore_1_1Unit" kindref="compound">Unit</ref> &amp;</type>
          <declname>unit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVBaseline.h" line="197" column="12" bodyfile="casa/Quanta/MVBaseline.cc" bodystart="214" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVBaseline_1afeb7a9435fd92bf2d40b2032fb8daf35" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref></type>
        <definition>Double casacore::MVBaseline::BaselineAngle</definition>
        <argsstring>(const MVBaseline &amp;other) const</argsstring>
        <name>BaselineAngle</name>
        <param>
          <type>const <ref refid="classcasacore_1_1MVBaseline" kindref="compound">MVBaseline</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVBaseline.h" line="201" column="10" bodyfile="casa/Quanta/MVBaseline.cc" bodystart="218" bodyend="232"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVBaseline_1aacde25c899a05b0bfd357d38fd813dca" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacecasacore_1ad5429fefc00b65ab7ddb394a0e3fa410" kindref="member">Quantity</ref></type>
        <definition>Quantity casacore::MVBaseline::BaselineAngle</definition>
        <argsstring>(const MVBaseline &amp;other, const Unit &amp;unit) const</argsstring>
        <name>BaselineAngle</name>
        <param>
          <type>const <ref refid="classcasacore_1_1MVBaseline" kindref="compound">MVBaseline</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <param>
          <type>const <ref refid="classcasacore_1_1Unit" kindref="compound">Unit</ref> &amp;</type>
          <declname>unit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVBaseline.h" line="202" column="12" bodyfile="casa/Quanta/MVBaseline.cc" bodystart="234" bodyend="237"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVBaseline_1a07f96c6bb32fe50184989982d561a559" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref></type>
        <definition>Double casacore::MVBaseline::separation</definition>
        <argsstring>(const MVBaseline &amp;other) const</argsstring>
        <name>separation</name>
        <param>
          <type>const <ref refid="classcasacore_1_1MVBaseline" kindref="compound">MVBaseline</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVBaseline.h" line="207" column="10" bodyfile="casa/Quanta/MVBaseline.cc" bodystart="239" bodyend="247"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVBaseline_1ac73116ee4102cf8df95e4c20f272c2fb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacecasacore_1ad5429fefc00b65ab7ddb394a0e3fa410" kindref="member">Quantity</ref></type>
        <definition>Quantity casacore::MVBaseline::separation</definition>
        <argsstring>(const MVBaseline &amp;other, const Unit &amp;unit) const</argsstring>
        <name>separation</name>
        <param>
          <type>const <ref refid="classcasacore_1_1MVBaseline" kindref="compound">MVBaseline</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <param>
          <type>const <ref refid="classcasacore_1_1Unit" kindref="compound">Unit</ref> &amp;</type>
          <declname>unit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVBaseline.h" line="208" column="12" bodyfile="casa/Quanta/MVBaseline.cc" bodystart="249" bodyend="252"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVBaseline_1a718622b41e9359ad8e56d161ef764d35" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classcasacore_1_1MVBaseline" kindref="compound">MVBaseline</ref></type>
        <definition>MVBaseline casacore::MVBaseline::crossProduct</definition>
        <argsstring>(const MVBaseline &amp;other) const</argsstring>
        <name>crossProduct</name>
        <param>
          <type>const <ref refid="classcasacore_1_1MVBaseline" kindref="compound">MVBaseline</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVBaseline.h" line="212" column="14" bodyfile="casa/Quanta/MVBaseline.cc" bodystart="254" bodyend="260"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVBaseline_1a09132e576b221ded1d4de3b95c93caa7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void casacore::MVBaseline::print</definition>
        <argsstring>(ostream &amp;os) const</argsstring>
        <name>print</name>
        <reimplements refid="classcasacore_1_1MVPosition_1a2d85396aadbf283d3f65bf878ace4dab">print</reimplements>
        <param>
          <type>ostream &amp;</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVBaseline.h" line="215" column="16" bodyfile="casa/Quanta/MVBaseline.cc" bodystart="262" bodyend="264"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVBaseline_1a6e17a8a5cb10c1e6facd5be0ef8aa108" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classcasacore_1_1MeasValue" kindref="compound">MeasValue</ref> *</type>
        <definition>MeasValue * casacore::MVBaseline::clone</definition>
        <argsstring>() const</argsstring>
        <name>clone</name>
        <reimplements refid="classcasacore_1_1MVPosition_1acc7d1937c1f01e2ec7b7ee5bec19f33b">clone</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVBaseline.h" line="217" column="21" bodyfile="casa/Quanta/MVBaseline.cc" bodystart="266" bodyend="268"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVBaseline_1a5bd35dda80f1ac43b23761a4b45cc3ed" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classcasacore_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref> &gt;</type>
        <definition>Vector&lt; Double &gt; casacore::MVBaseline::getVector</definition>
        <argsstring>() const</argsstring>
        <name>getVector</name>
        <reimplements refid="classcasacore_1_1MVPosition_1a440d872c8a8f139d7b28d75bb8f81194">getVector</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVBaseline.h" line="220" column="18" bodyfile="casa/Quanta/MVBaseline.cc" bodystart="270" bodyend="272"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVBaseline_1af88e504566e9f39d4ed4bbbe8ce182d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void casacore::MVBaseline::putVector</definition>
        <argsstring>(const Vector&lt; Double &gt; &amp;in)</argsstring>
        <name>putVector</name>
        <reimplements refid="classcasacore_1_1MVPosition_1aabc5d0c324c0ffdedd7b2c39ac3f4c03">putVector</reimplements>
        <param>
          <type>const <ref refid="classcasacore_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref> &gt; &amp;</type>
          <declname>in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVBaseline.h" line="222" column="16" bodyfile="casa/Quanta/MVBaseline.cc" bodystart="274" bodyend="281"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVBaseline_1a94a7a207821fb18e6f4ac6379015a4d8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classcasacore_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classcasacore_1_1Quantum" kindref="compound">Quantum</ref>&lt; <ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref> &gt; &gt;</type>
        <definition>Vector&lt; Quantum&lt; Double &gt; &gt; casacore::MVBaseline::getRecordValue</definition>
        <argsstring>() const</argsstring>
        <name>getRecordValue</name>
        <reimplements refid="classcasacore_1_1MVPosition_1a843904cfb90a9c7f9db5cbe1de9d623f">getRecordValue</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVBaseline.h" line="227" column="18" bodyfile="casa/Quanta/MVBaseline.cc" bodystart="283" bodyend="291"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVBaseline_1a541cca6eac09da19a51ce173943c1a58" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classcasacore_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classcasacore_1_1Quantum" kindref="compound">Quantum</ref>&lt; <ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref> &gt; &gt;</type>
        <definition>Vector&lt; Quantum&lt; Double &gt; &gt; casacore::MVBaseline::getXRecordValue</definition>
        <argsstring>() const</argsstring>
        <name>getXRecordValue</name>
        <reimplements refid="classcasacore_1_1MVPosition_1a4d9eba179562560e2d436fa9439cde0f">getXRecordValue</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVBaseline.h" line="228" column="18" bodyfile="casa/Quanta/MVBaseline.cc" bodystart="293" bodyend="299"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVBaseline_1ac9cf1edb40a8ac76b2b9054dfaaa4de3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classcasacore_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classcasacore_1_1Quantum" kindref="compound">Quantum</ref>&lt; <ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref> &gt; &gt;</type>
        <definition>virtual Vector&lt;Quantum&lt;Double&gt; &gt; casacore::MVBaseline::getTMRecordValue</definition>
        <argsstring>() const</argsstring>
        <name>getTMRecordValue</name>
        <reimplements refid="classcasacore_1_1MVPosition_1ac842e2c10b1eff8890b22a7582862594">getTMRecordValue</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVBaseline.h" line="229" column="18" bodyfile="casa/Quanta/MVBaseline.h" bodystart="229" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVBaseline_1ab3e6ae1727c837cd330dcdb3492a7395" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespacecasacore_1abd5691f9e13acc90d901e4007740ff98" kindref="member">Bool</ref></type>
        <definition>Bool casacore::MVBaseline::putValue</definition>
        <argsstring>(const Vector&lt; Quantum&lt; Double &gt; &gt; &amp;in)</argsstring>
        <name>putValue</name>
        <reimplements refid="classcasacore_1_1MVPosition_1add77871b6ecafe2c6e5fdcae8071ae02">putValue</reimplements>
        <param>
          <type>const <ref refid="classcasacore_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classcasacore_1_1Quantum" kindref="compound">Quantum</ref>&lt; <ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref> &gt; &gt; &amp;</type>
          <declname>in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVBaseline.h" line="233" column="16" bodyfile="casa/Quanta/MVBaseline.cc" bodystart="301" bodyend="344"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classcasacore_1_1MVBaseline_1a626c59cff03bfd05cc1ced979a2422a8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void casacore::MVBaseline::assure</definition>
        <argsstring>(const MeasValue &amp;in)</argsstring>
        <name>assure</name>
        <param>
          <type>const <ref refid="classcasacore_1_1MeasValue" kindref="compound">MeasValue</ref> &amp;</type>
          <declname>in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVBaseline.h" line="175" column="15" bodyfile="casa/Quanta/MVBaseline.cc" bodystart="152" bodyend="156"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>casacore::MVPosition</label>
        <link refid="classcasacore_1_1MVPosition"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>casacore::MVBaseline</label>
        <link refid="classcasacore_1_1MVBaseline"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>casacore::MeasValue</label>
        <link refid="classcasacore_1_1MeasValue"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="9">
        <label>casacore::Array&lt; T &gt;::uninitializedType</label>
      </node>
      <node id="6">
        <label>casacore::ArrayBase</label>
        <link refid="classcasacore_1_1ArrayBase"/>
        <childnode refid="7" relation="usage">
          <edgelabel>inc_p</edgelabel>
          <edgelabel>length_p</edgelabel>
          <edgelabel>originalLength_p</edgelabel>
          <edgelabel>steps_p</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>casacore::IPosition</label>
        <link refid="classcasacore_1_1IPosition"/>
      </node>
      <node id="2">
        <label>casacore::MVPosition</label>
        <link refid="classcasacore_1_1MVPosition"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>xyz</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>casacore::MVBaseline</label>
        <link refid="classcasacore_1_1MVBaseline"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>std::shared_ptr&lt; casacore::arrays_internal::Storage&lt; Double &gt; &gt;</label>
      </node>
      <node id="4">
        <label>casacore::Vector&lt; Double &gt;</label>
        <link refid="classcasacore_1_1Vector"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>casacore::Array&lt; Double &gt;</label>
        <link refid="classcasacore_1_1Array"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>data_p</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>uninitialized</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>casacore::MeasValue</label>
        <link refid="classcasacore_1_1MeasValue"/>
      </node>
    </collaborationgraph>
    <location file="casa/Quanta/MVBaseline.h" line="106" column="1" bodyfile="casa/Quanta/MVBaseline.h" bodystart="106" bodyend="235"/>
    <listofallmembers>
      <member refid="classcasacore_1_1MVBaseline_1a8e30d6fa838e81f574025be3d2b05fbf" prot="public" virt="virtual"><scope>casacore::MVBaseline</scope><name>adjust</name></member>
      <member refid="classcasacore_1_1MVBaseline_1ab0027fc452d42a6429319de143e7a1e5" prot="public" virt="virtual"><scope>casacore::MVBaseline</scope><name>adjust</name></member>
      <member refid="classcasacore_1_1MVBaseline_1a626c59cff03bfd05cc1ced979a2422a8" prot="public" virt="non-virtual"><scope>casacore::MVBaseline</scope><name>assure</name></member>
      <member refid="classcasacore_1_1MVBaseline_1afeb7a9435fd92bf2d40b2032fb8daf35" prot="public" virt="non-virtual"><scope>casacore::MVBaseline</scope><name>BaselineAngle</name></member>
      <member refid="classcasacore_1_1MVBaseline_1aacde25c899a05b0bfd357d38fd813dca" prot="public" virt="non-virtual"><scope>casacore::MVBaseline</scope><name>BaselineAngle</name></member>
      <member refid="classcasacore_1_1MVBaseline_1a6e17a8a5cb10c1e6facd5be0ef8aa108" prot="public" virt="virtual"><scope>casacore::MVBaseline</scope><name>clone</name></member>
      <member refid="classcasacore_1_1MVBaseline_1a718622b41e9359ad8e56d161ef764d35" prot="public" virt="non-virtual"><scope>casacore::MVBaseline</scope><name>crossProduct</name></member>
      <member refid="classcasacore_1_1MVPosition_1ad048dab8bb58a2c8bb843e60a43e2a77" prot="public" virt="non-virtual" ambiguityscope="casacore::MVPosition::"><scope>casacore::MVBaseline</scope><name>crossProduct</name></member>
      <member refid="classcasacore_1_1MeasValue_1ad7a17bbec23ae48f4dafa55dbaea9b66" prot="public" virt="non-virtual"><scope>casacore::MVBaseline</scope><name>dummy_constr</name></member>
      <member refid="classcasacore_1_1MeasValue_1add17b17e91be8f0d36e718a93514eca1" prot="public" virt="non-virtual"><scope>casacore::MVBaseline</scope><name>dummy_operator</name></member>
      <member refid="classcasacore_1_1MVBaseline_1ac592621a7360177edc7afef01142a703" prot="public" virt="non-virtual"><scope>casacore::MVBaseline</scope><name>get</name></member>
      <member refid="classcasacore_1_1MVBaseline_1a512d1e8f6beffd197a72a4fca2715fa6" prot="public" virt="non-virtual"><scope>casacore::MVBaseline</scope><name>getAngle</name></member>
      <member refid="classcasacore_1_1MVBaseline_1aaebfc657fd811d424e2eb2783361a102" prot="public" virt="non-virtual"><scope>casacore::MVBaseline</scope><name>getAngle</name></member>
      <member refid="classcasacore_1_1MVPosition_1a7cda3724c193cb0b71d75f97acd9f469" prot="public" virt="non-virtual"><scope>casacore::MVBaseline</scope><name>getLat</name></member>
      <member refid="classcasacore_1_1MVPosition_1ae903227f05ba60df59c6650295e8f748" prot="public" virt="non-virtual"><scope>casacore::MVBaseline</scope><name>getLat</name></member>
      <member refid="classcasacore_1_1MVPosition_1af3fc113852bc91a9e244e052db5c5418" prot="protected" virt="non-virtual"><scope>casacore::MVBaseline</scope><name>getLat</name></member>
      <member refid="classcasacore_1_1MVBaseline_1a3091c714f779cc5f4574b604d93bcbcc" prot="public" virt="non-virtual"><scope>casacore::MVBaseline</scope><name>getLength</name></member>
      <member refid="classcasacore_1_1MVBaseline_1a495574c6d951335f2b23feeae16855d0" prot="public" virt="non-virtual"><scope>casacore::MVBaseline</scope><name>getLength</name></member>
      <member refid="classcasacore_1_1MVPosition_1a340743eb299e59b169c26814c0e19bbb" prot="public" virt="non-virtual"><scope>casacore::MVBaseline</scope><name>getLong</name></member>
      <member refid="classcasacore_1_1MVPosition_1af45d337c5cbb6f1871a483d3fa9f6846" prot="public" virt="non-virtual"><scope>casacore::MVBaseline</scope><name>getLong</name></member>
      <member refid="classcasacore_1_1MVBaseline_1a94a7a207821fb18e6f4ac6379015a4d8" prot="public" virt="virtual"><scope>casacore::MVBaseline</scope><name>getRecordValue</name></member>
      <member refid="classcasacore_1_1MVBaseline_1ac9cf1edb40a8ac76b2b9054dfaaa4de3" prot="public" virt="virtual"><scope>casacore::MVBaseline</scope><name>getTMRecordValue</name></member>
      <member refid="classcasacore_1_1MVBaseline_1ab5096790ca02ded0e12db38b75e3fea4" prot="public" virt="non-virtual"><scope>casacore::MVBaseline</scope><name>getValue</name></member>
      <member refid="classcasacore_1_1MVBaseline_1a5bd35dda80f1ac43b23761a4b45cc3ed" prot="public" virt="virtual"><scope>casacore::MVBaseline</scope><name>getVector</name></member>
      <member refid="classcasacore_1_1MVBaseline_1a541cca6eac09da19a51ce173943c1a58" prot="public" virt="virtual"><scope>casacore::MVBaseline</scope><name>getXRecordValue</name></member>
      <member refid="classcasacore_1_1MVPosition_1a3c8062b428e9a9ab2d8010cdbd79dde6" prot="public" virt="non-virtual"><scope>casacore::MVBaseline</scope><name>hiLimit</name></member>
      <member refid="classcasacore_1_1MVPosition_1a68d9e9d68fcfc5ede207cf9295cd2c41" prot="public" virt="non-virtual"><scope>casacore::MVBaseline</scope><name>loLimit</name></member>
      <member refid="classcasacore_1_1MVBaseline_1a7d602b6b286ae54af91d6b6e5e911690" prot="public" virt="non-virtual"><scope>casacore::MVBaseline</scope><name>MVBaseline</name></member>
      <member refid="classcasacore_1_1MVBaseline_1ab3631808731ea37c34333c359e524164" prot="public" virt="non-virtual"><scope>casacore::MVBaseline</scope><name>MVBaseline</name></member>
      <member refid="classcasacore_1_1MVBaseline_1a4e571c111f0eff02c8fb605a62f86e19" prot="public" virt="non-virtual"><scope>casacore::MVBaseline</scope><name>MVBaseline</name></member>
      <member refid="classcasacore_1_1MVBaseline_1a8eb240fdbf7dbf4b4f74ffa62ab67d92" prot="public" virt="non-virtual"><scope>casacore::MVBaseline</scope><name>MVBaseline</name></member>
      <member refid="classcasacore_1_1MVBaseline_1a8dea946778ff3b216695a5ea4525878b" prot="public" virt="non-virtual"><scope>casacore::MVBaseline</scope><name>MVBaseline</name></member>
      <member refid="classcasacore_1_1MVBaseline_1af1c7d9fe9bc425fb5bdd12c7105ca263" prot="public" virt="non-virtual"><scope>casacore::MVBaseline</scope><name>MVBaseline</name></member>
      <member refid="classcasacore_1_1MVBaseline_1a7d48efb9aba0a9f6d4893d7a1438ae7b" prot="public" virt="non-virtual"><scope>casacore::MVBaseline</scope><name>MVBaseline</name></member>
      <member refid="classcasacore_1_1MVBaseline_1a814e27662db75ba8c12c567252bf87cd" prot="public" virt="non-virtual"><scope>casacore::MVBaseline</scope><name>MVBaseline</name></member>
      <member refid="classcasacore_1_1MVBaseline_1af5833008cc3c6419f69104c2d32ca95d" prot="public" virt="non-virtual"><scope>casacore::MVBaseline</scope><name>MVBaseline</name></member>
      <member refid="classcasacore_1_1MVBaseline_1a3910b32bc361b3682ad73de9c2d7735b" prot="public" virt="non-virtual"><scope>casacore::MVBaseline</scope><name>MVBaseline</name></member>
      <member refid="classcasacore_1_1MVBaseline_1a478761aff160cb26a5e21e1212d30532" prot="public" virt="non-virtual"><scope>casacore::MVBaseline</scope><name>MVBaseline</name></member>
      <member refid="classcasacore_1_1MVBaseline_1a89150dd5ab17857d2170fef3772f178c" prot="public" virt="non-virtual"><scope>casacore::MVBaseline</scope><name>MVBaseline</name></member>
      <member refid="classcasacore_1_1MVPosition_1a21326a2f7332098fd7a9025aa488519d" prot="public" virt="non-virtual"><scope>casacore::MVBaseline</scope><name>MVPosition</name></member>
      <member refid="classcasacore_1_1MVPosition_1aa9269c847a2cd9befd81b498925ba39b" prot="public" virt="non-virtual"><scope>casacore::MVBaseline</scope><name>MVPosition</name></member>
      <member refid="classcasacore_1_1MVPosition_1ae0939f0ca999f393e8fee53c38a3eb48" prot="public" virt="non-virtual"><scope>casacore::MVBaseline</scope><name>MVPosition</name></member>
      <member refid="classcasacore_1_1MVPosition_1a6ea4ef67e7b39a6268c00740360c4dcb" prot="public" virt="non-virtual"><scope>casacore::MVBaseline</scope><name>MVPosition</name></member>
      <member refid="classcasacore_1_1MVPosition_1acc76d6d52f06f0cdcbb57da724d32068" prot="public" virt="non-virtual"><scope>casacore::MVBaseline</scope><name>MVPosition</name></member>
      <member refid="classcasacore_1_1MVPosition_1a5614b478f83000a84da696019936c62d" prot="public" virt="non-virtual"><scope>casacore::MVBaseline</scope><name>MVPosition</name></member>
      <member refid="classcasacore_1_1MVPosition_1a56011736511128a89cfbe7e82eae16f4" prot="public" virt="non-virtual"><scope>casacore::MVBaseline</scope><name>MVPosition</name></member>
      <member refid="classcasacore_1_1MVPosition_1a76b6aa4b72bdf076ba43dbe5f5fca679" prot="public" virt="non-virtual"><scope>casacore::MVBaseline</scope><name>MVPosition</name></member>
      <member refid="classcasacore_1_1MVPosition_1acb0e68e6099edd60cca074dddf61c4ca" prot="public" virt="non-virtual"><scope>casacore::MVBaseline</scope><name>MVPosition</name></member>
      <member refid="classcasacore_1_1MVPosition_1a894245bef2da6c29b3897f4ee7289ec7" prot="public" virt="non-virtual"><scope>casacore::MVBaseline</scope><name>MVPosition</name></member>
      <member refid="classcasacore_1_1MVPosition_1ad4d29cd21fac6b76c7465696975635a7" prot="public" virt="non-virtual"><scope>casacore::MVBaseline</scope><name>MVPosition</name></member>
      <member refid="classcasacore_1_1MVBaseline_1a3876e2c4d09f002cdeebba3df2ae545c" prot="public" virt="non-virtual"><scope>casacore::MVBaseline</scope><name>near</name></member>
      <member refid="classcasacore_1_1MVBaseline_1a17f2afb67bb4527d43fb67f834db1ff1" prot="public" virt="non-virtual"><scope>casacore::MVBaseline</scope><name>near</name></member>
      <member refid="classcasacore_1_1MVPosition_1ac687b17a87c1bffd54b561315a5534c0" prot="public" virt="non-virtual" ambiguityscope="casacore::MVPosition::"><scope>casacore::MVBaseline</scope><name>near</name></member>
      <member refid="classcasacore_1_1MVPosition_1ad8e6b7ef461f05b6fb23a187eda833f1" prot="public" virt="non-virtual" ambiguityscope="casacore::MVPosition::"><scope>casacore::MVBaseline</scope><name>near</name></member>
      <member refid="classcasacore_1_1MVBaseline_1ad15eb23e8e1436d02904c00d0c8cd2d1" prot="public" virt="non-virtual"><scope>casacore::MVBaseline</scope><name>nearAbs</name></member>
      <member refid="classcasacore_1_1MVPosition_1a981526d5e89d26d7f0c27656be3a5a75" prot="public" virt="non-virtual" ambiguityscope="casacore::MVPosition::"><scope>casacore::MVBaseline</scope><name>nearAbs</name></member>
      <member refid="classcasacore_1_1MVBaseline_1a1fc1b275117442d8d1e618757319f550" prot="public" virt="non-virtual"><scope>casacore::MVBaseline</scope><name>operator!=</name></member>
      <member refid="classcasacore_1_1MVPosition_1adbd146002c4d08ff4c51d3ddaa90ef13" prot="public" virt="non-virtual" ambiguityscope="casacore::MVPosition::"><scope>casacore::MVBaseline</scope><name>operator!=</name></member>
      <member refid="classcasacore_1_1MVPosition_1a05b7e5a99b2ddb5f92a665eb060c775d" prot="public" virt="non-virtual"><scope>casacore::MVBaseline</scope><name>operator()</name></member>
      <member refid="classcasacore_1_1MVPosition_1a2cdc2fb21309cecf4d25421d07de4341" prot="public" virt="non-virtual"><scope>casacore::MVBaseline</scope><name>operator()</name></member>
      <member refid="classcasacore_1_1MVBaseline_1ac4ddfdc7b291b83985f4153cf7968385" prot="public" virt="non-virtual"><scope>casacore::MVBaseline</scope><name>operator*</name></member>
      <member refid="classcasacore_1_1MVPosition_1a331c61874c56a808eaa72f1ec8677db1" prot="public" virt="non-virtual" ambiguityscope="casacore::MVPosition::"><scope>casacore::MVBaseline</scope><name>operator*</name></member>
      <member refid="classcasacore_1_1MVPosition_1a0e2795ad561ed43fe17bf59601b01653" prot="public" virt="non-virtual"><scope>casacore::MVBaseline</scope><name>operator*=</name></member>
      <member refid="classcasacore_1_1MVPosition_1ab0a7b145d31dcbacf3ec9509be83fcc7" prot="public" virt="non-virtual"><scope>casacore::MVBaseline</scope><name>operator*=</name></member>
      <member refid="classcasacore_1_1MVBaseline_1a059d0ae20235d5455d5cc27c8e55ef7e" prot="public" virt="non-virtual"><scope>casacore::MVBaseline</scope><name>operator+</name></member>
      <member refid="classcasacore_1_1MVPosition_1aed1b9388f3e6144aac671eda4b21de92" prot="public" virt="non-virtual" ambiguityscope="casacore::MVPosition::"><scope>casacore::MVBaseline</scope><name>operator+</name></member>
      <member refid="classcasacore_1_1MVBaseline_1af954c1eefcc2343f664de63145923de8" prot="public" virt="non-virtual"><scope>casacore::MVBaseline</scope><name>operator+=</name></member>
      <member refid="classcasacore_1_1MVPosition_1ae823d852d1f752b309f65ebe3bf8728c" prot="public" virt="non-virtual" ambiguityscope="casacore::MVPosition::"><scope>casacore::MVBaseline</scope><name>operator+=</name></member>
      <member refid="classcasacore_1_1MVBaseline_1a7c35019e67a0eef78518daddca4b6589" prot="public" virt="non-virtual"><scope>casacore::MVBaseline</scope><name>operator-</name></member>
      <member refid="classcasacore_1_1MVBaseline_1ae908d3cd29787e78016dddf97ae71c2e" prot="public" virt="non-virtual"><scope>casacore::MVBaseline</scope><name>operator-</name></member>
      <member refid="classcasacore_1_1MVPosition_1a33eef1c5cfe38c71c5dbccc7686a79ef" prot="public" virt="non-virtual" ambiguityscope="casacore::MVPosition::"><scope>casacore::MVBaseline</scope><name>operator-</name></member>
      <member refid="classcasacore_1_1MVBaseline_1af35933c6e79fa7d9544d7aa48ffed068" prot="public" virt="non-virtual"><scope>casacore::MVBaseline</scope><name>operator-=</name></member>
      <member refid="classcasacore_1_1MVPosition_1a7cc1203b0b1ba466be58ee8826783b1e" prot="public" virt="non-virtual" ambiguityscope="casacore::MVPosition::"><scope>casacore::MVBaseline</scope><name>operator-=</name></member>
      <member refid="classcasacore_1_1MVPosition_1aaa0aedf3ab1c4e42082b297ea3638ade" prot="public" virt="non-virtual"><scope>casacore::MVBaseline</scope><name>operator=</name></member>
      <member refid="classcasacore_1_1MVBaseline_1a7b892d9d6d80ce7cdd5d0cf56bd17a08" prot="public" virt="non-virtual"><scope>casacore::MVBaseline</scope><name>operator==</name></member>
      <member refid="classcasacore_1_1MVPosition_1a7d75af8c83d440e3642f80845aa8d5b2" prot="public" virt="non-virtual" ambiguityscope="casacore::MVPosition::"><scope>casacore::MVBaseline</scope><name>operator==</name></member>
      <member refid="classcasacore_1_1MVPosition_1a798d187490d288620eeea965a01920b8" prot="public" virt="non-virtual"><scope>casacore::MVBaseline</scope><name>positionAngle</name></member>
      <member refid="classcasacore_1_1MVPosition_1aa34e24929cc4d6f5f67b83273eefdbca" prot="public" virt="non-virtual"><scope>casacore::MVBaseline</scope><name>positionAngle</name></member>
      <member refid="classcasacore_1_1MVBaseline_1a09132e576b221ded1d4de3b95c93caa7" prot="public" virt="virtual"><scope>casacore::MVBaseline</scope><name>print</name></member>
      <member refid="classcasacore_1_1MVBaseline_1ab3e6ae1727c837cd330dcdb3492a7395" prot="public" virt="virtual"><scope>casacore::MVBaseline</scope><name>putValue</name></member>
      <member refid="classcasacore_1_1MVBaseline_1af88e504566e9f39d4ed4bbbe8ce182d8" prot="public" virt="virtual"><scope>casacore::MVBaseline</scope><name>putVector</name></member>
      <member refid="classcasacore_1_1MVBaseline_1a822c5314134033da2c39f3a11078e589" prot="public" virt="virtual"><scope>casacore::MVBaseline</scope><name>radius</name></member>
      <member refid="classcasacore_1_1MVBaseline_1a129d06e0487dce1276a4780e769a986e" prot="public" virt="virtual"><scope>casacore::MVBaseline</scope><name>readjust</name></member>
      <member refid="classcasacore_1_1MVBaseline_1a07f96c6bb32fe50184989982d561a559" prot="public" virt="non-virtual"><scope>casacore::MVBaseline</scope><name>separation</name></member>
      <member refid="classcasacore_1_1MVBaseline_1ac73116ee4102cf8df95e4c20f272c2fb" prot="public" virt="non-virtual"><scope>casacore::MVBaseline</scope><name>separation</name></member>
      <member refid="classcasacore_1_1MVPosition_1aac8200d657269dc0b4bf113362fa8b73" prot="public" virt="non-virtual" ambiguityscope="casacore::MVPosition::"><scope>casacore::MVBaseline</scope><name>separation</name></member>
      <member refid="classcasacore_1_1MVPosition_1aebc72b2827d1abd2909ae09779509f66" prot="public" virt="non-virtual" ambiguityscope="casacore::MVPosition::"><scope>casacore::MVBaseline</scope><name>separation</name></member>
      <member refid="classcasacore_1_1MVPosition_1a551dd71b35743a75bf63ecf8acc1941f" prot="protected" virt="non-virtual"><scope>casacore::MVBaseline</scope><name>xyz</name></member>
      <member refid="classcasacore_1_1MeasValue_1a70316dc2a17d2d9471f858df3001817c" prot="public" virt="virtual"><scope>casacore::MVBaseline</scope><name>~MeasValue</name></member>
      <member refid="classcasacore_1_1MVPosition_1aa2ad44e41979adc63cc6419111badf04" prot="public" virt="virtual"><scope>casacore::MVBaseline</scope><name>~MVPosition</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
