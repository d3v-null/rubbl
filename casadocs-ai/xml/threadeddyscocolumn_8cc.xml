<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="threadeddyscocolumn_8cc" kind="file" language="C++">
    <compoundname>threadeddyscocolumn.cc</compoundname>
    <includes refid="threadeddyscocolumn_8h" local="yes">threadeddyscocolumn.h</includes>
    <includes refid="dyscostman_8h" local="yes">dyscostman.h</includes>
    <includes refid="dyscostmanerror_8h" local="yes">dyscostmanerror.h</includes>
    <includes refid="bytepacker_8h" local="yes">bytepacker.h</includes>
    <includes refid="threadgroup_8h" local="yes">threadgroup.h</includes>
    <includes local="no">casacore/ms/MeasurementSets/MeasurementSet.h</includes>
    <includes refid="ScalarColumn_8h" local="no">casacore/tables/Tables/ScalarColumn.h</includes>
    <includes local="no">algorithm</includes>
    <includes local="no">limits</includes>
    <incdepgraph>
      <node id="100">
        <label>threadgroup.h</label>
        <link refid="threadgroup_8h"/>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>casacore/casa/aipsenv.h</label>
        <link refid="aipsenv_8h"/>
      </node>
      <node id="61">
        <label>casacore/tables/Tables/StorageOption.h</label>
        <link refid="StorageOption_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>casacore/casa/config.h</label>
      </node>
      <node id="43">
        <label>casacore/tables/Tables/TableInfo.h</label>
        <link refid="TableInfo_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="98">
        <label>casacore/casa/Utilities/COWPtr.tcc</label>
        <link refid="COWPtr_8tcc"/>
      </node>
      <node id="76">
        <label>casacore/tables/DataMan/DataManager.h</label>
        <link refid="DataManager_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>casacore/casa/BasicSL/Complex.h</label>
        <link refid="Complex_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>casacore/casa/Containers/Block.h</label>
        <link refid="Block_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>casacore/casa/Utilities/Compare.tcc</label>
        <link refid="Compare_8tcc"/>
      </node>
      <node id="44">
        <label>casacore/tables/Tables/TableDesc.h</label>
        <link refid="TableDesc_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="65">
        <label>limits</label>
      </node>
      <node id="28">
        <label>casacore/tables/Tables/ScalarColumn.h</label>
        <link refid="ScalarColumn_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>casacore/casa/Exceptions/Error.h</label>
        <link refid="Error_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="88">
        <label>iterator</label>
      </node>
      <node id="92">
        <label>ArrayStr.tcc</label>
        <link refid="ArrayStr_8tcc"/>
      </node>
      <node id="31">
        <label>casacore/tables/Tables/ColumnDesc.h</label>
        <link refid="ColumnDesc_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="96">
        <label>casacore/casa/Containers/RecordDescRep.h</label>
        <link refid="RecordDescRep_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="68">
        <label>cstdint</label>
      </node>
      <node id="45">
        <label>casacore/tables/Tables/ColDescSet.h</label>
        <link refid="ColDescSet_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="104">
        <label>serializable.h</label>
        <link refid="serializable_8h"/>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="105" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>casacore/casa/iostream.h</label>
        <link refid="iostream_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>casacore/tables/Tables/TableColumn.h</label>
        <link refid="TableColumn_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>casacore/tables/DataMan/DataManError.h</label>
        <link refid="DataManError_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="105">
        <label>stdint.h</label>
      </node>
      <node id="74">
        <label>casacore/tables/DataMan/DataManagerColumn.h</label>
        <link refid="DataManagerColumn_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="63">
        <label>casacore/tables/Tables/ColumnCache.h</label>
        <link refid="ColumnCache_8h"/>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="79">
        <label>casacore/casa/Containers/RecordInterface.h</label>
        <link refid="RecordInterface_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
      </node>
      <node id="81">
        <label>casacore/casa/Arrays/Array.h</label>
        <link refid="Array_8h"/>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>casacore/casa/iosfwd.h</label>
        <link refid="iosfwd_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="107">
        <label>cmath</label>
      </node>
      <node id="64">
        <label>cassert</label>
      </node>
      <node id="40">
        <label>casacore/casa/Utilities/Compare.h</label>
        <link refid="Compare_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="102">
        <label>uvector.h</label>
        <link refid="uvector_8h"/>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
      </node>
      <node id="84">
        <label>stdexcept</label>
      </node>
      <node id="6">
        <label>casacore/casa/aipstype.h</label>
        <link refid="aipstype_8h"/>
      </node>
      <node id="12">
        <label>casacore/casa/iosstrfwd.h</label>
        <link refid="iosstrfwd_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>casacore/casa/Containers/Allocator.h</label>
        <link refid="Allocator_8h"/>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>string</label>
      </node>
      <node id="71">
        <label>dyscodistribution.h</label>
        <link refid="dyscodistribution_8h"/>
      </node>
      <node id="32">
        <label>casacore/tables/Tables/BaseColDesc.h</label>
        <link refid="BaseColDesc_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>map</label>
      </node>
      <node id="89">
        <label>ArrayStr.h</label>
        <link refid="ArrayStr_8h"/>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>casacore/casa/IO/ByteIO.h</label>
        <link refid="ByteIO_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="83">
        <label>ArrayError.h</label>
        <link refid="ArrayError_8h"/>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>casacore/casa/complex.h</label>
        <link refid="complex_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>threadeddyscocolumn.h</label>
        <link refid="threadeddyscocolumn_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="104" relation="include">
        </childnode>
        <childnode refid="106" relation="include">
        </childnode>
        <childnode refid="100" relation="include">
        </childnode>
        <childnode refid="108" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>casacore/casa/aips.h</label>
        <link refid="aips_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="77">
        <label>casacore/tables/DataMan/TSMOption.h</label>
        <link refid="TSMOption_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>exception</label>
      </node>
      <node id="62">
        <label>casacore/casa/IO/FileLocker.h</label>
        <link refid="FileLocker_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="99">
        <label>fstream</label>
      </node>
      <node id="30">
        <label>casacore/tables/Tables/BaseColumn.h</label>
        <link refid="BaseColumn_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="91">
        <label>ostream</label>
      </node>
      <node id="49">
        <label>casacore/casa/Utilities/Copy.h</label>
        <link refid="Copy_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="60">
        <label>casacore/casa/vector.h</label>
        <link refid="vector_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>casacore/casa/BasicSL/Complexfwd.h</label>
        <link refid="Complexfwd_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="73">
        <label>casacore/tables/DataMan/StManColumnBase.h</label>
        <link refid="StManColumnBase_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="72">
        <label>dysconormalization.h</label>
        <link refid="dysconormalization_8h"/>
      </node>
      <node id="69">
        <label>random</label>
      </node>
      <node id="66">
        <label>casacore/tables/Tables/ScalarColumn.tcc</label>
        <link refid="ScalarColumn_8tcc"/>
      </node>
      <node id="67">
        <label>condition_variable</label>
      </node>
      <node id="1">
        <label>tables/Dysco/threadeddyscocolumn.cc</label>
        <link refid="threadeddyscocolumn_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="109" relation="include">
        </childnode>
        <childnode refid="110" relation="include">
        </childnode>
        <childnode refid="100" relation="include">
        </childnode>
        <childnode refid="111" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>sys/types.h</label>
      </node>
      <node id="56">
        <label>typeinfo</label>
      </node>
      <node id="108">
        <label>timeblockbuffer.h</label>
        <link refid="timeblockbuffer_8h"/>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="94">
        <label>casacore/casa/Containers/RecordRep.h</label>
        <link refid="RecordRep_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
      </node>
      <node id="86">
        <label>Storage.h</label>
        <link refid="Storage_8h"/>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>casacore/casa/Arrays/IPosition.h</label>
        <link refid="IPosition_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="70">
        <label>dyscostmancol.h</label>
        <link refid="dyscostmancol_8h"/>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
      </node>
      <node id="93">
        <label>Array.tcc</label>
        <link refid="Array_8tcc"/>
      </node>
      <node id="110">
        <label>bytepacker.h</label>
        <link refid="bytepacker_8h"/>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>vector</label>
      </node>
      <node id="109">
        <label>dyscostmanerror.h</label>
        <link refid="dyscostmanerror_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="97">
        <label>casacore/casa/Utilities/COWPtr.h</label>
        <link refid="COWPtr_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>new</label>
      </node>
      <node id="48">
        <label>casacore/casa/Utilities/Assert.tcc</label>
        <link refid="Assert_8tcc"/>
      </node>
      <node id="103">
        <label>utility</label>
      </node>
      <node id="18">
        <label>sstream</label>
      </node>
      <node id="33">
        <label>casacore/casa/Utilities/DataType.h</label>
        <link refid="DataType_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>iosfwd</label>
      </node>
      <node id="54">
        <label>cstdlib</label>
      </node>
      <node id="42">
        <label>casacore/tables/Tables/BaseTable.h</label>
        <link refid="BaseTable_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="111">
        <label>casacore/ms/MeasurementSets/MeasurementSet.h</label>
      </node>
      <node id="17">
        <label>iostream</label>
      </node>
      <node id="8">
        <label>casacore/casa/aipsdef.h</label>
        <link refid="aipsdef_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="95">
        <label>casacore/casa/Containers/RecordDesc.h</label>
        <link refid="RecordDesc_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>cstddef</label>
      </node>
      <node id="51">
        <label>casacore/casa/Utilities/Copy.tcc</label>
        <link refid="Copy_8tcc"/>
      </node>
      <node id="39">
        <label>mutex</label>
      </node>
      <node id="58">
        <label>casacore/casa/IO/AipsIO.h</label>
        <link refid="AipsIO_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
      </node>
      <node id="78">
        <label>casacore/casa/Containers/Record.h</label>
        <link refid="Record_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>casacore/casa/sstream.h</label>
        <link refid="sstream_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="106">
        <label>stochasticencoder.h</label>
        <link refid="stochasticencoder_8h"/>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="107" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
      </node>
      <node id="101">
        <label>thread</label>
      </node>
      <node id="57">
        <label>type_traits</label>
      </node>
      <node id="21">
        <label>casacore/casa/Exceptions/Error.tcc</label>
        <link refid="Error_8tcc"/>
      </node>
      <node id="36">
        <label>complex</label>
      </node>
      <node id="50">
        <label>algorithm</label>
      </node>
      <node id="80">
        <label>casacore/casa/Containers/RecordFieldId.h</label>
        <link refid="RecordFieldId_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>ArrayFwd.h</label>
        <link refid="ArrayFwd_8h"/>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="82">
        <label>ArrayBase.h</label>
        <link refid="ArrayBase_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>casacore/casa/aipsxtype.h</label>
        <link refid="aipsxtype_8h"/>
      </node>
      <node id="87">
        <label>cstring</label>
      </node>
      <node id="10">
        <label>casacore/casa/BasicSL/String.h</label>
        <link refid="String_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="75">
        <label>dyscostman.h</label>
        <link refid="dyscostman_8h"/>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="100" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>memory</label>
      </node>
      <node id="90">
        <label>istream</label>
      </node>
      <node id="27">
        <label>initializer_list</label>
      </node>
      <node id="47">
        <label>casacore/casa/Utilities/Assert.h</label>
        <link refid="Assert_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="48" relation="include">
        </childnode>
      </node>
      <node id="85">
        <label>MaskLogiArrFwd.h</label>
        <link refid="MaskLogiArrFwd_8h"/>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacedyscostman">dyscostman</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="threadeddyscocolumn_8h" kindref="compound">threadeddyscocolumn.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="dyscostman_8h" kindref="compound">dyscostman.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="dyscostmanerror_8h" kindref="compound">dyscostmanerror.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="bytepacker_8h" kindref="compound">bytepacker.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="threadgroup_8h" kindref="compound">threadgroup.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;casacore/ms/MeasurementSets/MeasurementSet.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="ScalarColumn_8h" kindref="compound">casacore/tables/Tables/ScalarColumn.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;limits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacedyscostman" kindref="compound">dyscostman</ref><sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DataType&gt;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><ref refid="classdyscostman_1_1ThreadedDyscoColumn_1a48f6134090f1c75906bbccdeac2466a5" kindref="member">ThreadedDyscoColumn&lt;DataType&gt;::ThreadedDyscoColumn</ref>(DyscoStMan<sp/>*parent,</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dtype)</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>DyscoStManColumn(parent,<sp/>dtype),</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_bitsPerSymbol(0),</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_ant1Col(),</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_ant2Col(),</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_fieldCol(),</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_packedBlockReadBuffer(),</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_unpackedSymbolReadBuffer(),</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_stopThreads(false),</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_currentBlock(std::numeric_limits&lt;size_t&gt;::<ref refid="namespacecasacore_1a56d085b8518c627a9bf447eaa23588f0" kindref="member">max</ref>()),</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_isCurrentBlockChanged(false),</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_blockSize(0),</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_antennaCount(0),</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_timeBlockBuffer()<sp/>{}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//<sp/>prepare<sp/>the<sp/>class<sp/>for<sp/>destruction<sp/>when<sp/>the<sp/>derived<sp/>class<sp/>is<sp/>destructed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>necessary<sp/>because<sp/>the<sp/>virtual<sp/>function<sp/>of<sp/>the<sp/>derived<sp/>class<sp/>might<sp/>get</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">//<sp/>called<sp/>to<sp/>empty<sp/>the<sp/>cache.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DataType&gt;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ThreadedDyscoColumn&lt;DataType&gt;::shutdown()<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_isCurrentBlockChanged)<sp/>storeBlock();</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>stopThreads();</highlight></codeline>
<codeline lineno="42"><highlight class="normal">}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DataType&gt;</highlight></codeline>
<codeline lineno="45"><highlight class="normal">ThreadedDyscoColumn&lt;DataType&gt;::~ThreadedDyscoColumn()<sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>shutdown();</highlight></codeline>
<codeline lineno="47"><highlight class="normal">}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DataType&gt;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ThreadedDyscoColumn&lt;DataType&gt;::stopThreads()<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>std::unique_lock&lt;std::mutex&gt;<sp/>lock(_mutex);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_threadGroup.empty())<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!_cache.empty())</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>DyscoStManError(</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;DyscoStMan<sp/>is<sp/>flushed<sp/>before<sp/>at<sp/>least<sp/>two<sp/>timeblocks<sp/>were<sp/>stored.<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;DyscoStMan<sp/>can<sp/>not<sp/>handle<sp/>this<sp/>situation.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Don&apos;t<sp/>stop<sp/>threads<sp/>before<sp/>cache<sp/>is<sp/>empty</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!_cache.empty())<sp/>_cacheChangedCondition.wait(lock);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Signal<sp/>threads<sp/>to<sp/>stop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>_stopThreads<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>_cacheChangedCondition.notify_all();</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Wait<sp/>for<sp/>threads<sp/>to<sp/>end</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>lock.unlock();</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>_threadGroup.join_all();</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal">}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DataType&gt;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ThreadedDyscoColumn&lt;DataType&gt;::setShapeColumn(</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcasacore_1_1IPosition" kindref="compound">casacore::IPosition</ref><sp/>&amp;<ref refid="namespacecasacore_1a6c80d55c1617e8540e006c12e3dc990c" kindref="member">shape</ref>)<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>_shape<sp/>=<sp/><ref refid="namespacecasacore_1a6c80d55c1617e8540e006c12e3dc990c" kindref="member">shape</ref>;</highlight></codeline>
<codeline lineno="76"><highlight class="normal">}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DataType&gt;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ThreadedDyscoColumn&lt;DataType&gt;::loadBlock(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>blockIndex)<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockIndex<sp/>&lt;<sp/>nBlocksInFile())<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>readCompressedData(blockIndex,<sp/>_packedBlockReadBuffer.data(),<sp/>_blockSize);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nPolarizations<sp/>=<sp/>_shape[0],<sp/>nChannels<sp/>=<sp/>_shape[1],</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nRows<sp/>=<sp/>nRowsInBlock(),</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nMetaFloats<sp/>=<sp/>metaDataFloatCount(nRows,<sp/>nPolarizations,</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nChannels,<sp/>_antennaCount);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*symbolStart<sp/>=</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_packedBlockReadBuffer.data()<sp/>+<sp/>nMetaFloats<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(float);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>BytePacker::unpack(_bitsPerSymbol,<sp/>_unpackedSymbolReadBuffer.data(),</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>symbolStart,</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>symbolCount(nRows,<sp/>nPolarizations,<sp/>nChannels));</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*metaData<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(_packedBlockReadBuffer.data());</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>initializeDecode(_timeBlockBuffer.get(),<sp/>metaData,<sp/>nRows,<sp/>_antennaCount);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>startRow<sp/>=<sp/>getRowIndex(blockIndex);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>_timeBlockBuffer-&gt;resize(nRows);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>blockRow<sp/>=<sp/>0;<sp/>blockRow<sp/>!=<sp/>nRows;<sp/>++blockRow)<sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>a1<sp/>=<sp/>(*_ant1Col)(startRow<sp/>+<sp/>blockRow),</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a2<sp/>=<sp/>(*_ant2Col)(startRow<sp/>+<sp/>blockRow);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>decode(_timeBlockBuffer.get(),<sp/>_unpackedSymbolReadBuffer.data(),<sp/>blockRow,</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a1,<sp/>a2);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>_currentBlock<sp/>=<sp/>blockIndex;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>_isCurrentBlockChanged<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="104"><highlight class="normal">}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DataType&gt;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ThreadedDyscoColumn&lt;DataType&gt;::getValues(</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacecasacore_1aee1c00a44176a614b010746741ae16a9" kindref="member">casacore::rownr_t</ref><sp/>rowNr,<sp/><ref refid="classcasacore_1_1Array" kindref="compound">casacore::Array&lt;DataType&gt;</ref><sp/>*dataArr)<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!areOffsetsInitialized())<sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Trying<sp/>to<sp/>read<sp/>before<sp/>first<sp/>block<sp/>was<sp/>written<sp/>--<sp/>return<sp/>zero</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO<sp/>if<sp/>a<sp/>few<sp/>rows<sp/>were<sp/>written<sp/>of<sp/>the<sp/>first<sp/>block,<sp/>those<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>incorrectly<sp/>returned.<sp/>This<sp/>is<sp/>a<sp/>rare<sp/>case<sp/>but<sp/>can<sp/>be<sp/>fixed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>*dataArr<sp/>=<sp/><ref refid="namespacecasacore_1a81df62ade83d72ba450271cdc021220e" kindref="member">DataType</ref>();</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>blockIndex<sp/>=<sp/>getBlockIndex(rowNr);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockIndex<sp/>&gt;=<sp/>nBlocksInFile())<sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Trying<sp/>to<sp/>read<sp/>a<sp/>row<sp/>that<sp/>was<sp/>not<sp/>stored<sp/>yet<sp/>--<sp/>return<sp/>zero</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>*dataArr<sp/>=<sp/><ref refid="namespacecasacore_1a81df62ade83d72ba450271cdc021220e" kindref="member">DataType</ref>();</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>array<sp/>storage<sp/>is<sp/>contiguous.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacecasacore_1abd5691f9e13acc90d901e4007740ff98" kindref="member">casacore::Bool</ref><sp/>deleteIt;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacecasacore_1a81df62ade83d72ba450271cdc021220e" kindref="member">DataType</ref>*<sp/>dataPtr<sp/>=<sp/>dataArr-&gt;<ref refid="classcasacore_1_1Array_1abd8980b0c53fb632c8674d9088c83db8" kindref="member">getStorage</ref><sp/>(deleteIt);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::unique_lock&lt;std::mutex&gt;<sp/>lock(_mutex);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Wait<sp/>until<sp/>the<sp/>block<sp/>to<sp/>be<sp/>read<sp/>is<sp/>not<sp/>in<sp/>the<sp/>write<sp/>cache</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>cache_t::const_iterator<sp/>cacheItemPtr<sp/>=<sp/>_cache.find(blockIndex);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(cacheItemPtr<sp/>!=<sp/>_cache.end())<sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_cacheChangedCondition.wait(lock);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cacheItemPtr<sp/>=<sp/>_cache.find(blockIndex);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lock.unlock();</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_currentBlock<sp/>!=<sp/>blockIndex)<sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_isCurrentBlockChanged)<sp/>storeBlock();</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>loadBlock(blockIndex);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>time<sp/>block<sp/>encoder<sp/>is<sp/>now<sp/>initialized<sp/>and<sp/>contains<sp/>the<sp/>unpacked</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>block.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_timeBlockBuffer-&gt;GetData(getRowWithinBlock(rowNr),<sp/>dataPtr);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dataArr-&gt;<ref refid="classcasacore_1_1Array_1ad81e6bf195ad038bb4c2928adac5fb49" kindref="member">putStorage</ref><sp/>(dataPtr,<sp/>deleteIt);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal">}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DataType&gt;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ThreadedDyscoColumn&lt;DataType&gt;::storeBlock()<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Put<sp/>the<sp/>data<sp/>of<sp/>the<sp/>current<sp/>block<sp/>into<sp/>the<sp/>cache<sp/>so<sp/>that<sp/>the<sp/>parallell</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>threads<sp/>can<sp/>write<sp/>them</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/>std::unique_lock&lt;std::mutex&gt;<sp/>lock(_mutex);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>CacheItem<sp/>*item<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>CacheItem(std::move(_timeBlockBuffer));</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Wait<sp/>until<sp/>there<sp/>is<sp/>space<sp/>available<sp/>AND<sp/>the<sp/>row<sp/>to<sp/>be<sp/>written<sp/>is<sp/>not<sp/>in<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>cache</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>cache_t::iterator<sp/>cacheItemPtr<sp/>=<sp/>_cache.find(_currentBlock);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(_cache.size()<sp/>&gt;=<sp/>maxCacheSize()<sp/>||<sp/>cacheItemPtr<sp/>!=<sp/>_cache.end())<sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>_cacheChangedCondition.wait(lock);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>cacheItemPtr<sp/>=<sp/>_cache.find(_currentBlock);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/>_cache.insert(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>cache_t::value_type(_currentBlock,<sp/>item));</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>_cacheChangedCondition.notify_all();</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/>lock.unlock();</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>_isCurrentBlockChanged<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nPolarizations<sp/>=<sp/>_shape[0],<sp/>nChannels<sp/>=<sp/>_shape[1];</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>_timeBlockBuffer.reset(</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classTimeBlockBuffer" kindref="compound">TimeBlockBuffer&lt;data_t&gt;</ref>(nPolarizations,<sp/>nChannels));</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//_timeBlockBuffer-&gt;SetNAntennae(_antennaCount);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal">}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DataType&gt;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ThreadedDyscoColumn&lt;DataType&gt;::putValues(</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacecasacore_1aee1c00a44176a614b010746741ae16a9" kindref="member">casacore::rownr_t</ref><sp/>rowNr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcasacore_1_1Array" kindref="compound">casacore::Array&lt;DataType&gt;</ref><sp/>*dataArr)<sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>array<sp/>storage<sp/>is<sp/>contiguous.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><ref refid="namespacecasacore_1abd5691f9e13acc90d901e4007740ff98" kindref="member">casacore::Bool</ref><sp/>deleteIt;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacecasacore_1a81df62ade83d72ba450271cdc021220e" kindref="member">DataType</ref>*<sp/>dataPtr<sp/>=<sp/>dataArr-&gt;<ref refid="classcasacore_1_1Array_1abd8980b0c53fb632c8674d9088c83db8" kindref="member">getStorage</ref><sp/>(deleteIt);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!areOffsetsInitialized())<sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>manager<sp/>did<sp/>not<sp/>initialize<sp/>its<sp/>offsets<sp/>yet,<sp/>then<sp/>it<sp/>is<sp/>determined</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>from<sp/>the<sp/>first<sp/>&quot;time<sp/>block&quot;<sp/>(a<sp/>block<sp/>with<sp/>the<sp/>same<sp/>time,<sp/>field<sp/>and<sp/>spw)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>that<sp/>is<sp/>written<sp/>into<sp/>the<sp/>measurement<sp/>set.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>only<sp/>happens<sp/>when<sp/>a<sp/>new<sp/>measurement</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>was<sp/>created;<sp/>if<sp/>an<sp/>existing<sp/>measurement<sp/>set<sp/>is<sp/>opened<sp/>with<sp/>at<sp/>least</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>one<sp/>block,<sp/>then<sp/>the<sp/>offsets<sp/>will<sp/>be<sp/>read<sp/>from<sp/>the<sp/>headers.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>consequence<sp/>of<sp/>this<sp/>is<sp/>that<sp/>the<sp/>first<sp/>blocks<sp/>in<sp/>a<sp/>new<sp/>measurement<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>are<sp/>required<sp/>to<sp/>be<sp/>written<sp/>consecutively.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacecasacore_1a46ef7060e7e3008633c2867c9b9b6c99" kindref="member">time</ref><sp/>=<sp/>(*_timeCol)(rowNr);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fieldId<sp/>=<sp/>(*_fieldCol)(rowNr);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dataDescId<sp/>=<sp/>(*_dataDescIdCol)(rowNr);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_timeBlockBuffer-&gt;Empty())<sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>the<sp/>first<sp/>row<sp/>written</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_currentBlock<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_lastWrittenTime<sp/>=<sp/><ref refid="namespacecasacore_1a46ef7060e7e3008633c2867c9b9b6c99" kindref="member">time</ref>;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_lastWrittenField<sp/>=<sp/>fieldId;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_lastWrittenDataDescId<sp/>=<sp/>dataDescId;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespacecasacore_1a46ef7060e7e3008633c2867c9b9b6c99" kindref="member">time</ref><sp/>!=<sp/>_lastWrittenTime<sp/>||<sp/>fieldId<sp/>!=<sp/>_lastWrittenField<sp/>||</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataDescId<sp/>!=<sp/>_lastWrittenDataDescId)<sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>initializeRowsPerBlock(rowNr,<sp/>_timeBlockBuffer-&gt;MaxAntennaIndex()<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ant1<sp/>=<sp/>(*_ant1Col)(rowNr),<sp/>ant2<sp/>=<sp/>(*_ant2Col)(rowNr);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(areOffsetsInitialized())<sp/>{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>blockIndex<sp/>=<sp/>getBlockIndex(rowNr),</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blockRow<sp/>=<sp/>getRowWithinBlock(rowNr);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Is<sp/>this<sp/>the<sp/>first<sp/>row<sp/>of<sp/>a<sp/>new<sp/>block?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(blockIndex<sp/>!=<sp/>_currentBlock)<sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_isCurrentBlockChanged)<sp/>storeBlock();</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Load<sp/>new<sp/>block</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>loadBlock(blockIndex);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>_timeBlockBuffer-&gt;SetData(blockRow,<sp/>ant1,<sp/>ant2,<sp/>dataPtr);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>_timeBlockBuffer-&gt;SetData(rowNr,<sp/>ant1,<sp/>ant2,<sp/>dataPtr);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/>_isCurrentBlockChanged<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/>dataArr-&gt;<ref refid="classcasacore_1_1Array_1a49a8ffd126699fe7239d890b798d22b8" kindref="member">freeStorage</ref><sp/>(dataPtr,<sp/>deleteIt);</highlight></codeline>
<codeline lineno="219"><highlight class="normal">}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DataType&gt;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ThreadedDyscoColumn&lt;DataType&gt;::Prepare(<ref refid="namespacedyscostman_1a51fef6aed8056e66e5f06a91ce658654" kindref="member">DyscoDistribution</ref>,<sp/><ref refid="namespacedyscostman_1a0310ef73fb535ced1f64687d171da9a2" kindref="member">Normalization</ref>,</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*studentsTNu*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*distributionTruncation*/</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/>stopThreads();</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><ref refid="classcasacore_1_1Table" kindref="compound">casacore::Table</ref><sp/>&amp;table<sp/>=<sp/>storageManager().table();</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/>_ant1Col.reset(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcasacore_1_1ScalarColumn" kindref="compound">casacore::ScalarColumn&lt;int&gt;</ref>(table,<sp/></highlight><highlight class="stringliteral">&quot;ANTENNA1&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/>_ant2Col.reset(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcasacore_1_1ScalarColumn" kindref="compound">casacore::ScalarColumn&lt;int&gt;</ref>(table,<sp/></highlight><highlight class="stringliteral">&quot;ANTENNA2&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/>_fieldCol.reset(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcasacore_1_1ScalarColumn" kindref="compound">casacore::ScalarColumn&lt;int&gt;</ref>(table,<sp/></highlight><highlight class="stringliteral">&quot;FIELD_ID&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/>_dataDescIdCol.reset(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcasacore_1_1ScalarColumn" kindref="compound">casacore::ScalarColumn&lt;int&gt;</ref>(table,<sp/></highlight><highlight class="stringliteral">&quot;DATA_DESC_ID&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/>_timeCol.reset(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcasacore_1_1ScalarColumn" kindref="compound">casacore::ScalarColumn&lt;double&gt;</ref>(table,<sp/></highlight><highlight class="stringliteral">&quot;TIME&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nPolarizations<sp/>=<sp/>_shape[0],<sp/>nChannels<sp/>=<sp/>_shape[1];</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/>_timeBlockBuffer.reset(</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classTimeBlockBuffer" kindref="compound">TimeBlockBuffer&lt;data_t&gt;</ref>(nPolarizations,<sp/>nChannels));</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_antennaCount<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO<sp/>_timeBlockEncoder-&gt;SetNAntennae(_antennaCount);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/>_currentBlock<sp/>=<sp/><ref refid="namespacecasacore_1a56d085b8518c627a9bf447eaa23588f0" kindref="member">std::numeric_limits&lt;size_t&gt;::max</ref>();</highlight></codeline>
<codeline lineno="240"><highlight class="normal">}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DataType&gt;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ThreadedDyscoColumn&lt;DataType&gt;::defaultThreadCount()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Don&apos;t<sp/>spawn<sp/>more<sp/>than<sp/>8<sp/>threads;<sp/>it<sp/>causes<sp/>problems<sp/>in<sp/>NDPPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacecasacore_1a52c2516271638660cf3c313ddad928fe" kindref="member">std::min</ref>(8l,<sp/>sysconf(_SC_NPROCESSORS_ONLN));</highlight></codeline>
<codeline lineno="246"><highlight class="normal">}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DataType&gt;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ThreadedDyscoColumn&lt;DataType&gt;::InitializeAfterNRowsPerBlockIsKnown()<sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/>stopThreads();</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_bitsPerSymbol<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>DyscoStManError(</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;bitsPerSymbol<sp/>not<sp/>initialized<sp/>in<sp/>ThreadedDyscoColumn&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/>_antennaCount<sp/>=<sp/>nAntennae();</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/>_blockSize<sp/>=<sp/>CalculateBlockSize(nRowsInBlock(),<sp/>_antennaCount);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/>_packedBlockReadBuffer.resize(_blockSize);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nPolarizations<sp/>=<sp/>_shape[0],<sp/>nChannels<sp/>=<sp/>_shape[1];</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/>_unpackedSymbolReadBuffer.resize(</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>symbolCount(nRowsInBlock(),<sp/>nPolarizations,<sp/>nChannels));</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO<sp/>_timeBlockEncoder-&gt;SetNAntennae(_antennaCount);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>start<sp/>the<sp/>threads</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>threadCount<sp/>=<sp/>defaultThreadCount();</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/>EncodingThreadFunctor<sp/>functor;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/>functor.parent<sp/>=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/>_stopThreads<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>!=<sp/>threadCount;<sp/>++i)<sp/>_threadGroup.create_thread(functor);</highlight></codeline>
<codeline lineno="269"><highlight class="normal">}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DataType&gt;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ThreadedDyscoColumn&lt;DataType&gt;::encodeAndWrite(</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>blockIndex,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CacheItem<sp/>&amp;item,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*packedSymbolBuffer,</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*unpackedSymbolBuffer,<sp/>ThreadDataBase<sp/>*threadUserData)<sp/>{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nPolarizations<sp/>=<sp/>_shape[0],<sp/>nChannels<sp/>=<sp/>_shape[1];</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>metaDataSize<sp/>=</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(float)<sp/>*<sp/>metaDataFloatCount(nRowsInBlock(),<sp/>nPolarizations,</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nChannels,<sp/>_antennaCount);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nSymbols<sp/>=</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>symbolCount(nRowsInBlock(),<sp/>nPolarizations,<sp/>nChannels);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*metaBuffer<sp/>=<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(packedSymbolBuffer);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*binaryBuffer<sp/>=<sp/>packedSymbolBuffer<sp/>+<sp/>metaDataSize;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/>encode(threadUserData,<sp/>item.encoder.get(),<sp/>metaBuffer,<sp/>unpackedSymbolBuffer,</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_antennaCount);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/>BytePacker::pack(_bitsPerSymbol,<sp/>binaryBuffer,<sp/>unpackedSymbolBuffer,</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nSymbols);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>binarySize<sp/>=<sp/>BytePacker::bufferSize(nSymbols,<sp/>_bitsPerSymbol);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/>writeCompressedData(blockIndex,<sp/>packedSymbolBuffer,</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>metaDataSize<sp/>+<sp/>binarySize);</highlight></codeline>
<codeline lineno="294"><highlight class="normal">}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Continuously<sp/>write<sp/>items<sp/>from<sp/>the<sp/>cache<sp/>into<sp/>the<sp/>measurement</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="comment">//<sp/>set<sp/>untill<sp/>asked<sp/>to<sp/>quit.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DataType&gt;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ThreadedDyscoColumn&lt;DataType&gt;::EncodingThreadFunctor::operator()()<sp/>{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nPolarizations<sp/>=<sp/>parent-&gt;_shape[0],</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nChannels<sp/>=<sp/>parent-&gt;_shape[1];</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nSymbols<sp/>=</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>parent-&gt;symbolCount(parent-&gt;nRowsInBlock(),<sp/>nPolarizations,<sp/>nChannels);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/>std::unique_lock&lt;std::mutex&gt;<sp/>lock(parent-&gt;_mutex);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><ref refid="classao_1_1uvector" kindref="compound">ao::uvector&lt;unsigned char&gt;</ref><sp/>packedSymbolBuffer(parent-&gt;_blockSize);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><ref refid="classao_1_1uvector" kindref="compound">ao::uvector&lt;unsigned&gt;</ref><sp/>unpackedSymbolBuffer(nSymbols);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/>cache_t<sp/>&amp;cache<sp/>=<sp/>parent-&gt;_cache;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/>std::unique_ptr&lt;ThreadDataBase&gt;<sp/>threadUserData<sp/>=</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>parent-&gt;initializeEncodeThread();</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!parent-&gt;_stopThreads)<sp/>{</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>cache_t::iterator<sp/>i;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isItemAvailable<sp/>=<sp/>parent-&gt;isWriteItemAvailable(i);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!isItemAvailable<sp/>&amp;&amp;<sp/>!parent-&gt;_stopThreads)<sp/>{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>parent-&gt;_cacheChangedCondition.wait(lock);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>isItemAvailable<sp/>=<sp/>parent-&gt;isWriteItemAvailable(i);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isItemAvailable)<sp/>{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>blockIndex<sp/>=<sp/>i-&gt;first;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CacheItem<sp/>&amp;item<sp/>=<sp/>*i-&gt;second;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>item.isBeingWritten<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lock.unlock();</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>parent-&gt;encodeAndWrite(blockIndex,<sp/>item,<sp/>&amp;packedSymbolBuffer[0],</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;unpackedSymbolBuffer[0],<sp/>threadUserData.get());</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lock.lock();</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>&amp;item;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cache.erase(i);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>parent-&gt;_cacheChangedCondition.notify_all();</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="336"><highlight class="normal">}</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>function<sp/>should<sp/>only<sp/>be<sp/>called<sp/>with<sp/>a<sp/>locked<sp/>mutex</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DataType&gt;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ThreadedDyscoColumn&lt;DataType&gt;::isWriteItemAvailable(</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>cache_t::iterator<sp/>&amp;i)<sp/>{</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/>i<sp/>=<sp/>_cache.begin();</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i<sp/>!=<sp/>_cache.end()<sp/>&amp;&amp;<sp/>i-&gt;second-&gt;isBeingWritten)<sp/>++i;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(i<sp/>!=<sp/>_cache.end());</highlight></codeline>
<codeline lineno="345"><highlight class="normal">}</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DataType&gt;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ThreadedDyscoColumn&lt;DataType&gt;::CalculateBlockSize(</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nRowsInBlock,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nAntennae)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nPolarizations<sp/>=<sp/>_shape[0],<sp/>nChannels<sp/>=<sp/>_shape[1];</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>metaDataSize<sp/>=</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(float)<sp/>*</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>metaDataFloatCount(nRowsInBlock,<sp/>nPolarizations,<sp/>nChannels,<sp/>nAntennae);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nSymbols<sp/>=<sp/>symbolCount(nRowsInBlock,<sp/>nPolarizations,<sp/>nChannels);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>binarySize<sp/>=<sp/>BytePacker::bufferSize(nSymbols,<sp/>_bitsPerSymbol);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>metaDataSize<sp/>+<sp/>binarySize;</highlight></codeline>
<codeline lineno="357"><highlight class="normal">}</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DataType&gt;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ThreadedDyscoColumn&lt;DataType&gt;::SerializeExtraHeader(</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/>std::ostream<sp/>&amp;stream)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/>Header<sp/>header;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/>header.antennaCount<sp/>=<sp/>_antennaCount;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/>header.blockSize<sp/>=<sp/>_blockSize;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/>header.Serialize(stream);</highlight></codeline>
<codeline lineno="366"><highlight class="normal">}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>DataType&gt;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ThreadedDyscoColumn&lt;DataType&gt;::UnserializeExtraHeader(</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>std::istream<sp/>&amp;stream)<sp/>{</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/>Header<sp/>header;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/>header.Unserialize(stream);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/>_antennaCount<sp/>=<sp/>header.antennaCount;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/>_blockSize<sp/>=<sp/>header.blockSize;</highlight></codeline>
<codeline lineno="375"><highlight class="normal">}</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ThreadedDyscoColumn&lt;std::complex&lt;float&gt;&gt;;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ThreadedDyscoColumn&lt;float&gt;;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>dyscostman</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="tables/Dysco/threadeddyscocolumn.cc"/>
  </compounddef>
</doxygen>
