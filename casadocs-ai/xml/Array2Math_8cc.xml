<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="Array2Math_8cc" kind="file" language="C++">
    <compoundname>Array2Math.cc</compoundname>
    <includes refid="ArrayMath_8h" local="yes">ArrayMath.h</includes>
    <includes refid="ArrayError_8h" local="yes">ArrayError.h</includes>
    <includes refid="Matrix_8h" local="yes">Matrix.h</includes>
    <includes local="no">complex</includes>
    <incdepgraph>
      <node id="30">
        <label>ArrayMath.tcc</label>
        <link refid="ArrayMath_8tcc"/>
      </node>
      <node id="28">
        <label>functional</label>
      </node>
      <node id="1">
        <label>casa/Arrays/Array2Math.cc</label>
        <link refid="Array2Math_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>iterator</label>
      </node>
      <node id="24">
        <label>ArrayStr.tcc</label>
        <link refid="ArrayStr_8tcc"/>
      </node>
      <node id="3">
        <label>Array.h</label>
        <link refid="Array_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>cassert</label>
      </node>
      <node id="13">
        <label>stdexcept</label>
      </node>
      <node id="29">
        <label>numeric</label>
      </node>
      <node id="31">
        <label>Matrix.h</label>
        <link refid="Matrix_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>string</label>
      </node>
      <node id="21">
        <label>ArrayStr.h</label>
        <link refid="ArrayStr_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>ArrayError.h</label>
        <link refid="ArrayError_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>ostream</label>
      </node>
      <node id="2">
        <label>ArrayMath.h</label>
        <link refid="ArrayMath_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>sys/types.h</label>
      </node>
      <node id="16">
        <label>Storage.h</label>
        <link refid="Storage_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>IPosition.h</label>
        <link refid="IPosition_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>Array.tcc</label>
        <link refid="Array_8tcc"/>
      </node>
      <node id="8">
        <label>vector</label>
      </node>
      <node id="32">
        <label>Matrix.tcc</label>
        <link refid="Matrix_8tcc"/>
      </node>
      <node id="9">
        <label>cstddef</label>
      </node>
      <node id="20">
        <label>type_traits</label>
      </node>
      <node id="18">
        <label>complex</label>
      </node>
      <node id="26">
        <label>algorithm</label>
      </node>
      <node id="6">
        <label>ArrayFwd.h</label>
        <link refid="ArrayFwd_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>ArrayBase.h</label>
        <link refid="ArrayBase_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>cstring</label>
      </node>
      <node id="7">
        <label>memory</label>
      </node>
      <node id="22">
        <label>istream</label>
      </node>
      <node id="10">
        <label>initializer_list</label>
      </node>
      <node id="15">
        <label>MaskLogiArrFwd.h</label>
        <link refid="MaskLogiArrFwd_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacecasacore">casacore</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//#<sp/>Array2Math.cc:<sp/>Arithmetic<sp/>functions<sp/>defined<sp/>on<sp/>Arrays</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>Copyright<sp/>(C)<sp/>1993,1994,1995,1996,1999,2000,2001,2002</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>Associated<sp/>Universities,<sp/>Inc.<sp/>Washington<sp/>DC,<sp/>USA.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//#<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>This<sp/>library<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Library<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>2<sp/>of<sp/>the<sp/>License,<sp/>or<sp/>(at<sp/>your</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//#<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>This<sp/>library<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,<sp/>but<sp/>WITHOUT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of<sp/>MERCHANTABILITY<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the<sp/>GNU<sp/>Library<sp/>General<sp/>Public</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>License<sp/>for<sp/>more<sp/>details.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//#<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Library<sp/>General<sp/>Public<sp/>License</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>along<sp/>with<sp/>this<sp/>library;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software<sp/>Foundation,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>Inc.,<sp/>675<sp/>Massachusetts<sp/>Ave,<sp/>Cambridge,<sp/>MA<sp/>02139,<sp/>USA.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//#<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>Correspondence<sp/>concerning<sp/>AIPS++<sp/>should<sp/>be<sp/>addressed<sp/>as<sp/>follows:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Internet<sp/>email:<sp/>casa-feedback@nrao.edu.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Postal<sp/>address:<sp/>AIPS++<sp/>Project<sp/>Office</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>National<sp/>Radio<sp/>Astronomy<sp/>Observatory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>520<sp/>Edgemont<sp/>Road</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Charlottesville,<sp/>VA<sp/>22903-2475<sp/>USA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ArrayMath_8h" kindref="compound">ArrayMath.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ArrayError_8h" kindref="compound">ArrayError.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="Matrix_8h" kindref="compound">Matrix.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;complex&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacecasacore" kindref="compound">casacore</ref><sp/>{<sp/></highlight><highlight class="comment">//#<sp/>NAMESPACE<sp/>CASACORE<sp/>-<sp/>BEGIN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>We<sp/>could<sp/>use<sp/>macros<sp/>to<sp/>considerably<sp/>reduce<sp/>the<sp/>number<sp/>of<sp/>lines,<sp/>however</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//#<sp/>that<sp/>makes<sp/>it<sp/>harder<sp/>to<sp/>debug,<sp/>understand,<sp/>etc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal">Array&lt;std::complex&lt;float&gt;&gt;<sp/><ref refid="namespacecasacore_1a09440658171992c2310da72f8efb6ae6" kindref="member">conj</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Array&lt;std::complex&lt;float&gt;&gt;<sp/>&amp;carray)</highlight></codeline>
<codeline lineno="38"><highlight class="normal">{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacecasacore_1a5a7c54a9ff3080948b23e4297d501af5" kindref="member">arrayTransformResult</ref><sp/>(carray,<sp/>[](std::complex&lt;float&gt;<sp/>v)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacecasacore_1a7ed6ce042b8c0be7d016f8d842d64e68" kindref="member">std::conj</ref>(v);<sp/>});</highlight></codeline>
<codeline lineno="40"><highlight class="normal">}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="42"><highlight class="normal">Array&lt;std::complex&lt;double&gt;&gt;<sp/><ref refid="namespacecasacore_1a09440658171992c2310da72f8efb6ae6" kindref="member">conj</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Array&lt;std::complex&lt;double&gt;&gt;<sp/>&amp;carray)</highlight></codeline>
<codeline lineno="43"><highlight class="normal">{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacecasacore_1a5a7c54a9ff3080948b23e4297d501af5" kindref="member">arrayTransformResult</ref><sp/>(carray,<sp/>[](std::complex&lt;double&gt;<sp/>v)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacecasacore_1a7ed6ce042b8c0be7d016f8d842d64e68" kindref="member">std::conj</ref>(v);<sp/>});</highlight></codeline>
<codeline lineno="45"><highlight class="normal">}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal">Matrix&lt;std::complex&lt;float&gt;&gt;<sp/><ref refid="namespacecasacore_1a09440658171992c2310da72f8efb6ae6" kindref="member">conj</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Matrix&lt;std::complex&lt;float&gt;&gt;<sp/>&amp;carray)</highlight></codeline>
<codeline lineno="48"><highlight class="normal">{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Matrix&lt;std::complex&lt;float&gt;&gt;(<ref refid="namespacecasacore_1a09440658171992c2310da72f8efb6ae6" kindref="member">conj</ref><sp/>((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Array&lt;std::complex&lt;float&gt;&gt;&amp;)carray));</highlight></codeline>
<codeline lineno="50"><highlight class="normal">}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="52"><highlight class="normal">Matrix&lt;std::complex&lt;double&gt;&gt;<sp/><ref refid="namespacecasacore_1a09440658171992c2310da72f8efb6ae6" kindref="member">conj</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Matrix&lt;std::complex&lt;double&gt;&gt;<sp/>&amp;carray)</highlight></codeline>
<codeline lineno="53"><highlight class="normal">{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Matrix&lt;std::complex&lt;double&gt;&gt;(<ref refid="namespacecasacore_1a09440658171992c2310da72f8efb6ae6" kindref="member">conj</ref><sp/>((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Array&lt;std::complex&lt;double&gt;&gt;&amp;)carray));</highlight></codeline>
<codeline lineno="55"><highlight class="normal">}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacecasacore_1a09440658171992c2310da72f8efb6ae6" kindref="member">conj</ref>(Array&lt;std::complex&lt;float&gt;&gt;<sp/>&amp;rarray,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Array&lt;std::complex&lt;float&gt;&gt;<sp/>&amp;carray)</highlight></codeline>
<codeline lineno="58"><highlight class="normal">{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><ref refid="namespacecasacore_1a221aa22fedb69065075aac31bb563011" kindref="member">checkArrayShapes</ref><sp/>(carray,<sp/>rarray,<sp/></highlight><highlight class="stringliteral">&quot;conj&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><ref refid="namespacecasacore_1ac6370aad428352329b7e4c04b3aa1b3b" kindref="member">arrayTransform</ref><sp/>(carray,<sp/>rarray,<sp/>[](std::complex&lt;float&gt;<sp/>v)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacecasacore_1a7ed6ce042b8c0be7d016f8d842d64e68" kindref="member">std::conj</ref>(v);<sp/>});</highlight></codeline>
<codeline lineno="61"><highlight class="normal">}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacecasacore_1a09440658171992c2310da72f8efb6ae6" kindref="member">conj</ref>(Array&lt;std::complex&lt;double&gt;&gt;<sp/>&amp;rarray,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Array&lt;std::complex&lt;double&gt;&gt;<sp/>&amp;carray)</highlight></codeline>
<codeline lineno="64"><highlight class="normal">{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><ref refid="namespacecasacore_1a221aa22fedb69065075aac31bb563011" kindref="member">checkArrayShapes</ref><sp/>(carray,<sp/>rarray,<sp/></highlight><highlight class="stringliteral">&quot;conj&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><ref refid="namespacecasacore_1ac6370aad428352329b7e4c04b3aa1b3b" kindref="member">arrayTransform</ref><sp/>(carray,<sp/>rarray,<sp/>[](std::complex&lt;double&gt;<sp/>v)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacecasacore_1a7ed6ce042b8c0be7d016f8d842d64e68" kindref="member">std::conj</ref>(v);<sp/>});</highlight></codeline>
<codeline lineno="67"><highlight class="normal">}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacecasacore_1aede9ff6c3a17f5b45e6fc56859d40d5b" kindref="member">real</ref>(Array&lt;float&gt;<sp/>&amp;rarray,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Array&lt;std::complex&lt;float&gt;&gt;<sp/>&amp;carray)</highlight></codeline>
<codeline lineno="70"><highlight class="normal">{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><ref refid="namespacecasacore_1a221aa22fedb69065075aac31bb563011" kindref="member">checkArrayShapes</ref><sp/>(carray,<sp/>rarray,<sp/></highlight><highlight class="stringliteral">&quot;real&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>std::real<sp/>is<sp/>only<sp/>a<sp/>template<sp/>since<sp/>c++14<sp/>:(</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><ref refid="namespacecasacore_1ac6370aad428352329b7e4c04b3aa1b3b" kindref="member">arrayTransform</ref><sp/>(carray,<sp/>rarray,<sp/>[](std::complex&lt;float&gt;<sp/>v)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacecasacore_1a3175a657991930eb67e74570638593d0" kindref="member">std::real</ref>(v);<sp/>});</highlight></codeline>
<codeline lineno="74"><highlight class="normal">}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacecasacore_1aede9ff6c3a17f5b45e6fc56859d40d5b" kindref="member">real</ref>(Array&lt;double&gt;<sp/>&amp;rarray,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Array&lt;std::complex&lt;double&gt;&gt;<sp/>&amp;carray)</highlight></codeline>
<codeline lineno="77"><highlight class="normal">{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><ref refid="namespacecasacore_1a221aa22fedb69065075aac31bb563011" kindref="member">checkArrayShapes</ref><sp/>(carray,<sp/>rarray,<sp/></highlight><highlight class="stringliteral">&quot;real&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><ref refid="namespacecasacore_1ac6370aad428352329b7e4c04b3aa1b3b" kindref="member">arrayTransform</ref><sp/>(carray,<sp/>rarray,<sp/>[](std::complex&lt;double&gt;<sp/>v)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacecasacore_1a3175a657991930eb67e74570638593d0" kindref="member">std::real</ref>(v);<sp/>});</highlight></codeline>
<codeline lineno="80"><highlight class="normal">}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacecasacore_1ad3d3f071b089ce0a8409042448268ad1" kindref="member">imag</ref>(Array&lt;float&gt;<sp/>&amp;rarray,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Array&lt;std::complex&lt;float&gt;&gt;<sp/>&amp;carray)</highlight></codeline>
<codeline lineno="83"><highlight class="normal">{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><ref refid="namespacecasacore_1a221aa22fedb69065075aac31bb563011" kindref="member">checkArrayShapes</ref><sp/>(carray,<sp/>rarray,<sp/></highlight><highlight class="stringliteral">&quot;imag&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><ref refid="namespacecasacore_1ac6370aad428352329b7e4c04b3aa1b3b" kindref="member">arrayTransform</ref><sp/>(carray,<sp/>rarray,<sp/>[](std::complex&lt;float&gt;<sp/>v)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacecasacore_1a86b3f0fca65658826fea98f1205bb7a9" kindref="member">std::imag</ref>(v);<sp/>});</highlight></codeline>
<codeline lineno="86"><highlight class="normal">}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacecasacore_1ad3d3f071b089ce0a8409042448268ad1" kindref="member">imag</ref>(Array&lt;double&gt;<sp/>&amp;rarray,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Array&lt;std::complex&lt;double&gt;&gt;<sp/>&amp;carray)</highlight></codeline>
<codeline lineno="89"><highlight class="normal">{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><ref refid="namespacecasacore_1a221aa22fedb69065075aac31bb563011" kindref="member">checkArrayShapes</ref><sp/>(carray,<sp/>rarray,<sp/></highlight><highlight class="stringliteral">&quot;imag&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><ref refid="namespacecasacore_1ac6370aad428352329b7e4c04b3aa1b3b" kindref="member">arrayTransform</ref><sp/>(carray,<sp/>rarray,<sp/>[](std::complex&lt;double&gt;<sp/>v)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacecasacore_1a86b3f0fca65658826fea98f1205bb7a9" kindref="member">std::imag</ref>(v);<sp/>});</highlight></codeline>
<codeline lineno="92"><highlight class="normal">}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacecasacore_1a5d59d997b8c2ed3c5d5946253838fb76" kindref="member">amplitude</ref>(Array&lt;float&gt;<sp/>&amp;rarray,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Array&lt;std::complex&lt;float&gt;&gt;<sp/>&amp;carray)</highlight></codeline>
<codeline lineno="95"><highlight class="normal">{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><ref refid="namespacecasacore_1a221aa22fedb69065075aac31bb563011" kindref="member">checkArrayShapes</ref><sp/>(carray,<sp/>rarray,<sp/></highlight><highlight class="stringliteral">&quot;amplitude&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><ref refid="namespacecasacore_1ac6370aad428352329b7e4c04b3aa1b3b" kindref="member">arrayTransform</ref><sp/>(carray,<sp/>rarray,<sp/>std::abs&lt;float&gt;);</highlight></codeline>
<codeline lineno="98"><highlight class="normal">}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacecasacore_1a5d59d997b8c2ed3c5d5946253838fb76" kindref="member">amplitude</ref>(Array&lt;double&gt;<sp/>&amp;rarray,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Array&lt;std::complex&lt;double&gt;&gt;<sp/>&amp;carray)</highlight></codeline>
<codeline lineno="101"><highlight class="normal">{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><ref refid="namespacecasacore_1a221aa22fedb69065075aac31bb563011" kindref="member">checkArrayShapes</ref><sp/>(carray,<sp/>rarray,<sp/></highlight><highlight class="stringliteral">&quot;amplitude&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><ref refid="namespacecasacore_1ac6370aad428352329b7e4c04b3aa1b3b" kindref="member">arrayTransform</ref><sp/>(carray,<sp/>rarray,<sp/>std::abs&lt;double&gt;);</highlight></codeline>
<codeline lineno="104"><highlight class="normal">}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacecasacore_1ac7bb4adb33f4467734cf44ff661d07f5" kindref="member">phase</ref>(Array&lt;float&gt;<sp/>&amp;rarray,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Array&lt;std::complex&lt;float&gt;&gt;<sp/>&amp;carray)</highlight></codeline>
<codeline lineno="107"><highlight class="normal">{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><ref refid="namespacecasacore_1a221aa22fedb69065075aac31bb563011" kindref="member">checkArrayShapes</ref><sp/>(carray,<sp/>rarray,<sp/></highlight><highlight class="stringliteral">&quot;pahse&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><ref refid="namespacecasacore_1ac6370aad428352329b7e4c04b3aa1b3b" kindref="member">arrayTransform</ref><sp/>(carray,<sp/>rarray,<sp/>[](std::complex&lt;float&gt;<sp/>v)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacecasacore_1a84d492611f18871b821d8165fd47b33c" kindref="member">std::arg</ref>(v);<sp/>});</highlight></codeline>
<codeline lineno="110"><highlight class="normal">}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacecasacore_1ac7bb4adb33f4467734cf44ff661d07f5" kindref="member">phase</ref>(Array&lt;double&gt;<sp/>&amp;rarray,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Array&lt;std::complex&lt;double&gt;&gt;<sp/>&amp;carray)</highlight></codeline>
<codeline lineno="113"><highlight class="normal">{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><ref refid="namespacecasacore_1a221aa22fedb69065075aac31bb563011" kindref="member">checkArrayShapes</ref><sp/>(carray,<sp/>rarray,<sp/></highlight><highlight class="stringliteral">&quot;phase&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><ref refid="namespacecasacore_1ac6370aad428352329b7e4c04b3aa1b3b" kindref="member">arrayTransform</ref><sp/>(carray,<sp/>rarray,<sp/>[](std::complex&lt;double&gt;<sp/>v)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacecasacore_1a84d492611f18871b821d8165fd47b33c" kindref="member">std::arg</ref>(v);<sp/>});</highlight></codeline>
<codeline lineno="116"><highlight class="normal">}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal">Array&lt;float&gt;<sp/><ref refid="namespacecasacore_1aede9ff6c3a17f5b45e6fc56859d40d5b" kindref="member">real</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Array&lt;std::complex&lt;float&gt;&gt;<sp/>&amp;carray)</highlight></codeline>
<codeline lineno="119"><highlight class="normal">{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>Array&lt;float&gt;<sp/>rarray(carray.shape());</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><ref refid="namespacecasacore_1aede9ff6c3a17f5b45e6fc56859d40d5b" kindref="member">real</ref>(rarray,<sp/>carray);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rarray;</highlight></codeline>
<codeline lineno="123"><highlight class="normal">}</highlight></codeline>
<codeline lineno="124"><highlight class="normal">Array&lt;double&gt;<sp/><ref refid="namespacecasacore_1aede9ff6c3a17f5b45e6fc56859d40d5b" kindref="member">real</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Array&lt;std::complex&lt;double&gt;&gt;<sp/>&amp;carray)</highlight></codeline>
<codeline lineno="125"><highlight class="normal">{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/>Array&lt;double&gt;<sp/>rarray(carray.shape());</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><ref refid="namespacecasacore_1aede9ff6c3a17f5b45e6fc56859d40d5b" kindref="member">real</ref>(rarray,<sp/>carray);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rarray;</highlight></codeline>
<codeline lineno="129"><highlight class="normal">}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal">Array&lt;float&gt;<sp/><ref refid="namespacecasacore_1ad3d3f071b089ce0a8409042448268ad1" kindref="member">imag</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Array&lt;std::complex&lt;float&gt;&gt;<sp/>&amp;carray)</highlight></codeline>
<codeline lineno="133"><highlight class="normal">{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/>Array&lt;float&gt;<sp/>rarray(carray.shape());</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><ref refid="namespacecasacore_1ad3d3f071b089ce0a8409042448268ad1" kindref="member">imag</ref>(rarray,<sp/>carray);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rarray;</highlight></codeline>
<codeline lineno="137"><highlight class="normal">}</highlight></codeline>
<codeline lineno="138"><highlight class="normal">Array&lt;double&gt;<sp/><ref refid="namespacecasacore_1ad3d3f071b089ce0a8409042448268ad1" kindref="member">imag</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Array&lt;std::complex&lt;double&gt;&gt;<sp/>&amp;carray)</highlight></codeline>
<codeline lineno="139"><highlight class="normal">{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>Array&lt;double&gt;<sp/>rarray(carray.shape());</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><ref refid="namespacecasacore_1ad3d3f071b089ce0a8409042448268ad1" kindref="member">imag</ref>(rarray,<sp/>carray);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rarray;</highlight></codeline>
<codeline lineno="143"><highlight class="normal">}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal">Array&lt;float&gt;<sp/><ref refid="namespacecasacore_1a5d59d997b8c2ed3c5d5946253838fb76" kindref="member">amplitude</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Array&lt;std::complex&lt;float&gt;&gt;<sp/>&amp;carray)</highlight></codeline>
<codeline lineno="146"><highlight class="normal">{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>Array&lt;float&gt;<sp/>rarray(carray.shape());</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><ref refid="namespacecasacore_1a5d59d997b8c2ed3c5d5946253838fb76" kindref="member">amplitude</ref>(rarray,<sp/>carray);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rarray;</highlight></codeline>
<codeline lineno="150"><highlight class="normal">}</highlight></codeline>
<codeline lineno="151"><highlight class="normal">Array&lt;double&gt;<sp/><ref refid="namespacecasacore_1a5d59d997b8c2ed3c5d5946253838fb76" kindref="member">amplitude</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Array&lt;std::complex&lt;double&gt;&gt;<sp/>&amp;carray)</highlight></codeline>
<codeline lineno="152"><highlight class="normal">{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/>Array&lt;double&gt;<sp/>rarray(carray.shape());</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><ref refid="namespacecasacore_1a5d59d997b8c2ed3c5d5946253838fb76" kindref="member">amplitude</ref>(rarray,<sp/>carray);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rarray;</highlight></codeline>
<codeline lineno="156"><highlight class="normal">}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal">Array&lt;float&gt;<sp/><ref refid="namespacecasacore_1ac7bb4adb33f4467734cf44ff661d07f5" kindref="member">phase</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Array&lt;std::complex&lt;float&gt;&gt;<sp/>&amp;carray)</highlight></codeline>
<codeline lineno="159"><highlight class="normal">{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/>Array&lt;float&gt;<sp/>rarray(carray.shape());</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><ref refid="namespacecasacore_1ac7bb4adb33f4467734cf44ff661d07f5" kindref="member">phase</ref>(rarray,<sp/>carray);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rarray;</highlight></codeline>
<codeline lineno="163"><highlight class="normal">}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal">Array&lt;double&gt;<sp/><ref refid="namespacecasacore_1ac7bb4adb33f4467734cf44ff661d07f5" kindref="member">phase</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Array&lt;std::complex&lt;double&gt;&gt;<sp/>&amp;carray)</highlight></codeline>
<codeline lineno="166"><highlight class="normal">{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>Array&lt;double&gt;<sp/>rarray(carray.shape());</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><ref refid="namespacecasacore_1ac7bb4adb33f4467734cf44ff661d07f5" kindref="member">phase</ref>(rarray,<sp/>carray);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rarray;</highlight></codeline>
<codeline lineno="170"><highlight class="normal">}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;thrown&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>&lt;item&gt;<sp/>ArrayError</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;/thrown&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacecasacore_1a39dc90e701415ce7080218767eadf6e5" kindref="member">ComplexToReal</ref>(Array&lt;float&gt;<sp/>&amp;rarray,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Array&lt;std::complex&lt;float&gt;&gt;<sp/>&amp;carray)</highlight></codeline>
<codeline lineno="176"><highlight class="normal">{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rarray.nelements()<sp/>!=<sp/>2*carray.nelements())<sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">(ArrayError(</highlight><highlight class="stringliteral">&quot;::ComplexToReal(Array&lt;float&gt;<sp/>&amp;rarray,<sp/>const<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Array&lt;std::complex&lt;float&gt;&gt;<sp/>&amp;carray)<sp/>-<sp/>rarray.nelements()<sp/>!=<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;2*carray.nelements()&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rarray.contiguousStorage()<sp/><sp/>&amp;&amp;<sp/><sp/>carray.contiguousStorage())<sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy<sp/>(</highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(rarray.data()),<sp/>carray.data(),</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rarray.nelements()<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>Array&lt;std::complex&lt;float&gt;&gt;::const_iterator<sp/>citer=carray.begin();</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcasacore_1_1Array_1a01b61adef85b4fd63f94ef41b89a486c" kindref="member">Array&lt;float&gt;::iterator</ref><sp/>rend<sp/>=<sp/>rarray.end();</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="classcasacore_1_1Array_1a01b61adef85b4fd63f94ef41b89a486c" kindref="member">Array&lt;float&gt;::iterator</ref><sp/>riter<sp/>=<sp/>rarray.begin();</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>riter!=rend;<sp/><sp/>++riter,<sp/>++citer)<sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*riter<sp/>=<sp/><ref refid="namespacecasacore_1aede9ff6c3a17f5b45e6fc56859d40d5b" kindref="member">real</ref>(*citer);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++riter;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*riter<sp/>=<sp/><ref refid="namespacecasacore_1ad3d3f071b089ce0a8409042448268ad1" kindref="member">imag</ref>(*citer);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal">}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;thrown&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>&lt;item&gt;<sp/>ArrayError</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;/thrown&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacecasacore_1a39dc90e701415ce7080218767eadf6e5" kindref="member">ComplexToReal</ref>(Array&lt;double&gt;<sp/>&amp;rarray,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Array&lt;std::complex&lt;double&gt;&gt;<sp/>&amp;carray)</highlight></codeline>
<codeline lineno="201"><highlight class="normal">{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rarray.nelements()<sp/>!=<sp/>2*carray.nelements())<sp/>{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">(ArrayError(</highlight><highlight class="stringliteral">&quot;::ComplexToReal(Array&lt;double&gt;<sp/>&amp;rarray,<sp/>const<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Array&lt;std::complex&lt;double&gt;&gt;<sp/>&amp;carray)<sp/>-<sp/>rarray.nelements()<sp/>!=<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;2*carray.nelements()&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rarray.contiguousStorage()<sp/><sp/>&amp;&amp;<sp/><sp/>carray.contiguousStorage())<sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy<sp/>(</highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(rarray.data()),<sp/>carray.data(),</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rarray.nelements()<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>Array&lt;std::complex&lt;double&gt;&gt;::const_iterator<sp/>citer=carray.begin();</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcasacore_1_1Array_1a01b61adef85b4fd63f94ef41b89a486c" kindref="member">Array&lt;double&gt;::iterator</ref><sp/>rend<sp/>=<sp/>rarray.end();</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="classcasacore_1_1Array_1a01b61adef85b4fd63f94ef41b89a486c" kindref="member">Array&lt;double&gt;::iterator</ref><sp/>riter<sp/>=<sp/>rarray.begin();</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>riter!=rend;<sp/><sp/>++riter,<sp/>++citer)<sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*riter<sp/>=<sp/><ref refid="namespacecasacore_1aede9ff6c3a17f5b45e6fc56859d40d5b" kindref="member">real</ref>(*citer);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++riter;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*riter<sp/>=<sp/><ref refid="namespacecasacore_1ad3d3f071b089ce0a8409042448268ad1" kindref="member">imag</ref>(*citer);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="220"><highlight class="normal">}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal">Array&lt;float&gt;<sp/><ref refid="namespacecasacore_1a39dc90e701415ce7080218767eadf6e5" kindref="member">ComplexToReal</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Array&lt;std::complex&lt;float&gt;&gt;<sp/>&amp;carray)</highlight></codeline>
<codeline lineno="223"><highlight class="normal">{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/>IPosition<sp/><ref refid="namespacecasacore_1a6c80d55c1617e8540e006c12e3dc990c" kindref="member">shape</ref><sp/>=<sp/>carray.shape();</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><ref refid="namespacecasacore_1a6c80d55c1617e8540e006c12e3dc990c" kindref="member">shape</ref>(0)<sp/>*=<sp/>2;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/>Array&lt;float&gt;<sp/>retval(<ref refid="namespacecasacore_1a6c80d55c1617e8540e006c12e3dc990c" kindref="member">shape</ref>);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><ref refid="namespacecasacore_1a39dc90e701415ce7080218767eadf6e5" kindref="member">ComplexToReal</ref>(retval,<sp/>carray);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>retval;</highlight></codeline>
<codeline lineno="229"><highlight class="normal">}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal">Array&lt;double&gt;<sp/><ref refid="namespacecasacore_1a39dc90e701415ce7080218767eadf6e5" kindref="member">ComplexToReal</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Array&lt;std::complex&lt;double&gt;&gt;<sp/>&amp;carray)</highlight></codeline>
<codeline lineno="232"><highlight class="normal">{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/>IPosition<sp/><ref refid="namespacecasacore_1a6c80d55c1617e8540e006c12e3dc990c" kindref="member">shape</ref><sp/>=<sp/>carray.shape();</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><ref refid="namespacecasacore_1a6c80d55c1617e8540e006c12e3dc990c" kindref="member">shape</ref>(0)<sp/>*=<sp/>2;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/>Array&lt;double&gt;<sp/>retval(<ref refid="namespacecasacore_1a6c80d55c1617e8540e006c12e3dc990c" kindref="member">shape</ref>);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><ref refid="namespacecasacore_1a39dc90e701415ce7080218767eadf6e5" kindref="member">ComplexToReal</ref>(retval,<sp/>carray);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>retval;</highlight></codeline>
<codeline lineno="238"><highlight class="normal">}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;thrown&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>&lt;item&gt;<sp/>ArrayError</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;/thrown&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacecasacore_1a755f42d3f8abf7139b317f09efd56504" kindref="member">RealToComplex</ref>(Array&lt;std::complex&lt;float&gt;&gt;<sp/>&amp;carray,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Array&lt;float&gt;<sp/>&amp;rarray)</highlight></codeline>
<codeline lineno="244"><highlight class="normal">{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rarray.nelements()<sp/>!=<sp/>2*carray.nelements())<sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">(ArrayError(</highlight><highlight class="stringliteral">&quot;::RealToComplex(Array&lt;std::complex&lt;float&gt;&gt;<sp/>&amp;carray,<sp/>const<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Array&lt;float&gt;<sp/>&amp;rarray)<sp/>-<sp/>rarray.nelements()<sp/>!=<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;2*carray.nelements()&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rarray.contiguousStorage()<sp/><sp/>&amp;&amp;<sp/><sp/>carray.contiguousStorage())<sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>std::copy_n(rarray.data(),<sp/>rarray.nelements(),<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">std::complex&lt;float&gt;*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(carray.data())));</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>Array&lt;std::complex&lt;float&gt;&gt;::iterator<sp/>citer=carray.begin();</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcasacore_1_1Array_1a3d3bc7f293b55248806467f721b12177" kindref="member">Array&lt;float&gt;::const_iterator</ref><sp/>rend<sp/>=<sp/>rarray.end();</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="classcasacore_1_1Array_1a3d3bc7f293b55248806467f721b12177" kindref="member">Array&lt;float&gt;::const_iterator</ref><sp/>riter<sp/>=<sp/>rarray.begin();</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>riter!=rend;<sp/><sp/>++riter,<sp/>++citer)<sp/>{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>*riter;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++riter;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*citer<sp/>=<sp/>std::complex&lt;float&gt;(r,<sp/>*riter);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="262"><highlight class="normal">}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;thrown&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>&lt;item&gt;<sp/>ArrayError</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;/thrown&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacecasacore_1a755f42d3f8abf7139b317f09efd56504" kindref="member">RealToComplex</ref>(Array&lt;std::complex&lt;double&gt;&gt;<sp/>&amp;carray,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Array&lt;double&gt;<sp/>&amp;rarray)</highlight></codeline>
<codeline lineno="268"><highlight class="normal">{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rarray.nelements()<sp/>!=<sp/>2*carray.nelements())<sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">(ArrayError(</highlight><highlight class="stringliteral">&quot;::RealToComplex(Array&lt;std::complex&lt;double&gt;&gt;<sp/>&amp;carray,<sp/>const<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Array&lt;double&gt;<sp/>&amp;rarray)<sp/>-<sp/>rarray.nelements()<sp/>!=<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;2*carray.nelements()&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rarray.contiguousStorage()<sp/><sp/>&amp;&amp;<sp/><sp/>carray.contiguousStorage())<sp/>{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>std::copy_n(rarray.data(),<sp/>rarray.nelements(),<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">std::complex&lt;double&gt;*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(carray.data())));</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>Array&lt;std::complex&lt;double&gt;&gt;::iterator<sp/>citer=carray.begin();</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcasacore_1_1Array_1a3d3bc7f293b55248806467f721b12177" kindref="member">Array&lt;double&gt;::const_iterator</ref><sp/>rend<sp/>=<sp/>rarray.end();</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="classcasacore_1_1Array_1a3d3bc7f293b55248806467f721b12177" kindref="member">Array&lt;double&gt;::const_iterator</ref><sp/>riter<sp/>=<sp/>rarray.begin();</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>riter!=rend;<sp/><sp/>++riter,<sp/>++citer)<sp/>{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>*riter;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++riter;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*citer<sp/>=<sp/>std::complex&lt;double&gt;(r,<sp/>*riter);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="286"><highlight class="normal">}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;thrown&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>&lt;item&gt;<sp/>ArrayError</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;/thrown&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal">Array&lt;std::complex&lt;float&gt;&gt;<sp/><ref refid="namespacecasacore_1a755f42d3f8abf7139b317f09efd56504" kindref="member">RealToComplex</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Array&lt;float&gt;<sp/>&amp;rarray)</highlight></codeline>
<codeline lineno="293"><highlight class="normal">{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/>IPosition<sp/><ref refid="namespacecasacore_1a6c80d55c1617e8540e006c12e3dc990c" kindref="member">shape</ref><sp/>=<sp/>rarray.shape();</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespacecasacore_1a6c80d55c1617e8540e006c12e3dc990c" kindref="member">shape</ref>(0)<sp/>%2<sp/>==<sp/>1)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>Odd<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">(ArrayError(</highlight><highlight class="stringliteral">&quot;Array&lt;std::complex&lt;float&gt;&gt;<sp/>RealToComplex(const<sp/>Array&lt;float&gt;<sp/>&amp;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;rarray)<sp/>-<sp/>rarray.shape()(0)<sp/>not<sp/>even&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><ref refid="namespacecasacore_1a6c80d55c1617e8540e006c12e3dc990c" kindref="member">shape</ref>(0)<sp/>/=<sp/>2;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/>Array&lt;std::complex&lt;float&gt;&gt;<sp/>retval(<ref refid="namespacecasacore_1a6c80d55c1617e8540e006c12e3dc990c" kindref="member">shape</ref>);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><ref refid="namespacecasacore_1a755f42d3f8abf7139b317f09efd56504" kindref="member">RealToComplex</ref>(retval,<sp/>rarray);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>retval;</highlight></codeline>
<codeline lineno="303"><highlight class="normal">}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;thrown&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>&lt;item&gt;<sp/>ArrayError</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&lt;/thrown&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal">Array&lt;std::complex&lt;double&gt;&gt;<sp/><ref refid="namespacecasacore_1a755f42d3f8abf7139b317f09efd56504" kindref="member">RealToComplex</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Array&lt;double&gt;<sp/>&amp;rarray)</highlight></codeline>
<codeline lineno="309"><highlight class="normal">{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/>IPosition<sp/><ref refid="namespacecasacore_1a6c80d55c1617e8540e006c12e3dc990c" kindref="member">shape</ref><sp/>=<sp/>rarray.shape();</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespacecasacore_1a6c80d55c1617e8540e006c12e3dc990c" kindref="member">shape</ref>(0)<sp/>%2<sp/>==<sp/>1)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>Odd<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">(ArrayError(</highlight><highlight class="stringliteral">&quot;Array&lt;std::complex&lt;double&gt;&gt;<sp/>RealToComplex(const<sp/>Array&lt;double&gt;<sp/>&amp;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;rarray)<sp/>-<sp/>rarray.shape()(0)<sp/>not<sp/>even&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><ref refid="namespacecasacore_1a6c80d55c1617e8540e006c12e3dc990c" kindref="member">shape</ref>(0)<sp/>/=<sp/>2;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/>Array&lt;std::complex&lt;double&gt;&gt;<sp/>retval(<ref refid="namespacecasacore_1a6c80d55c1617e8540e006c12e3dc990c" kindref="member">shape</ref>);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><ref refid="namespacecasacore_1a755f42d3f8abf7139b317f09efd56504" kindref="member">RealToComplex</ref>(retval,<sp/>rarray);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>retval;</highlight></codeline>
<codeline lineno="319"><highlight class="normal">}</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal">IPosition<sp/><ref refid="namespacecasacore_1aec92b27d699e142ac0207ae4ddfa2b00" kindref="member">checkExpandArray</ref><sp/>(IPosition&amp;<sp/>mult,</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IPosition&amp;<sp/>inshp,</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>IPosition&amp;<sp/>inShape,</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>IPosition&amp;<sp/>outShape,</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>IPosition&amp;<sp/>alternate)</highlight></codeline>
<codeline lineno="327"><highlight class="normal">{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inShape.size()<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>ArrayError(</highlight><highlight class="stringliteral">&quot;expandArray:<sp/>input<sp/>array<sp/>cannot<sp/>be<sp/>empty&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/>mult.resize<sp/>(outShape.size());</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/>inshp.resize<sp/>(outShape.size());</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/>inshp<sp/>=<sp/>1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>missing<sp/>axes<sp/>have<sp/>length<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/>IPosition<sp/>alt(outShape.size(),<sp/>0);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;outShape.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>inShape.size())<sp/>{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>inshp[i]<sp/>=<sp/>inShape[i];</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inshp[i]<sp/>&lt;=<sp/>0<sp/><sp/>||<sp/><sp/>inshp[i]<sp/>&gt;<sp/>outShape[i]<sp/><sp/>||</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outShape[i]<sp/>%<sp/>inshp[i]<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>ArrayError(</highlight><highlight class="stringliteral">&quot;expandArray:<sp/>length<sp/>of<sp/>each<sp/>input<sp/>array<sp/>axis<sp/>must<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;be<sp/>&lt;=<sp/>output<sp/>axis<sp/>and<sp/>divide<sp/>evenly&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>for<sp/>an<sp/>input<sp/>length<sp/>1,<sp/>linear<sp/>and<sp/>alternate<sp/>come<sp/>to<sp/>the<sp/>same.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Linear<sp/>is<sp/>faster,<sp/>so<sp/>use<sp/>that<sp/>if<sp/>possible.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>alternate.size()<sp/><sp/>&amp;&amp;<sp/><sp/>inshp[i]<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>alt[i]<sp/>=<sp/>alternate[i];</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>mult[i]<sp/>=<sp/>outShape[i]<sp/>/<sp/>inshp[i];</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>alt;</highlight></codeline>
<codeline lineno="352"><highlight class="normal">}</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal">}<sp/></highlight><highlight class="comment">//#<sp/>NAMESPACE<sp/>CASACORE<sp/>-<sp/>END</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="casa/Arrays/Array2Math.cc"/>
  </compounddef>
</doxygen>
