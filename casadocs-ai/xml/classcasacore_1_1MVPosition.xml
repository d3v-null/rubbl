<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classcasacore_1_1MVPosition" kind="class" language="C++" prot="public">
    <compoundname>casacore::MVPosition</compoundname>
    <basecompoundref refid="classcasacore_1_1MeasValue" prot="public" virt="non-virtual">casacore::MeasValue</basecompoundref>
    <derivedcompoundref refid="classcasacore_1_1MVBaseline" prot="public" virt="non-virtual">casacore::MVBaseline</derivedcompoundref>
    <derivedcompoundref refid="classcasacore_1_1MVDirection" prot="public" virt="non-virtual">casacore::MVDirection</derivedcompoundref>
    <derivedcompoundref refid="classcasacore_1_1MVEarthMagnetic" prot="public" virt="non-virtual">casacore::MVEarthMagnetic</derivedcompoundref>
    <derivedcompoundref refid="classcasacore_1_1MVuvw" prot="public" virt="non-virtual">casacore::MVuvw</derivedcompoundref>
    <includes refid="MVPosition_8h" local="no">MVPosition.h</includes>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classcasacore_1_1MVPosition_1a68d9e9d68fcfc5ede207cf9295cd2c41" prot="public" static="yes" mutable="no">
        <type>const <ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref></type>
        <definition>const Double casacore::MVPosition::loLimit</definition>
        <argsstring></argsstring>
        <name>loLimit</name>
        <initializer>= 743.568</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVPosition.h" line="117" column="23" bodyfile="casa/Quanta/MVPosition.h" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcasacore_1_1MVPosition_1a3c8062b428e9a9ab2d8010cdbd79dde6" prot="public" static="yes" mutable="no">
        <type>const <ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref></type>
        <definition>const Double casacore::MVPosition::hiLimit</definition>
        <argsstring></argsstring>
        <name>hiLimit</name>
        <initializer>= 743.569</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVPosition.h" line="118" column="23" bodyfile="casa/Quanta/MVPosition.h" bodystart="118" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classcasacore_1_1MVPosition_1a551dd71b35743a75bf63ecf8acc1941f" prot="protected" static="no" mutable="no">
        <type><ref refid="classcasacore_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref> &gt;</type>
        <definition>Vector&lt;Double&gt; casacore::MVPosition::xyz</definition>
        <argsstring></argsstring>
        <name>xyz</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVPosition.h" line="279" column="10" bodyfile="casa/Quanta/MVPosition.h" bodystart="279" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classcasacore_1_1MVPosition_1a21326a2f7332098fd7a9025aa488519d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>casacore::MVPosition::MVPosition</definition>
        <argsstring>()</argsstring>
        <name>MVPosition</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVPosition.h" line="124" column="3" bodyfile="casa/Quanta/MVPosition.cc" bodystart="47" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVPosition_1aa9269c847a2cd9befd81b498925ba39b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>casacore::MVPosition::MVPosition</definition>
        <argsstring>(const MVPosition &amp;other)</argsstring>
        <name>MVPosition</name>
        <param>
          <type>const <ref refid="classcasacore_1_1MVPosition" kindref="compound">MVPosition</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVPosition.h" line="126" column="3" bodyfile="casa/Quanta/MVPosition.cc" bodystart="53" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVPosition_1ae0939f0ca999f393e8fee53c38a3eb48" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>casacore::MVPosition::MVPosition</definition>
        <argsstring>(Double in0, Double in1, Double in2)</argsstring>
        <name>MVPosition</name>
        <param>
          <type><ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref></type>
          <declname>in0</declname>
        </param>
        <param>
          <type><ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref></type>
          <declname>in1</declname>
        </param>
        <param>
          <type><ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref></type>
          <declname>in2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVPosition.h" line="128" column="3" bodyfile="casa/Quanta/MVPosition.cc" bodystart="82" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVPosition_1a6ea4ef67e7b39a6268c00740360c4dcb" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>casacore::MVPosition::MVPosition</definition>
        <argsstring>(Double in0)</argsstring>
        <name>MVPosition</name>
        <param>
          <type><ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref></type>
          <declname>in0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVPosition.h" line="131" column="12" bodyfile="casa/Quanta/MVPosition.cc" bodystart="67" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVPosition_1acc76d6d52f06f0cdcbb57da724d32068" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>casacore::MVPosition::MVPosition</definition>
        <argsstring>(const Quantity &amp;l)</argsstring>
        <name>MVPosition</name>
        <param>
          <type>const <ref refid="namespacecasacore_1ad5429fefc00b65ab7ddb394a0e3fa410" kindref="member">Quantity</ref> &amp;</type>
          <declname>l</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVPosition.h" line="132" column="3" bodyfile="casa/Quanta/MVPosition.cc" bodystart="74" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVPosition_1a5614b478f83000a84da696019936c62d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>casacore::MVPosition::MVPosition</definition>
        <argsstring>(const Quantity &amp;l, Double angle0, Double angle1)</argsstring>
        <name>MVPosition</name>
        <param>
          <type>const <ref refid="namespacecasacore_1ad5429fefc00b65ab7ddb394a0e3fa410" kindref="member">Quantity</ref> &amp;</type>
          <declname>l</declname>
        </param>
        <param>
          <type><ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref></type>
          <declname>angle0</declname>
        </param>
        <param>
          <type><ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref></type>
          <declname>angle1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVPosition.h" line="135" column="3" bodyfile="casa/Quanta/MVPosition.cc" bodystart="90" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVPosition_1a56011736511128a89cfbe7e82eae16f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>casacore::MVPosition::MVPosition</definition>
        <argsstring>(const Quantity &amp;l, const Quantity &amp;angle0, const Quantity &amp;angle1)</argsstring>
        <name>MVPosition</name>
        <param>
          <type>const <ref refid="namespacecasacore_1ad5429fefc00b65ab7ddb394a0e3fa410" kindref="member">Quantity</ref> &amp;</type>
          <declname>l</declname>
        </param>
        <param>
          <type>const <ref refid="namespacecasacore_1ad5429fefc00b65ab7ddb394a0e3fa410" kindref="member">Quantity</ref> &amp;</type>
          <declname>angle0</declname>
        </param>
        <param>
          <type>const <ref refid="namespacecasacore_1ad5429fefc00b65ab7ddb394a0e3fa410" kindref="member">Quantity</ref> &amp;</type>
          <declname>angle1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVPosition.h" line="141" column="3" bodyfile="casa/Quanta/MVPosition.cc" bodystart="102" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVPosition_1a76b6aa4b72bdf076ba43dbe5f5fca679" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>casacore::MVPosition::MVPosition</definition>
        <argsstring>(const Quantum&lt; Vector&lt; Double &gt; &gt; &amp;angle)</argsstring>
        <name>MVPosition</name>
        <param>
          <type>const <ref refid="classcasacore_1_1Quantum" kindref="compound">Quantum</ref>&lt; <ref refid="classcasacore_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref> &gt; &gt; &amp;</type>
          <declname>angle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVPosition.h" line="144" column="3" bodyfile="casa/Quanta/MVPosition.cc" bodystart="116" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVPosition_1acb0e68e6099edd60cca074dddf61c4ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>casacore::MVPosition::MVPosition</definition>
        <argsstring>(const Quantity &amp;l, const Quantum&lt; Vector&lt; Double &gt; &gt; &amp;angle)</argsstring>
        <name>MVPosition</name>
        <param>
          <type>const <ref refid="namespacecasacore_1ad5429fefc00b65ab7ddb394a0e3fa410" kindref="member">Quantity</ref> &amp;</type>
          <declname>l</declname>
        </param>
        <param>
          <type>const <ref refid="classcasacore_1_1Quantum" kindref="compound">Quantum</ref>&lt; <ref refid="classcasacore_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref> &gt; &gt; &amp;</type>
          <declname>angle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVPosition.h" line="145" column="3" bodyfile="casa/Quanta/MVPosition.cc" bodystart="141" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVPosition_1a894245bef2da6c29b3897f4ee7289ec7" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>casacore::MVPosition::MVPosition</definition>
        <argsstring>(const Vector&lt; Double &gt; &amp;other)</argsstring>
        <name>MVPosition</name>
        <param>
          <type>const <ref refid="classcasacore_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref> &gt; &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVPosition.h" line="149" column="12" bodyfile="casa/Quanta/MVPosition.cc" bodystart="169" bodyend="191"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVPosition_1ad4d29cd21fac6b76c7465696975635a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>casacore::MVPosition::MVPosition</definition>
        <argsstring>(const Vector&lt; Quantity &gt; &amp;other)</argsstring>
        <name>MVPosition</name>
        <param>
          <type>const <ref refid="classcasacore_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespacecasacore_1ad5429fefc00b65ab7ddb394a0e3fa410" kindref="member">Quantity</ref> &gt; &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVPosition.h" line="150" column="3" bodyfile="casa/Quanta/MVPosition.cc" bodystart="193" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVPosition_1aaa0aedf3ab1c4e42082b297ea3638ade" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classcasacore_1_1MVPosition" kindref="compound">MVPosition</ref> &amp;</type>
        <definition>MVPosition &amp; casacore::MVPosition::operator=</definition>
        <argsstring>(const MVPosition &amp;other)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classcasacore_1_1MVPosition" kindref="compound">MVPosition</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVPosition.h" line="153" column="14" bodyfile="casa/Quanta/MVPosition.cc" bodystart="60" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVPosition_1aa2ad44e41979adc63cc6419111badf04" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>casacore::MVPosition::~MVPosition</definition>
        <argsstring>()</argsstring>
        <name>~MVPosition</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVPosition.h" line="156" column="11" bodyfile="casa/Quanta/MVPosition.cc" bodystart="201" bodyend="203"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVPosition_1a331c61874c56a808eaa72f1ec8677db1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref></type>
        <definition>Double casacore::MVPosition::operator*</definition>
        <argsstring>(const MVPosition &amp;other) const</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="classcasacore_1_1MVPosition" kindref="compound">MVPosition</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVPosition.h" line="161" column="10" bodyfile="casa/Quanta/MVPosition.cc" bodystart="232" bodyend="238"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVPosition_1a7d75af8c83d440e3642f80845aa8d5b2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacecasacore_1abd5691f9e13acc90d901e4007740ff98" kindref="member">Bool</ref></type>
        <definition>Bool casacore::MVPosition::operator==</definition>
        <argsstring>(const MVPosition &amp;other) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classcasacore_1_1MVPosition" kindref="compound">MVPosition</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVPosition.h" line="166" column="8" bodyfile="casa/Quanta/MVPosition.cc" bodystart="207" bodyend="209"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVPosition_1adbd146002c4d08ff4c51d3ddaa90ef13" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacecasacore_1abd5691f9e13acc90d901e4007740ff98" kindref="member">Bool</ref></type>
        <definition>Bool casacore::MVPosition::operator!=</definition>
        <argsstring>(const MVPosition &amp;other) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classcasacore_1_1MVPosition" kindref="compound">MVPosition</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVPosition.h" line="167" column="8" bodyfile="casa/Quanta/MVPosition.cc" bodystart="212" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVPosition_1ac687b17a87c1bffd54b561315a5534c0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacecasacore_1abd5691f9e13acc90d901e4007740ff98" kindref="member">Bool</ref></type>
        <definition>Bool casacore::MVPosition::near</definition>
        <argsstring>(const MVPosition &amp;other, Double tol=1e-13) const</argsstring>
        <name>near</name>
        <param>
          <type>const <ref refid="classcasacore_1_1MVPosition" kindref="compound">MVPosition</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <param>
          <type><ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref></type>
          <declname>tol</declname>
          <defval>1e-13</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVPosition.h" line="168" column="8" bodyfile="casa/Quanta/MVPosition.cc" bodystart="217" bodyend="219"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVPosition_1ad8e6b7ef461f05b6fb23a187eda833f1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacecasacore_1abd5691f9e13acc90d901e4007740ff98" kindref="member">Bool</ref></type>
        <definition>Bool casacore::MVPosition::near</definition>
        <argsstring>(const MVPosition &amp;other, Quantity tol) const</argsstring>
        <name>near</name>
        <param>
          <type>const <ref refid="classcasacore_1_1MVPosition" kindref="compound">MVPosition</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <param>
          <type><ref refid="namespacecasacore_1ad5429fefc00b65ab7ddb394a0e3fa410" kindref="member">Quantity</ref></type>
          <declname>tol</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVPosition.h" line="169" column="8" bodyfile="casa/Quanta/MVPosition.cc" bodystart="222" bodyend="224"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVPosition_1a981526d5e89d26d7f0c27656be3a5a75" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacecasacore_1abd5691f9e13acc90d901e4007740ff98" kindref="member">Bool</ref></type>
        <definition>Bool casacore::MVPosition::nearAbs</definition>
        <argsstring>(const MVPosition &amp;other, Double tol=1e-13) const</argsstring>
        <name>nearAbs</name>
        <param>
          <type>const <ref refid="classcasacore_1_1MVPosition" kindref="compound">MVPosition</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <param>
          <type><ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref></type>
          <declname>tol</declname>
          <defval>1e-13</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVPosition.h" line="170" column="8" bodyfile="casa/Quanta/MVPosition.cc" bodystart="227" bodyend="229"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVPosition_1ad4d8feae36e9c509725c0be48d6d4266" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classcasacore_1_1MVPosition" kindref="compound">MVPosition</ref></type>
        <definition>MVPosition casacore::MVPosition::operator-</definition>
        <argsstring>() const</argsstring>
        <name>operator-</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVPosition.h" line="175" column="14" bodyfile="casa/Quanta/MVPosition.cc" bodystart="250" bodyend="254"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVPosition_1ae823d852d1f752b309f65ebe3bf8728c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classcasacore_1_1MVPosition" kindref="compound">MVPosition</ref> &amp;</type>
        <definition>MVPosition &amp; casacore::MVPosition::operator+=</definition>
        <argsstring>(const MVPosition &amp;right)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const <ref refid="classcasacore_1_1MVPosition" kindref="compound">MVPosition</ref> &amp;</type>
          <declname>right</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVPosition.h" line="176" column="14" bodyfile="casa/Quanta/MVPosition.cc" bodystart="256" bodyend="259"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVPosition_1aed1b9388f3e6144aac671eda4b21de92" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classcasacore_1_1MVPosition" kindref="compound">MVPosition</ref></type>
        <definition>MVPosition casacore::MVPosition::operator+</definition>
        <argsstring>(const MVPosition &amp;right) const</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="classcasacore_1_1MVPosition" kindref="compound">MVPosition</ref> &amp;</type>
          <declname>right</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVPosition.h" line="177" column="14" bodyfile="casa/Quanta/MVPosition.cc" bodystart="261" bodyend="265"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVPosition_1a7cc1203b0b1ba466be58ee8826783b1e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classcasacore_1_1MVPosition" kindref="compound">MVPosition</ref> &amp;</type>
        <definition>MVPosition &amp; casacore::MVPosition::operator-=</definition>
        <argsstring>(const MVPosition &amp;right)</argsstring>
        <name>operator-=</name>
        <param>
          <type>const <ref refid="classcasacore_1_1MVPosition" kindref="compound">MVPosition</ref> &amp;</type>
          <declname>right</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVPosition.h" line="178" column="14" bodyfile="casa/Quanta/MVPosition.cc" bodystart="267" bodyend="270"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVPosition_1a33eef1c5cfe38c71c5dbccc7686a79ef" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classcasacore_1_1MVPosition" kindref="compound">MVPosition</ref></type>
        <definition>MVPosition casacore::MVPosition::operator-</definition>
        <argsstring>(const MVPosition &amp;right) const</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="classcasacore_1_1MVPosition" kindref="compound">MVPosition</ref> &amp;</type>
          <declname>right</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVPosition.h" line="179" column="14" bodyfile="casa/Quanta/MVPosition.cc" bodystart="272" bodyend="276"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVPosition_1a0e2795ad561ed43fe17bf59601b01653" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classcasacore_1_1MVPosition" kindref="compound">MVPosition</ref> &amp;</type>
        <definition>MVPosition &amp; casacore::MVPosition::operator*=</definition>
        <argsstring>(const RotMatrix &amp;right)</argsstring>
        <name>operator*=</name>
        <param>
          <type>const <ref refid="classcasacore_1_1RotMatrix" kindref="compound">RotMatrix</ref> &amp;</type>
          <declname>right</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVPosition.h" line="184" column="14" bodyfile="casa/Quanta/MVPosition.cc" bodystart="278" bodyend="286"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVPosition_1ab0a7b145d31dcbacf3ec9509be83fcc7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classcasacore_1_1MVPosition" kindref="compound">MVPosition</ref> &amp;</type>
        <definition>MVPosition &amp; casacore::MVPosition::operator*=</definition>
        <argsstring>(Double right)</argsstring>
        <name>operator*=</name>
        <param>
          <type><ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref></type>
          <declname>right</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVPosition.h" line="189" column="14" bodyfile="casa/Quanta/MVPosition.cc" bodystart="288" bodyend="293"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVPosition_1a05b7e5a99b2ddb5f92a665eb060c775d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref> &amp;</type>
        <definition>Double &amp; casacore::MVPosition::operator()</definition>
        <argsstring>(uInt which)</argsstring>
        <name>operator()</name>
        <param>
          <type><ref refid="namespacecasacore_1a5c559d8d8bf2ae7f67b439955d6be88a" kindref="member">uInt</ref></type>
          <declname>which</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVPosition.h" line="194" column="10" bodyfile="casa/Quanta/MVPosition.cc" bodystart="240" bodyend="243"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVPosition_1a2cdc2fb21309cecf4d25421d07de4341" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref> &amp;</type>
        <definition>const Double &amp; casacore::MVPosition::operator()</definition>
        <argsstring>(uInt which) const</argsstring>
        <name>operator()</name>
        <param>
          <type><ref refid="namespacecasacore_1a5c559d8d8bf2ae7f67b439955d6be88a" kindref="member">uInt</ref></type>
          <declname>which</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVPosition.h" line="195" column="16" bodyfile="casa/Quanta/MVPosition.cc" bodystart="245" bodyend="248"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVPosition_1acabaf16edfb55c50ed5cf957fd9cd577" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void casacore::MVPosition::adjust</definition>
        <argsstring>()</argsstring>
        <name>adjust</name>
        <reimplements refid="classcasacore_1_1MeasValue_1a350b5664f240c9054bf27b72e8d41d7a">adjust</reimplements>
        <reimplementedby refid="classcasacore_1_1MVBaseline_1a8e30d6fa838e81f574025be3d2b05fbf">adjust</reimplementedby>
        <reimplementedby refid="classcasacore_1_1MVDirection_1ad003d6f895714d72b61a4dabaa22797b">adjust</reimplementedby>
        <reimplementedby refid="classcasacore_1_1MVEarthMagnetic_1a8d4a074d51d7a5551cdf7d5923dcf695">adjust</reimplementedby>
        <reimplementedby refid="classcasacore_1_1MVuvw_1a1a25ef5bcc57fed1f7a572c90e2086c0">adjust</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVPosition.h" line="208" column="16" bodyfile="casa/Quanta/MVPosition.cc" bodystart="303" bodyend="303"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVPosition_1afe19293de36f0fafd5c970405febc65b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void casacore::MVPosition::adjust</definition>
        <argsstring>(Double &amp;res)</argsstring>
        <name>adjust</name>
        <reimplements refid="classcasacore_1_1MeasValue_1a09f28dd3fff38b052f9b6638647eb41f">adjust</reimplements>
        <reimplementedby refid="classcasacore_1_1MVBaseline_1ab0027fc452d42a6429319de143e7a1e5">adjust</reimplementedby>
        <reimplementedby refid="classcasacore_1_1MVDirection_1aeafc0ada33595b3a30f43c015d6f8ef5">adjust</reimplementedby>
        <reimplementedby refid="classcasacore_1_1MVEarthMagnetic_1a392cc65e8359615eca68b7381a20baf4">adjust</reimplementedby>
        <reimplementedby refid="classcasacore_1_1MVuvw_1a9b75aa21a5b2390104a24cfe6442f4d0">adjust</reimplementedby>
        <param>
          <type><ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref> &amp;</type>
          <declname>res</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVPosition.h" line="210" column="16" bodyfile="casa/Quanta/MVPosition.cc" bodystart="305" bodyend="310"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVPosition_1aa23861f4d6690deef7859592d8b30168" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void casacore::MVPosition::readjust</definition>
        <argsstring>(Double res)</argsstring>
        <name>readjust</name>
        <reimplements refid="classcasacore_1_1MeasValue_1a0559353e6ae41bb0b35ef95ff30428e7">readjust</reimplements>
        <reimplementedby refid="classcasacore_1_1MVBaseline_1a129d06e0487dce1276a4780e769a986e">readjust</reimplementedby>
        <reimplementedby refid="classcasacore_1_1MVEarthMagnetic_1a4a7a900bd5e226f01b36a33de4e16934">readjust</reimplementedby>
        <reimplementedby refid="classcasacore_1_1MVuvw_1a07b41f5c2d42949b0ce97e6988dc19ee">readjust</reimplementedby>
        <param>
          <type><ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref></type>
          <declname>res</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVPosition.h" line="212" column="16" bodyfile="casa/Quanta/MVPosition.cc" bodystart="312" bodyend="318"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVPosition_1aebfd2bfb4a082d8d13421e77cea3d594" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref></type>
        <definition>Double casacore::MVPosition::radius</definition>
        <argsstring>()</argsstring>
        <name>radius</name>
        <reimplementedby refid="classcasacore_1_1MVBaseline_1a822c5314134033da2c39f3a11078e589">radius</reimplementedby>
        <reimplementedby refid="classcasacore_1_1MVEarthMagnetic_1a5050edb55640bdf203f187aa5c85cdc4">radius</reimplementedby>
        <reimplementedby refid="classcasacore_1_1MVuvw_1a2837ddb0b8e23d7d77c79055030f70a9">radius</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVPosition.h" line="215" column="18" bodyfile="casa/Quanta/MVPosition.cc" bodystart="320" bodyend="322"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVPosition_1af14c399933fd965b78d78165f7ee7eec" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classcasacore_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref> &gt;</type>
        <definition>Vector&lt; Double &gt; casacore::MVPosition::get</definition>
        <argsstring>() const</argsstring>
        <name>get</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVPosition.h" line="217" column="10" bodyfile="casa/Quanta/MVPosition.cc" bodystart="324" bodyend="333"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVPosition_1a858dc38da7d951497ec06a2a5ee93294" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classcasacore_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref> &gt; &amp;</type>
        <definition>const Vector&lt; Double &gt; &amp; casacore::MVPosition::getValue</definition>
        <argsstring>() const</argsstring>
        <name>getValue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVPosition.h" line="219" column="16" bodyfile="casa/Quanta/MVPosition.cc" bodystart="335" bodyend="337"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVPosition_1a181392cbcfaa7e9575de117d5723f2eb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classcasacore_1_1Quantum" kindref="compound">Quantum</ref>&lt; <ref refid="classcasacore_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref> &gt; &gt;</type>
        <definition>Quantum&lt; Vector&lt; Double &gt; &gt; casacore::MVPosition::getAngle</definition>
        <argsstring>() const</argsstring>
        <name>getAngle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVPosition.h" line="221" column="11" bodyfile="casa/Quanta/MVPosition.cc" bodystart="339" bodyend="345"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVPosition_1a0dc6ce6020102f886ff92e117841a29e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classcasacore_1_1Quantum" kindref="compound">Quantum</ref>&lt; <ref refid="classcasacore_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref> &gt; &gt;</type>
        <definition>Quantum&lt; Vector&lt; Double &gt; &gt; casacore::MVPosition::getAngle</definition>
        <argsstring>(const Unit &amp;unit) const</argsstring>
        <name>getAngle</name>
        <param>
          <type>const <ref refid="classcasacore_1_1Unit" kindref="compound">Unit</ref> &amp;</type>
          <declname>unit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVPosition.h" line="223" column="11" bodyfile="casa/Quanta/MVPosition.cc" bodystart="347" bodyend="349"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVPosition_1a340743eb299e59b169c26814c0e19bbb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref></type>
        <definition>Double casacore::MVPosition::getLong</definition>
        <argsstring>() const</argsstring>
        <name>getLong</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVPosition.h" line="225" column="10" bodyfile="casa/Quanta/MVPosition.cc" bodystart="351" bodyend="354"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVPosition_1af45d337c5cbb6f1871a483d3fa9f6846" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacecasacore_1ad5429fefc00b65ab7ddb394a0e3fa410" kindref="member">Quantity</ref></type>
        <definition>Quantity casacore::MVPosition::getLong</definition>
        <argsstring>(const Unit &amp;unit) const</argsstring>
        <name>getLong</name>
        <param>
          <type>const <ref refid="classcasacore_1_1Unit" kindref="compound">Unit</ref> &amp;</type>
          <declname>unit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVPosition.h" line="227" column="12" bodyfile="casa/Quanta/MVPosition.cc" bodystart="356" bodyend="358"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVPosition_1a7cda3724c193cb0b71d75f97acd9f469" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref></type>
        <definition>Double casacore::MVPosition::getLat</definition>
        <argsstring>() const</argsstring>
        <name>getLat</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVPosition.h" line="229" column="10" bodyfile="casa/Quanta/MVPosition.cc" bodystart="360" bodyend="362"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVPosition_1ae903227f05ba60df59c6650295e8f748" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacecasacore_1ad5429fefc00b65ab7ddb394a0e3fa410" kindref="member">Quantity</ref></type>
        <definition>Quantity casacore::MVPosition::getLat</definition>
        <argsstring>(const Unit &amp;unit) const</argsstring>
        <name>getLat</name>
        <param>
          <type>const <ref refid="classcasacore_1_1Unit" kindref="compound">Unit</ref> &amp;</type>
          <declname>unit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVPosition.h" line="231" column="12" bodyfile="casa/Quanta/MVPosition.cc" bodystart="368" bodyend="370"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVPosition_1a8c8e3d9c1a33bde4aecfedddda0834ec" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacecasacore_1ad5429fefc00b65ab7ddb394a0e3fa410" kindref="member">Quantity</ref></type>
        <definition>Quantity casacore::MVPosition::getLength</definition>
        <argsstring>() const</argsstring>
        <name>getLength</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVPosition.h" line="233" column="12" bodyfile="casa/Quanta/MVPosition.cc" bodystart="372" bodyend="375"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVPosition_1a379e91bf2e7f118f0d9b3e898b8a1240" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacecasacore_1ad5429fefc00b65ab7ddb394a0e3fa410" kindref="member">Quantity</ref></type>
        <definition>Quantity casacore::MVPosition::getLength</definition>
        <argsstring>(const Unit &amp;unit) const</argsstring>
        <name>getLength</name>
        <param>
          <type>const <ref refid="classcasacore_1_1Unit" kindref="compound">Unit</ref> &amp;</type>
          <declname>unit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVPosition.h" line="235" column="12" bodyfile="casa/Quanta/MVPosition.cc" bodystart="377" bodyend="379"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVPosition_1a798d187490d288620eeea965a01920b8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref></type>
        <definition>Double casacore::MVPosition::positionAngle</definition>
        <argsstring>(const MVPosition &amp;other) const</argsstring>
        <name>positionAngle</name>
        <param>
          <type>const <ref refid="classcasacore_1_1MVPosition" kindref="compound">MVPosition</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVPosition.h" line="239" column="10" bodyfile="casa/Quanta/MVPosition.cc" bodystart="381" bodyend="391"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVPosition_1aa34e24929cc4d6f5f67b83273eefdbca" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacecasacore_1ad5429fefc00b65ab7ddb394a0e3fa410" kindref="member">Quantity</ref></type>
        <definition>Quantity casacore::MVPosition::positionAngle</definition>
        <argsstring>(const MVPosition &amp;other, const Unit &amp;unit) const</argsstring>
        <name>positionAngle</name>
        <param>
          <type>const <ref refid="classcasacore_1_1MVPosition" kindref="compound">MVPosition</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <param>
          <type>const <ref refid="classcasacore_1_1Unit" kindref="compound">Unit</ref> &amp;</type>
          <declname>unit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVPosition.h" line="240" column="12" bodyfile="casa/Quanta/MVPosition.cc" bodystart="393" bodyend="396"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVPosition_1aac8200d657269dc0b4bf113362fa8b73" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref></type>
        <definition>Double casacore::MVPosition::separation</definition>
        <argsstring>(const MVPosition &amp;other) const</argsstring>
        <name>separation</name>
        <param>
          <type>const <ref refid="classcasacore_1_1MVPosition" kindref="compound">MVPosition</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVPosition.h" line="245" column="10" bodyfile="casa/Quanta/MVPosition.cc" bodystart="398" bodyend="407"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVPosition_1aebc72b2827d1abd2909ae09779509f66" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacecasacore_1ad5429fefc00b65ab7ddb394a0e3fa410" kindref="member">Quantity</ref></type>
        <definition>Quantity casacore::MVPosition::separation</definition>
        <argsstring>(const MVPosition &amp;other, const Unit &amp;unit) const</argsstring>
        <name>separation</name>
        <param>
          <type>const <ref refid="classcasacore_1_1MVPosition" kindref="compound">MVPosition</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <param>
          <type>const <ref refid="classcasacore_1_1Unit" kindref="compound">Unit</ref> &amp;</type>
          <declname>unit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVPosition.h" line="246" column="12" bodyfile="casa/Quanta/MVPosition.cc" bodystart="409" bodyend="412"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVPosition_1ad048dab8bb58a2c8bb843e60a43e2a77" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classcasacore_1_1MVPosition" kindref="compound">MVPosition</ref></type>
        <definition>MVPosition casacore::MVPosition::crossProduct</definition>
        <argsstring>(const MVPosition &amp;other) const</argsstring>
        <name>crossProduct</name>
        <param>
          <type>const <ref refid="classcasacore_1_1MVPosition" kindref="compound">MVPosition</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVPosition.h" line="250" column="14" bodyfile="casa/Quanta/MVPosition.cc" bodystart="414" bodyend="420"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVPosition_1a2d85396aadbf283d3f65bf878ace4dab" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void casacore::MVPosition::print</definition>
        <argsstring>(ostream &amp;os) const</argsstring>
        <name>print</name>
        <reimplements refid="classcasacore_1_1MeasValue_1a716675982631833dc629df28d442b044">print</reimplements>
        <reimplementedby refid="classcasacore_1_1MVBaseline_1a09132e576b221ded1d4de3b95c93caa7">print</reimplementedby>
        <reimplementedby refid="classcasacore_1_1MVEarthMagnetic_1a98c1439ae2770d6c72a0a1d4780b7f61">print</reimplementedby>
        <reimplementedby refid="classcasacore_1_1MVuvw_1a38b78b6802c1395328664c88112dc9a9">print</reimplementedby>
        <param>
          <type>ostream &amp;</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVPosition.h" line="253" column="16" bodyfile="casa/Quanta/MVPosition.cc" bodystart="422" bodyend="424"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVPosition_1acc7d1937c1f01e2ec7b7ee5bec19f33b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classcasacore_1_1MeasValue" kindref="compound">MeasValue</ref> *</type>
        <definition>MeasValue * casacore::MVPosition::clone</definition>
        <argsstring>() const</argsstring>
        <name>clone</name>
        <reimplements refid="classcasacore_1_1MeasValue_1a5bba6fea0b17795f8653a130e0cfc224">clone</reimplements>
        <reimplementedby refid="classcasacore_1_1MVBaseline_1a6e17a8a5cb10c1e6facd5be0ef8aa108">clone</reimplementedby>
        <reimplementedby refid="classcasacore_1_1MVDirection_1a5c5a2c53dbac7ba214a304e568cd5151">clone</reimplementedby>
        <reimplementedby refid="classcasacore_1_1MVEarthMagnetic_1a45d5e10509e1a0f19c2fb59d61a11ebc">clone</reimplementedby>
        <reimplementedby refid="classcasacore_1_1MVuvw_1afbacc977a1e1449fa123c694c07a70ef">clone</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVPosition.h" line="255" column="21" bodyfile="casa/Quanta/MVPosition.cc" bodystart="426" bodyend="428"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVPosition_1a440d872c8a8f139d7b28d75bb8f81194" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classcasacore_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref> &gt;</type>
        <definition>Vector&lt; Double &gt; casacore::MVPosition::getVector</definition>
        <argsstring>() const</argsstring>
        <name>getVector</name>
        <reimplements refid="classcasacore_1_1MeasValue_1aaca85a82a8f69baad3083dd105fc579f">getVector</reimplements>
        <reimplementedby refid="classcasacore_1_1MVBaseline_1a5bd35dda80f1ac43b23761a4b45cc3ed">getVector</reimplementedby>
        <reimplementedby refid="classcasacore_1_1MVEarthMagnetic_1a221d4518ff69fe6f1999b376b1ef31e0">getVector</reimplementedby>
        <reimplementedby refid="classcasacore_1_1MVuvw_1a09a7dd676dd62301af38249da0155ac1">getVector</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVPosition.h" line="258" column="18" bodyfile="casa/Quanta/MVPosition.cc" bodystart="430" bodyend="432"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVPosition_1aabc5d0c324c0ffdedd7b2c39ac3f4c03" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void casacore::MVPosition::putVector</definition>
        <argsstring>(const Vector&lt; Double &gt; &amp;in)</argsstring>
        <name>putVector</name>
        <reimplements refid="classcasacore_1_1MeasValue_1a12d50c3e5db0e002f6575f4972b16eae">putVector</reimplements>
        <reimplementedby refid="classcasacore_1_1MVBaseline_1af88e504566e9f39d4ed4bbbe8ce182d8">putVector</reimplementedby>
        <reimplementedby refid="classcasacore_1_1MVEarthMagnetic_1a03419c7d6291ca53330b9aa2d3d36026">putVector</reimplementedby>
        <reimplementedby refid="classcasacore_1_1MVuvw_1ad0b48992dbf9f9e429ac0742f0db0680">putVector</reimplementedby>
        <param>
          <type>const <ref refid="classcasacore_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref> &gt; &amp;</type>
          <declname>in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVPosition.h" line="260" column="16" bodyfile="casa/Quanta/MVPosition.cc" bodystart="434" bodyend="441"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVPosition_1a843904cfb90a9c7f9db5cbe1de9d623f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classcasacore_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classcasacore_1_1Quantum" kindref="compound">Quantum</ref>&lt; <ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref> &gt; &gt;</type>
        <definition>Vector&lt; Quantum&lt; Double &gt; &gt; casacore::MVPosition::getRecordValue</definition>
        <argsstring>() const</argsstring>
        <name>getRecordValue</name>
        <reimplements refid="classcasacore_1_1MeasValue_1ac7bacf620e474a54fd4184b83ad8c3b3">getRecordValue</reimplements>
        <reimplementedby refid="classcasacore_1_1MVBaseline_1a94a7a207821fb18e6f4ac6379015a4d8">getRecordValue</reimplementedby>
        <reimplementedby refid="classcasacore_1_1MVDirection_1aaf8fd725f918f7d159e7d36623131fd4">getRecordValue</reimplementedby>
        <reimplementedby refid="classcasacore_1_1MVEarthMagnetic_1abc98c1b2930cf4a3e84428551e4cef32">getRecordValue</reimplementedby>
        <reimplementedby refid="classcasacore_1_1MVuvw_1a4fface1d5557f9e23379f78b3d499927">getRecordValue</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVPosition.h" line="265" column="18" bodyfile="casa/Quanta/MVPosition.cc" bodystart="443" bodyend="451"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVPosition_1a4d9eba179562560e2d436fa9439cde0f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classcasacore_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classcasacore_1_1Quantum" kindref="compound">Quantum</ref>&lt; <ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref> &gt; &gt;</type>
        <definition>Vector&lt; Quantum&lt; Double &gt; &gt; casacore::MVPosition::getXRecordValue</definition>
        <argsstring>() const</argsstring>
        <name>getXRecordValue</name>
        <reimplements refid="classcasacore_1_1MeasValue_1a05d77da82e54471f3ffc0d76133f94a2">getXRecordValue</reimplements>
        <reimplementedby refid="classcasacore_1_1MVBaseline_1a541cca6eac09da19a51ce173943c1a58">getXRecordValue</reimplementedby>
        <reimplementedby refid="classcasacore_1_1MVDirection_1a21e2a468b734a2df3ef60bd2f4c453a8">getXRecordValue</reimplementedby>
        <reimplementedby refid="classcasacore_1_1MVuvw_1ae296b317b0d0ca8c6cf82088a4a7b7cb">getXRecordValue</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVPosition.h" line="266" column="18" bodyfile="casa/Quanta/MVPosition.cc" bodystart="453" bodyend="459"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVPosition_1ac842e2c10b1eff8890b22a7582862594" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classcasacore_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classcasacore_1_1Quantum" kindref="compound">Quantum</ref>&lt; <ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref> &gt; &gt;</type>
        <definition>virtual Vector&lt;Quantum&lt;Double&gt; &gt; casacore::MVPosition::getTMRecordValue</definition>
        <argsstring>() const</argsstring>
        <name>getTMRecordValue</name>
        <reimplements refid="classcasacore_1_1MeasValue_1a401ff3a87fbaf2900d6c4bf6404ed531">getTMRecordValue</reimplements>
        <reimplementedby refid="classcasacore_1_1MVBaseline_1ac9cf1edb40a8ac76b2b9054dfaaa4de3">getTMRecordValue</reimplementedby>
        <reimplementedby refid="classcasacore_1_1MVDirection_1a807b9add56af7ad3f255e4ff5ec2bfa8">getTMRecordValue</reimplementedby>
        <reimplementedby refid="classcasacore_1_1MVuvw_1a0e8de0e2f913148abc8d086a0aec512d">getTMRecordValue</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVPosition.h" line="267" column="18" bodyfile="casa/Quanta/MVPosition.h" bodystart="267" bodyend="268"/>
      </memberdef>
      <memberdef kind="function" id="classcasacore_1_1MVPosition_1add77871b6ecafe2c6e5fdcae8071ae02" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespacecasacore_1abd5691f9e13acc90d901e4007740ff98" kindref="member">Bool</ref></type>
        <definition>Bool casacore::MVPosition::putValue</definition>
        <argsstring>(const Vector&lt; Quantum&lt; Double &gt; &gt; &amp;in)</argsstring>
        <name>putValue</name>
        <reimplements refid="classcasacore_1_1MeasValue_1abdc9f23a6f2583e686952d982812da69">putValue</reimplements>
        <reimplementedby refid="classcasacore_1_1MVBaseline_1ab3e6ae1727c837cd330dcdb3492a7395">putValue</reimplementedby>
        <reimplementedby refid="classcasacore_1_1MVDirection_1a446e9f5b82214ec1fe9360f60dd7a481">putValue</reimplementedby>
        <reimplementedby refid="classcasacore_1_1MVEarthMagnetic_1ab925471c2705a46ddf3e7cd595a7a006">putValue</reimplementedby>
        <reimplementedby refid="classcasacore_1_1MVuvw_1a14f3165226c6c99067b57f33cb79ebc3">putValue</reimplementedby>
        <param>
          <type>const <ref refid="classcasacore_1_1Vector" kindref="compound">Vector</ref>&lt; <ref refid="classcasacore_1_1Quantum" kindref="compound">Quantum</ref>&lt; <ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref> &gt; &gt; &amp;</type>
          <declname>in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVPosition.h" line="271" column="16" bodyfile="casa/Quanta/MVPosition.cc" bodystart="461" bodyend="514"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classcasacore_1_1MVPosition_1a3c609a0c15b7f843d08ef896beb087ed" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void casacore::MVPosition::assure</definition>
        <argsstring>(const MeasValue &amp;in)</argsstring>
        <name>assure</name>
        <param>
          <type>const <ref refid="classcasacore_1_1MeasValue" kindref="compound">MeasValue</ref> &amp;</type>
          <declname>in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVPosition.h" line="202" column="15" bodyfile="casa/Quanta/MVPosition.cc" bodystart="297" bodyend="301"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classcasacore_1_1MVPosition_1af3fc113852bc91a9e244e052db5c5418" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref></type>
        <definition>Double casacore::MVPosition::getLat</definition>
        <argsstring>(Double ln) const</argsstring>
        <name>getLat</name>
        <param>
          <type><ref refid="namespacecasacore_1ada1f75eb2b38067e3eb1af7f5d69ebb2" kindref="member">Double</ref></type>
          <declname>ln</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="casa/Quanta/MVPosition.h" line="276" column="10" bodyfile="casa/Quanta/MVPosition.cc" bodystart="364" bodyend="366"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="4">
        <label>casacore::MVDirection</label>
        <link refid="classcasacore_1_1MVDirection"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>casacore::MVuvw</label>
        <link refid="classcasacore_1_1MVuvw"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>casacore::MVPosition</label>
        <link refid="classcasacore_1_1MVPosition"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>casacore::MVBaseline</label>
        <link refid="classcasacore_1_1MVBaseline"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>casacore::MeasValue</label>
        <link refid="classcasacore_1_1MeasValue"/>
      </node>
      <node id="5">
        <label>casacore::MVEarthMagnetic</label>
        <link refid="classcasacore_1_1MVEarthMagnetic"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="8">
        <label>casacore::Array&lt; T &gt;::uninitializedType</label>
      </node>
      <node id="5">
        <label>casacore::ArrayBase</label>
        <link refid="classcasacore_1_1ArrayBase"/>
        <childnode refid="6" relation="usage">
          <edgelabel>inc_p</edgelabel>
          <edgelabel>length_p</edgelabel>
          <edgelabel>originalLength_p</edgelabel>
          <edgelabel>steps_p</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>casacore::IPosition</label>
        <link refid="classcasacore_1_1IPosition"/>
      </node>
      <node id="1">
        <label>casacore::MVPosition</label>
        <link refid="classcasacore_1_1MVPosition"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>xyz</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>std::shared_ptr&lt; casacore::arrays_internal::Storage&lt; Double &gt; &gt;</label>
      </node>
      <node id="3">
        <label>casacore::Vector&lt; Double &gt;</label>
        <link refid="classcasacore_1_1Vector"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>casacore::Array&lt; Double &gt;</label>
        <link refid="classcasacore_1_1Array"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>data_p</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>uninitialized</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>casacore::MeasValue</label>
        <link refid="classcasacore_1_1MeasValue"/>
      </node>
    </collaborationgraph>
    <location file="casa/Quanta/MVPosition.h" line="111" column="1" bodyfile="casa/Quanta/MVPosition.h" bodystart="111" bodyend="280"/>
    <listofallmembers>
      <member refid="classcasacore_1_1MVPosition_1acabaf16edfb55c50ed5cf957fd9cd577" prot="public" virt="virtual"><scope>casacore::MVPosition</scope><name>adjust</name></member>
      <member refid="classcasacore_1_1MVPosition_1afe19293de36f0fafd5c970405febc65b" prot="public" virt="virtual"><scope>casacore::MVPosition</scope><name>adjust</name></member>
      <member refid="classcasacore_1_1MVPosition_1a3c609a0c15b7f843d08ef896beb087ed" prot="public" virt="non-virtual"><scope>casacore::MVPosition</scope><name>assure</name></member>
      <member refid="classcasacore_1_1MVPosition_1acc7d1937c1f01e2ec7b7ee5bec19f33b" prot="public" virt="virtual"><scope>casacore::MVPosition</scope><name>clone</name></member>
      <member refid="classcasacore_1_1MVPosition_1ad048dab8bb58a2c8bb843e60a43e2a77" prot="public" virt="non-virtual"><scope>casacore::MVPosition</scope><name>crossProduct</name></member>
      <member refid="classcasacore_1_1MeasValue_1ad7a17bbec23ae48f4dafa55dbaea9b66" prot="public" virt="non-virtual"><scope>casacore::MVPosition</scope><name>dummy_constr</name></member>
      <member refid="classcasacore_1_1MeasValue_1add17b17e91be8f0d36e718a93514eca1" prot="public" virt="non-virtual"><scope>casacore::MVPosition</scope><name>dummy_operator</name></member>
      <member refid="classcasacore_1_1MVPosition_1af14c399933fd965b78d78165f7ee7eec" prot="public" virt="non-virtual"><scope>casacore::MVPosition</scope><name>get</name></member>
      <member refid="classcasacore_1_1MVPosition_1a181392cbcfaa7e9575de117d5723f2eb" prot="public" virt="non-virtual"><scope>casacore::MVPosition</scope><name>getAngle</name></member>
      <member refid="classcasacore_1_1MVPosition_1a0dc6ce6020102f886ff92e117841a29e" prot="public" virt="non-virtual"><scope>casacore::MVPosition</scope><name>getAngle</name></member>
      <member refid="classcasacore_1_1MVPosition_1a7cda3724c193cb0b71d75f97acd9f469" prot="public" virt="non-virtual"><scope>casacore::MVPosition</scope><name>getLat</name></member>
      <member refid="classcasacore_1_1MVPosition_1ae903227f05ba60df59c6650295e8f748" prot="public" virt="non-virtual"><scope>casacore::MVPosition</scope><name>getLat</name></member>
      <member refid="classcasacore_1_1MVPosition_1af3fc113852bc91a9e244e052db5c5418" prot="protected" virt="non-virtual"><scope>casacore::MVPosition</scope><name>getLat</name></member>
      <member refid="classcasacore_1_1MVPosition_1a8c8e3d9c1a33bde4aecfedddda0834ec" prot="public" virt="non-virtual"><scope>casacore::MVPosition</scope><name>getLength</name></member>
      <member refid="classcasacore_1_1MVPosition_1a379e91bf2e7f118f0d9b3e898b8a1240" prot="public" virt="non-virtual"><scope>casacore::MVPosition</scope><name>getLength</name></member>
      <member refid="classcasacore_1_1MVPosition_1a340743eb299e59b169c26814c0e19bbb" prot="public" virt="non-virtual"><scope>casacore::MVPosition</scope><name>getLong</name></member>
      <member refid="classcasacore_1_1MVPosition_1af45d337c5cbb6f1871a483d3fa9f6846" prot="public" virt="non-virtual"><scope>casacore::MVPosition</scope><name>getLong</name></member>
      <member refid="classcasacore_1_1MVPosition_1a843904cfb90a9c7f9db5cbe1de9d623f" prot="public" virt="virtual"><scope>casacore::MVPosition</scope><name>getRecordValue</name></member>
      <member refid="classcasacore_1_1MVPosition_1ac842e2c10b1eff8890b22a7582862594" prot="public" virt="virtual"><scope>casacore::MVPosition</scope><name>getTMRecordValue</name></member>
      <member refid="classcasacore_1_1MVPosition_1a858dc38da7d951497ec06a2a5ee93294" prot="public" virt="non-virtual"><scope>casacore::MVPosition</scope><name>getValue</name></member>
      <member refid="classcasacore_1_1MVPosition_1a440d872c8a8f139d7b28d75bb8f81194" prot="public" virt="virtual"><scope>casacore::MVPosition</scope><name>getVector</name></member>
      <member refid="classcasacore_1_1MVPosition_1a4d9eba179562560e2d436fa9439cde0f" prot="public" virt="virtual"><scope>casacore::MVPosition</scope><name>getXRecordValue</name></member>
      <member refid="classcasacore_1_1MVPosition_1a3c8062b428e9a9ab2d8010cdbd79dde6" prot="public" virt="non-virtual"><scope>casacore::MVPosition</scope><name>hiLimit</name></member>
      <member refid="classcasacore_1_1MVPosition_1a68d9e9d68fcfc5ede207cf9295cd2c41" prot="public" virt="non-virtual"><scope>casacore::MVPosition</scope><name>loLimit</name></member>
      <member refid="classcasacore_1_1MVPosition_1a21326a2f7332098fd7a9025aa488519d" prot="public" virt="non-virtual"><scope>casacore::MVPosition</scope><name>MVPosition</name></member>
      <member refid="classcasacore_1_1MVPosition_1aa9269c847a2cd9befd81b498925ba39b" prot="public" virt="non-virtual"><scope>casacore::MVPosition</scope><name>MVPosition</name></member>
      <member refid="classcasacore_1_1MVPosition_1ae0939f0ca999f393e8fee53c38a3eb48" prot="public" virt="non-virtual"><scope>casacore::MVPosition</scope><name>MVPosition</name></member>
      <member refid="classcasacore_1_1MVPosition_1a6ea4ef67e7b39a6268c00740360c4dcb" prot="public" virt="non-virtual"><scope>casacore::MVPosition</scope><name>MVPosition</name></member>
      <member refid="classcasacore_1_1MVPosition_1acc76d6d52f06f0cdcbb57da724d32068" prot="public" virt="non-virtual"><scope>casacore::MVPosition</scope><name>MVPosition</name></member>
      <member refid="classcasacore_1_1MVPosition_1a5614b478f83000a84da696019936c62d" prot="public" virt="non-virtual"><scope>casacore::MVPosition</scope><name>MVPosition</name></member>
      <member refid="classcasacore_1_1MVPosition_1a56011736511128a89cfbe7e82eae16f4" prot="public" virt="non-virtual"><scope>casacore::MVPosition</scope><name>MVPosition</name></member>
      <member refid="classcasacore_1_1MVPosition_1a76b6aa4b72bdf076ba43dbe5f5fca679" prot="public" virt="non-virtual"><scope>casacore::MVPosition</scope><name>MVPosition</name></member>
      <member refid="classcasacore_1_1MVPosition_1acb0e68e6099edd60cca074dddf61c4ca" prot="public" virt="non-virtual"><scope>casacore::MVPosition</scope><name>MVPosition</name></member>
      <member refid="classcasacore_1_1MVPosition_1a894245bef2da6c29b3897f4ee7289ec7" prot="public" virt="non-virtual"><scope>casacore::MVPosition</scope><name>MVPosition</name></member>
      <member refid="classcasacore_1_1MVPosition_1ad4d29cd21fac6b76c7465696975635a7" prot="public" virt="non-virtual"><scope>casacore::MVPosition</scope><name>MVPosition</name></member>
      <member refid="classcasacore_1_1MVPosition_1ac687b17a87c1bffd54b561315a5534c0" prot="public" virt="non-virtual"><scope>casacore::MVPosition</scope><name>near</name></member>
      <member refid="classcasacore_1_1MVPosition_1ad8e6b7ef461f05b6fb23a187eda833f1" prot="public" virt="non-virtual"><scope>casacore::MVPosition</scope><name>near</name></member>
      <member refid="classcasacore_1_1MVPosition_1a981526d5e89d26d7f0c27656be3a5a75" prot="public" virt="non-virtual"><scope>casacore::MVPosition</scope><name>nearAbs</name></member>
      <member refid="classcasacore_1_1MVPosition_1adbd146002c4d08ff4c51d3ddaa90ef13" prot="public" virt="non-virtual"><scope>casacore::MVPosition</scope><name>operator!=</name></member>
      <member refid="classcasacore_1_1MVPosition_1a05b7e5a99b2ddb5f92a665eb060c775d" prot="public" virt="non-virtual"><scope>casacore::MVPosition</scope><name>operator()</name></member>
      <member refid="classcasacore_1_1MVPosition_1a2cdc2fb21309cecf4d25421d07de4341" prot="public" virt="non-virtual"><scope>casacore::MVPosition</scope><name>operator()</name></member>
      <member refid="classcasacore_1_1MVPosition_1a331c61874c56a808eaa72f1ec8677db1" prot="public" virt="non-virtual"><scope>casacore::MVPosition</scope><name>operator*</name></member>
      <member refid="classcasacore_1_1MVPosition_1a0e2795ad561ed43fe17bf59601b01653" prot="public" virt="non-virtual"><scope>casacore::MVPosition</scope><name>operator*=</name></member>
      <member refid="classcasacore_1_1MVPosition_1ab0a7b145d31dcbacf3ec9509be83fcc7" prot="public" virt="non-virtual"><scope>casacore::MVPosition</scope><name>operator*=</name></member>
      <member refid="classcasacore_1_1MVPosition_1aed1b9388f3e6144aac671eda4b21de92" prot="public" virt="non-virtual"><scope>casacore::MVPosition</scope><name>operator+</name></member>
      <member refid="classcasacore_1_1MVPosition_1ae823d852d1f752b309f65ebe3bf8728c" prot="public" virt="non-virtual"><scope>casacore::MVPosition</scope><name>operator+=</name></member>
      <member refid="classcasacore_1_1MVPosition_1ad4d8feae36e9c509725c0be48d6d4266" prot="public" virt="non-virtual"><scope>casacore::MVPosition</scope><name>operator-</name></member>
      <member refid="classcasacore_1_1MVPosition_1a33eef1c5cfe38c71c5dbccc7686a79ef" prot="public" virt="non-virtual"><scope>casacore::MVPosition</scope><name>operator-</name></member>
      <member refid="classcasacore_1_1MVPosition_1a7cc1203b0b1ba466be58ee8826783b1e" prot="public" virt="non-virtual"><scope>casacore::MVPosition</scope><name>operator-=</name></member>
      <member refid="classcasacore_1_1MVPosition_1aaa0aedf3ab1c4e42082b297ea3638ade" prot="public" virt="non-virtual"><scope>casacore::MVPosition</scope><name>operator=</name></member>
      <member refid="classcasacore_1_1MVPosition_1a7d75af8c83d440e3642f80845aa8d5b2" prot="public" virt="non-virtual"><scope>casacore::MVPosition</scope><name>operator==</name></member>
      <member refid="classcasacore_1_1MVPosition_1a798d187490d288620eeea965a01920b8" prot="public" virt="non-virtual"><scope>casacore::MVPosition</scope><name>positionAngle</name></member>
      <member refid="classcasacore_1_1MVPosition_1aa34e24929cc4d6f5f67b83273eefdbca" prot="public" virt="non-virtual"><scope>casacore::MVPosition</scope><name>positionAngle</name></member>
      <member refid="classcasacore_1_1MVPosition_1a2d85396aadbf283d3f65bf878ace4dab" prot="public" virt="virtual"><scope>casacore::MVPosition</scope><name>print</name></member>
      <member refid="classcasacore_1_1MVPosition_1add77871b6ecafe2c6e5fdcae8071ae02" prot="public" virt="virtual"><scope>casacore::MVPosition</scope><name>putValue</name></member>
      <member refid="classcasacore_1_1MVPosition_1aabc5d0c324c0ffdedd7b2c39ac3f4c03" prot="public" virt="virtual"><scope>casacore::MVPosition</scope><name>putVector</name></member>
      <member refid="classcasacore_1_1MVPosition_1aebfd2bfb4a082d8d13421e77cea3d594" prot="public" virt="virtual"><scope>casacore::MVPosition</scope><name>radius</name></member>
      <member refid="classcasacore_1_1MVPosition_1aa23861f4d6690deef7859592d8b30168" prot="public" virt="virtual"><scope>casacore::MVPosition</scope><name>readjust</name></member>
      <member refid="classcasacore_1_1MVPosition_1aac8200d657269dc0b4bf113362fa8b73" prot="public" virt="non-virtual"><scope>casacore::MVPosition</scope><name>separation</name></member>
      <member refid="classcasacore_1_1MVPosition_1aebc72b2827d1abd2909ae09779509f66" prot="public" virt="non-virtual"><scope>casacore::MVPosition</scope><name>separation</name></member>
      <member refid="classcasacore_1_1MVPosition_1a551dd71b35743a75bf63ecf8acc1941f" prot="protected" virt="non-virtual"><scope>casacore::MVPosition</scope><name>xyz</name></member>
      <member refid="classcasacore_1_1MeasValue_1a70316dc2a17d2d9471f858df3001817c" prot="public" virt="virtual"><scope>casacore::MVPosition</scope><name>~MeasValue</name></member>
      <member refid="classcasacore_1_1MVPosition_1aa2ad44e41979adc63cc6419111badf04" prot="public" virt="virtual"><scope>casacore::MVPosition</scope><name>~MVPosition</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
