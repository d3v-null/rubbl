<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classdyscostman_1_1WeightEncoder" kind="class" language="C++" prot="public">
    <compoundname>dyscostman::WeightEncoder</compoundname>
    <includes refid="weightencoder_8h" local="no">weightencoder.h</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classdyscostman_1_1WeightEncoder_1a200aabef9b7e7d3f0201c149fac483bc" prot="public" static="no">
        <type>T</type>
        <definition>typedef T dyscostman::WeightEncoder&lt; T &gt;::value_t</definition>
        <argsstring></argsstring>
        <name>value_t</name>
        <briefdescription>
<para>Value type of the original weights (a floating point value). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tables/Dysco/weightencoder.h" line="19" column="13" bodyfile="tables/Dysco/weightencoder.h" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classdyscostman_1_1WeightEncoder_1a0f748700bea767138ff2773766ad028d" prot="public" static="no">
        <type>unsigned</type>
        <definition>typedef unsigned dyscostman::WeightEncoder&lt; T &gt;::symbol_t</definition>
        <argsstring></argsstring>
        <name>symbol_t</name>
        <briefdescription>
<para>Value type of the symbols to which the weights are encoded. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tables/Dysco/weightencoder.h" line="21" column="20" bodyfile="tables/Dysco/weightencoder.h" bodystart="21" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classdyscostman_1_1WeightEncoder_1af765b0cdc4be86e3075f106b28d937de" prot="private" static="no" mutable="no">
        <type>unsigned</type>
        <definition>unsigned dyscostman::WeightEncoder&lt; T &gt;::_quantCount</definition>
        <argsstring></argsstring>
        <name>_quantCount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tables/Dysco/weightencoder.h" line="80" column="12" bodyfile="tables/Dysco/weightencoder.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classdyscostman_1_1WeightEncoder_1a7fa1d89e5781678b23c4c5e87e9a4219" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>dyscostman::WeightEncoder&lt; T &gt;::WeightEncoder</definition>
        <argsstring>(unsigned quantCount)</argsstring>
        <name>WeightEncoder</name>
        <param>
          <type>unsigned</type>
          <declname>quantCount</declname>
        </param>
        <briefdescription>
<para>Construct a new encoder with the given quantization count. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>quantCount</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of quantization levels. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tables/Dysco/weightencoder.h" line="26" column="12" bodyfile="tables/Dysco/weightencoder.h" bodystart="26" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="classdyscostman_1_1WeightEncoder_1a457b8ec423991db2e09bc60acb39817b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void dyscostman::WeightEncoder&lt; T &gt;::Encode</definition>
        <argsstring>(value_t &amp;scaleVal, std::vector&lt; symbol_t &gt; &amp;dest, const std::vector&lt; value_t &gt; &amp;input) const</argsstring>
        <name>Encode</name>
        <param>
          <type><ref refid="classdyscostman_1_1WeightEncoder_1a200aabef9b7e7d3f0201c149fac483bc" kindref="member">value_t</ref> &amp;</type>
          <declname>scaleVal</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="classdyscostman_1_1WeightEncoder_1a0f748700bea767138ff2773766ad028d" kindref="member">symbol_t</ref> &gt; &amp;</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="classdyscostman_1_1WeightEncoder_1a200aabef9b7e7d3f0201c149fac483bc" kindref="member">value_t</ref> &gt; &amp;</type>
          <declname>input</declname>
        </param>
        <briefdescription>
<para>Encodes a vector of values. </para>
        </briefdescription>
        <detaileddescription>
<para>Will return a vector of symbols and a scaling value. Together, these can be used to get the original values back (with some loss due to quantization), by using <ref refid="classdyscostman_1_1WeightEncoder_1a269d6a6ef887a4af1b11dcf9de2d327f" kindref="member">Decode()</ref>. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>scaleVal</parametername>
</parameternamelist>
<parameterdescription>
<para>Will receive the scale value for the vector of values </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dest</parametername>
</parameternamelist>
<parameterdescription>
<para>The destinal vector with symbols. It is assumed that it is already of the right size, i.e., equal to input.size(). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>input</parametername>
</parameternamelist>
<parameterdescription>
<para>The input array of values to be encoded. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tables/Dysco/weightencoder.h" line="37" column="8" bodyfile="tables/Dysco/weightencoder.h" bodystart="37" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="classdyscostman_1_1WeightEncoder_1a269d6a6ef887a4af1b11dcf9de2d327f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void dyscostman::WeightEncoder&lt; T &gt;::Decode</definition>
        <argsstring>(std::vector&lt; value_t &gt; &amp;dest, value_t scaleVal, const std::vector&lt; symbol_t &gt; &amp;input) const</argsstring>
        <name>Decode</name>
        <param>
          <type>std::vector&lt; <ref refid="classdyscostman_1_1WeightEncoder_1a200aabef9b7e7d3f0201c149fac483bc" kindref="member">value_t</ref> &gt; &amp;</type>
          <declname>dest</declname>
        </param>
        <param>
          <type><ref refid="classdyscostman_1_1WeightEncoder_1a200aabef9b7e7d3f0201c149fac483bc" kindref="member">value_t</ref></type>
          <declname>scaleVal</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="classdyscostman_1_1WeightEncoder_1a0f748700bea767138ff2773766ad028d" kindref="member">symbol_t</ref> &gt; &amp;</type>
          <declname>input</declname>
        </param>
        <briefdescription>
<para>Decode a previously encoded value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dest</parametername>
</parameternamelist>
<parameterdescription>
<para>The destination for the decoded weight values. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>scaleVal</parametername>
</parameternamelist>
<parameterdescription>
<para>The scale value for the vector of values. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>input</parametername>
</parameternamelist>
<parameterdescription>
<para>The input symbols to be decoded. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="classdyscostman_1_1WeightEncoder_1a457b8ec423991db2e09bc60acb39817b" kindref="member">Encode()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tables/Dysco/weightencoder.h" line="66" column="8" bodyfile="tables/Dysco/weightencoder.h" bodystart="66" bodyend="77"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Encoder for visibility weights. </para>
    </briefdescription>
    <detaileddescription>
<para>It&apos;s a linear quantizer for non-negative values, with a single scaling factor. The scaling factor will be such that the max value will still fit. <simplesect kind="author"><para>Andr√© Offringa </para>
</simplesect>
</para>
    </detaileddescription>
    <location file="tables/Dysco/weightencoder.h" line="16" column="1" bodyfile="tables/Dysco/weightencoder.h" bodystart="16" bodyend="81"/>
    <listofallmembers>
      <member refid="classdyscostman_1_1WeightEncoder_1af765b0cdc4be86e3075f106b28d937de" prot="private" virt="non-virtual"><scope>dyscostman::WeightEncoder</scope><name>_quantCount</name></member>
      <member refid="classdyscostman_1_1WeightEncoder_1a269d6a6ef887a4af1b11dcf9de2d327f" prot="public" virt="non-virtual"><scope>dyscostman::WeightEncoder</scope><name>Decode</name></member>
      <member refid="classdyscostman_1_1WeightEncoder_1a457b8ec423991db2e09bc60acb39817b" prot="public" virt="non-virtual"><scope>dyscostman::WeightEncoder</scope><name>Encode</name></member>
      <member refid="classdyscostman_1_1WeightEncoder_1a0f748700bea767138ff2773766ad028d" prot="public" virt="non-virtual"><scope>dyscostman::WeightEncoder</scope><name>symbol_t</name></member>
      <member refid="classdyscostman_1_1WeightEncoder_1a200aabef9b7e7d3f0201c149fac483bc" prot="public" virt="non-virtual"><scope>dyscostman::WeightEncoder</scope><name>value_t</name></member>
      <member refid="classdyscostman_1_1WeightEncoder_1a7fa1d89e5781678b23c4c5e87e9a4219" prot="public" virt="non-virtual"><scope>dyscostman::WeightEncoder</scope><name>WeightEncoder</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
