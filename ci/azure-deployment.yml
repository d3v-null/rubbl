# Deployment workflows, run when all CI tests pass on the `master` or `rc
# branches. NB: right now we do nothing on `master`! (But we need a dummy job to
# keep Pipelines happy.) That could change.

parameters:
  - name: isMainDev
    type: boolean
    default: false
  - name: isRelease
    type: boolean
    default: false
  
jobs:

- ${{ if parameters.isMainDev }}:
  # For merges to `master`, we don't have any continuous-depoloyment logic to run.
  - job: dummy_setup_only
    pool:
      vmImage: ubuntu-20.04
    steps:
    - template: azure-job-setup.yml

- ${{ if parameters.isRelease }}:
  - job: branch_and_tag
    pool:
      vmImage: ubuntu-20.04
    variables:
    - group: Deployment Credentials
    steps:
    - template: azure-job-setup.yml
      parameters:
        setupGit: true
    - bash: |
        set -xeou pipefail
        cranko release-workflow tag
        git push --tags origin release:release
      displayName: Tag and push
      env:
        GITHUB_TOKEN: $(GITHUB_TOKEN)

  - job: cargo_publish
    pool:
      vmImage: ubuntu-20.04
    variables:
    - group: Deployment Credentials
    steps:
    - template: azure-job-setup.yml
    - bash: |
        set -xeou pipefail
        cranko cargo foreach-released --pause=30 -- publish --no-verify
      displayName: Publish updated Cargo crates
      env:
        CARGO_REGISTRY_TOKEN: $(CARGO_REGISTRY_TOKEN)

  - job: github_releases
    dependsOn: branch_and_tag # otherwise, GitHub creates the tag itself
    pool:
      vmImage: ubuntu-20.04
    variables:
    - group: Deployment Credentials
    steps:
    - template: azure-job-setup.yml
      parameters:
        setupGit: true
    - bash: |
        set -xeou pipefail
        cranko github create-releases
      displayName: Create GitHub releases
      env:
        GITHUB_TOKEN: $(GITHUB_TOKEN)
